%% -*- coding: utf-8 -*-
%% Automatically generated, do not edit
%% Generated by gpb_compile version 3.25.2
-module(dj_protocol).

-export([encode_msg/1, encode_msg/2]).
-export([decode_msg/2, decode_msg/3]).
-export([merge_msgs/2, merge_msgs/3]).
-export([verify_msg/1, verify_msg/2]).
-export([get_msg_defs/0]).
-export([get_msg_names/0]).
-export([get_enum_names/0]).
-export([find_msg_def/1, fetch_msg_def/1]).
-export([find_enum_def/1, fetch_enum_def/1]).
-export([enum_symbol_by_value/2, enum_value_by_symbol/2]).
-export([enum_symbol_by_value_NextOperate/1, enum_value_by_symbol_NextOperate/1]).
-export([enum_symbol_by_value_Action/1, enum_value_by_symbol_Action/1]).
-export([enum_symbol_by_value_PropertyType/1, enum_value_by_symbol_PropertyType/1]).
-export([enum_symbol_by_value_SpecialEquipmentGenerateType/1, enum_value_by_symbol_SpecialEquipmentGenerateType/1]).
-export([enum_symbol_by_value_PartyMessageType/1, enum_value_by_symbol_PartyMessageType/1]).
-export([get_service_names/0]).
-export([get_service_def/1]).
-export([get_rpc_names/1]).
-export([find_rpc_def/2, fetch_rpc_def/2]).
-export([get_package_name/0]).
-export([gpb_version_as_string/0, gpb_version_as_list/0]).

-include("dj_protocol.hrl").
-include("gpb.hrl").



-spec encode_msg(_) -> binary().
encode_msg(Msg) -> encode_msg(Msg, []).


-spec encode_msg(_, list()) -> binary().
encode_msg(Msg, Opts) ->
    case proplists:get_bool(verify, Opts) of
      true -> verify_msg(Msg, Opts);
      false -> ok
    end,
    TrUserData = proplists:get_value(user_data, Opts),
    case Msg of
      #'ProtoPartyInfo.PartyMember.BuyInfo'{} ->
	  'e_msg_ProtoPartyInfo.PartyMember.BuyInfo'(Msg,
						     TrUserData);
      #'ProtoPartyInfo.PartyMember'{} ->
	  'e_msg_ProtoPartyInfo.PartyMember'(Msg, TrUserData);
      #'ProtoPartyInfo'{} ->
	  e_msg_ProtoPartyInfo(Msg, TrUserData);
      #'ProtoPartyMessageNotify.PartyMessage'{} ->
	  'e_msg_ProtoPartyMessageNotify.PartyMessage'(Msg,
						       TrUserData);
      #'ProtoPartyMessageNotify'{} ->
	  e_msg_ProtoPartyMessageNotify(Msg, TrUserData);
      #'ProtoPartyCreateResponse'{} ->
	  e_msg_ProtoPartyCreateResponse(Msg, TrUserData);
      #'ProtoPartyBuyRequest'{} ->
	  e_msg_ProtoPartyBuyRequest(Msg, TrUserData);
      #'ProtoPartyChatRequest'{} ->
	  e_msg_ProtoPartyChatRequest(Msg, TrUserData);
      #'ProtoPartyQuitRequest'{} ->
	  e_msg_ProtoPartyQuitRequest(Msg, TrUserData);
      #'ProtoPartyRoomResponse.PartyRoom'{} ->
	  'e_msg_ProtoPartyRoomResponse.PartyRoom'(Msg,
						   TrUserData);
      #'ProtoSocketServerNotify'{} ->
	  e_msg_ProtoSocketServerNotify(Msg, TrUserData);
      #'ProtoUTCNotify'{} ->
	  e_msg_ProtoUTCNotify(Msg, TrUserData);
      #'ProtoPingResponse'{} ->
	  e_msg_ProtoPingResponse(Msg, TrUserData);
      #'ProtoSyncResponse'{} ->
	  e_msg_ProtoSyncResponse(Msg, TrUserData);
      #'ProtoPartyDismissResponse'{} ->
	  e_msg_ProtoPartyDismissResponse(Msg, TrUserData);
      #'ProtoPartyStartRequest'{} ->
	  e_msg_ProtoPartyStartRequest(Msg, TrUserData);
      #'ProtoPartyKickRequest'{} ->
	  e_msg_ProtoPartyKickRequest(Msg, TrUserData);
      #'ProtoPartyCreateRequest'{} ->
	  e_msg_ProtoPartyCreateRequest(Msg, TrUserData);
      #'ProtoSocketConnectRequest'{} ->
	  e_msg_ProtoSocketConnectRequest(Msg, TrUserData);
      #'ProtoPartyInfoNotify'{} ->
	  e_msg_ProtoPartyInfoNotify(Msg, TrUserData);
      #'ProtoSocketConnectResponse'{} ->
	  e_msg_ProtoSocketConnectResponse(Msg, TrUserData);
      #'ProtoPartyBuyResponse'{} ->
	  e_msg_ProtoPartyBuyResponse(Msg, TrUserData);
      #'ProtoPartyDismissRequest'{} ->
	  e_msg_ProtoPartyDismissRequest(Msg, TrUserData);
      #'ProtoPartyJoinRequest'{} ->
	  e_msg_ProtoPartyJoinRequest(Msg, TrUserData);
      #'ProtoTimeRange'{} ->
	  e_msg_ProtoTimeRange(Msg, TrUserData);
      #'ProtoPartyNotify'{} ->
	  e_msg_ProtoPartyNotify(Msg, TrUserData);
      #'ProtoPartyChatResponse'{} ->
	  e_msg_ProtoPartyChatResponse(Msg, TrUserData);
      #'ProtoPartyKickResponse'{} ->
	  e_msg_ProtoPartyKickResponse(Msg, TrUserData);
      #'ProtoPartyQuitResponse'{} ->
	  e_msg_ProtoPartyQuitResponse(Msg, TrUserData);
      #'ProtoPartyJoinResponse'{} ->
	  e_msg_ProtoPartyJoinResponse(Msg, TrUserData);
      #'ProtoPartyRoomResponse'{} ->
	  e_msg_ProtoPartyRoomResponse(Msg, TrUserData);
      #'ProtoPartyStartResponse'{} ->
	  e_msg_ProtoPartyStartResponse(Msg, TrUserData);
      #'ProtoPartyRoomRequest'{} ->
	  e_msg_ProtoPartyRoomRequest(Msg, TrUserData);
      #'ProtoSyncRequest'{} ->
	  e_msg_ProtoSyncRequest(Msg, TrUserData);
      #'ProtoPingRequest'{} ->
	  e_msg_ProtoPingRequest(Msg, TrUserData)
    end.



'e_msg_ProtoPartyInfo.PartyMember.BuyInfo'(Msg,
					   TrUserData) ->
    'e_msg_ProtoPartyInfo.PartyMember.BuyInfo'(Msg, <<>>,
					       TrUserData).


'e_msg_ProtoPartyInfo.PartyMember.BuyInfo'(#'ProtoPartyInfo.PartyMember.BuyInfo'{buy_id
										     =
										     F1,
										 buy_times
										     =
										     F2},
					   Bin, TrUserData) ->
    B1 = begin
	   TrF1 = id(F1, TrUserData),
	   e_type_int32(TrF1, <<Bin/binary, 8>>)
	 end,
    begin
      TrF2 = id(F2, TrUserData),
      e_type_int32(TrF2, <<B1/binary, 16>>)
    end.

'e_msg_ProtoPartyInfo.PartyMember'(Msg, TrUserData) ->
    'e_msg_ProtoPartyInfo.PartyMember'(Msg, <<>>,
				       TrUserData).


'e_msg_ProtoPartyInfo.PartyMember'(#'ProtoPartyInfo.PartyMember'{id
								     = F1,
								 flag = F2,
								 name = F3,
								 seat_id = F4,
								 buy_info = F5},
				   Bin, TrUserData) ->
    B1 = begin
	   TrF1 = id(F1, TrUserData),
	   e_type_string(TrF1, <<Bin/binary, 10>>)
	 end,
    B2 = begin
	   TrF2 = id(F2, TrUserData),
	   e_type_int32(TrF2, <<B1/binary, 16>>)
	 end,
    B3 = begin
	   TrF3 = id(F3, TrUserData),
	   e_type_string(TrF3, <<B2/binary, 26>>)
	 end,
    B4 = begin
	   TrF4 = id(F4, TrUserData),
	   e_type_int32(TrF4, <<B3/binary, 32>>)
	 end,
    begin
      TrF5 = id(F5, TrUserData),
      if TrF5 == [] -> B4;
	 true ->
	     'e_field_ProtoPartyInfo.PartyMember_buy_info'(TrF5, B4,
							   TrUserData)
      end
    end.

e_msg_ProtoPartyInfo(Msg, TrUserData) ->
    e_msg_ProtoPartyInfo(Msg, <<>>, TrUserData).


e_msg_ProtoPartyInfo(#'ProtoPartyInfo'{level = F1,
				       end_at = F2, members = F3},
		     Bin, TrUserData) ->
    B1 = begin
	   TrF1 = id(F1, TrUserData),
	   e_type_int32(TrF1, <<Bin/binary, 8>>)
	 end,
    B2 = begin
	   TrF2 = id(F2, TrUserData),
	   e_type_int64(TrF2, <<B1/binary, 16>>)
	 end,
    begin
      TrF3 = id(F3, TrUserData),
      if TrF3 == [] -> B2;
	 true ->
	     e_field_ProtoPartyInfo_members(TrF3, B2, TrUserData)
      end
    end.

'e_msg_ProtoPartyMessageNotify.PartyMessage'(Msg,
					     TrUserData) ->
    'e_msg_ProtoPartyMessageNotify.PartyMessage'(Msg, <<>>,
						 TrUserData).


'e_msg_ProtoPartyMessageNotify.PartyMessage'(#'ProtoPartyMessageNotify.PartyMessage'{tp
											 =
											 F1,
										     args
											 =
											 F2},
					     Bin, TrUserData) ->
    B1 = begin
	   TrF1 = id(F1, TrUserData),
	   e_enum_PartyMessageType(TrF1, <<Bin/binary, 8>>)
	 end,
    begin
      TrF2 = id(F2, TrUserData),
      if TrF2 == [] -> B1;
	 true ->
	     'e_field_ProtoPartyMessageNotify.PartyMessage_args'(TrF2,
								 B1, TrUserData)
      end
    end.

e_msg_ProtoPartyMessageNotify(Msg, TrUserData) ->
    e_msg_ProtoPartyMessageNotify(Msg, <<>>, TrUserData).


e_msg_ProtoPartyMessageNotify(#'ProtoPartyMessageNotify'{session
							     = F1,
							 act = F2,
							 messages = F3},
			      Bin, TrUserData) ->
    B1 = begin
	   TrF1 = id(F1, TrUserData),
	   e_type_bytes(TrF1, <<Bin/binary, 10>>)
	 end,
    B2 = begin
	   TrF2 = id(F2, TrUserData),
	   e_enum_Action(TrF2, <<B1/binary, 16>>)
	 end,
    begin
      TrF3 = id(F3, TrUserData),
      if TrF3 == [] -> B2;
	 true ->
	     e_field_ProtoPartyMessageNotify_messages(TrF3, B2,
						      TrUserData)
      end
    end.

e_msg_ProtoPartyCreateResponse(Msg, TrUserData) ->
    e_msg_ProtoPartyCreateResponse(Msg, <<>>, TrUserData).


e_msg_ProtoPartyCreateResponse(#'ProtoPartyCreateResponse'{ret
							       = F1,
							   session = F2},
			       Bin, TrUserData) ->
    B1 = begin
	   TrF1 = id(F1, TrUserData),
	   e_type_int32(TrF1, <<Bin/binary, 8>>)
	 end,
    begin
      TrF2 = id(F2, TrUserData),
      e_type_bytes(TrF2, <<B1/binary, 18>>)
    end.

e_msg_ProtoPartyBuyRequest(Msg, TrUserData) ->
    e_msg_ProtoPartyBuyRequest(Msg, <<>>, TrUserData).


e_msg_ProtoPartyBuyRequest(#'ProtoPartyBuyRequest'{session
						       = F1,
						   buy_id = F2},
			   Bin, TrUserData) ->
    B1 = begin
	   TrF1 = id(F1, TrUserData),
	   e_type_bytes(TrF1, <<Bin/binary, 10>>)
	 end,
    begin
      TrF2 = id(F2, TrUserData),
      e_type_int32(TrF2, <<B1/binary, 16>>)
    end.

e_msg_ProtoPartyChatRequest(Msg, TrUserData) ->
    e_msg_ProtoPartyChatRequest(Msg, <<>>, TrUserData).


e_msg_ProtoPartyChatRequest(#'ProtoPartyChatRequest'{session
							 = F1,
						     text = F2},
			    Bin, TrUserData) ->
    B1 = begin
	   TrF1 = id(F1, TrUserData),
	   e_type_bytes(TrF1, <<Bin/binary, 10>>)
	 end,
    begin
      TrF2 = id(F2, TrUserData),
      e_type_string(TrF2, <<B1/binary, 18>>)
    end.

e_msg_ProtoPartyQuitRequest(Msg, TrUserData) ->
    e_msg_ProtoPartyQuitRequest(Msg, <<>>, TrUserData).


e_msg_ProtoPartyQuitRequest(#'ProtoPartyQuitRequest'{session
							 = F1},
			    Bin, TrUserData) ->
    begin
      TrF1 = id(F1, TrUserData),
      e_type_bytes(TrF1, <<Bin/binary, 10>>)
    end.

'e_msg_ProtoPartyRoomResponse.PartyRoom'(Msg,
					 TrUserData) ->
    'e_msg_ProtoPartyRoomResponse.PartyRoom'(Msg, <<>>,
					     TrUserData).


'e_msg_ProtoPartyRoomResponse.PartyRoom'(#'ProtoPartyRoomResponse.PartyRoom'{owner_id
										 =
										 F1,
									     owner_name
										 =
										 F2,
									     level
										 =
										 F3,
									     current_amount
										 =
										 F4},
					 Bin, TrUserData) ->
    B1 = begin
	   TrF1 = id(F1, TrUserData),
	   e_type_string(TrF1, <<Bin/binary, 10>>)
	 end,
    B2 = begin
	   TrF2 = id(F2, TrUserData),
	   e_type_string(TrF2, <<B1/binary, 18>>)
	 end,
    B3 = begin
	   TrF3 = id(F3, TrUserData),
	   e_type_int32(TrF3, <<B2/binary, 24>>)
	 end,
    begin
      TrF4 = id(F4, TrUserData),
      e_type_int32(TrF4, <<B3/binary, 32>>)
    end.

e_msg_ProtoSocketServerNotify(Msg, TrUserData) ->
    e_msg_ProtoSocketServerNotify(Msg, <<>>, TrUserData).


e_msg_ProtoSocketServerNotify(#'ProtoSocketServerNotify'{session
							     = F1,
							 ip = F2, port = F3},
			      Bin, TrUserData) ->
    B1 = begin
	   TrF1 = id(F1, TrUserData),
	   e_type_bytes(TrF1, <<Bin/binary, 10>>)
	 end,
    B2 = begin
	   TrF2 = id(F2, TrUserData),
	   e_type_string(TrF2, <<B1/binary, 18>>)
	 end,
    begin
      TrF3 = id(F3, TrUserData),
      e_type_int32(TrF3, <<B2/binary, 24>>)
    end.

e_msg_ProtoUTCNotify(Msg, TrUserData) ->
    e_msg_ProtoUTCNotify(Msg, <<>>, TrUserData).


e_msg_ProtoUTCNotify(#'ProtoUTCNotify'{session = F1,
				       timestamp = F2},
		     Bin, TrUserData) ->
    B1 = begin
	   TrF1 = id(F1, TrUserData),
	   e_type_bytes(TrF1, <<Bin/binary, 10>>)
	 end,
    begin
      TrF2 = id(F2, TrUserData),
      e_type_int64(TrF2, <<B1/binary, 16>>)
    end.

e_msg_ProtoPingResponse(Msg, TrUserData) ->
    e_msg_ProtoPingResponse(Msg, <<>>, TrUserData).


e_msg_ProtoPingResponse(#'ProtoPingResponse'{ret = F1,
					     session = F2},
			Bin, TrUserData) ->
    B1 = begin
	   TrF1 = id(F1, TrUserData),
	   e_type_int32(TrF1, <<Bin/binary, 8>>)
	 end,
    begin
      TrF2 = id(F2, TrUserData),
      e_type_bytes(TrF2, <<B1/binary, 18>>)
    end.

e_msg_ProtoSyncResponse(Msg, TrUserData) ->
    e_msg_ProtoSyncResponse(Msg, <<>>, TrUserData).


e_msg_ProtoSyncResponse(#'ProtoSyncResponse'{ret = F1,
					     session = F2, param = F3},
			Bin, TrUserData) ->
    B1 = begin
	   TrF1 = id(F1, TrUserData),
	   e_type_int32(TrF1, <<Bin/binary, 8>>)
	 end,
    B2 = begin
	   TrF2 = id(F2, TrUserData),
	   e_type_bytes(TrF2, <<B1/binary, 18>>)
	 end,
    if F3 == undefined -> B2;
       true ->
	   TrF3 = id(F3, TrUserData),
	   e_type_int32(TrF3, <<B2/binary, 24>>)
    end.

e_msg_ProtoPartyDismissResponse(Msg, TrUserData) ->
    e_msg_ProtoPartyDismissResponse(Msg, <<>>, TrUserData).


e_msg_ProtoPartyDismissResponse(#'ProtoPartyDismissResponse'{ret
								 = F1,
							     session = F2},
				Bin, TrUserData) ->
    B1 = begin
	   TrF1 = id(F1, TrUserData),
	   e_type_int32(TrF1, <<Bin/binary, 8>>)
	 end,
    begin
      TrF2 = id(F2, TrUserData),
      e_type_bytes(TrF2, <<B1/binary, 18>>)
    end.

e_msg_ProtoPartyStartRequest(Msg, TrUserData) ->
    e_msg_ProtoPartyStartRequest(Msg, <<>>, TrUserData).


e_msg_ProtoPartyStartRequest(#'ProtoPartyStartRequest'{session
							   = F1},
			     Bin, TrUserData) ->
    begin
      TrF1 = id(F1, TrUserData),
      e_type_bytes(TrF1, <<Bin/binary, 10>>)
    end.

e_msg_ProtoPartyKickRequest(Msg, TrUserData) ->
    e_msg_ProtoPartyKickRequest(Msg, <<>>, TrUserData).


e_msg_ProtoPartyKickRequest(#'ProtoPartyKickRequest'{session
							 = F1,
						     id = F2},
			    Bin, TrUserData) ->
    B1 = begin
	   TrF1 = id(F1, TrUserData),
	   e_type_bytes(TrF1, <<Bin/binary, 10>>)
	 end,
    begin
      TrF2 = id(F2, TrUserData),
      e_type_string(TrF2, <<B1/binary, 18>>)
    end.

e_msg_ProtoPartyCreateRequest(Msg, TrUserData) ->
    e_msg_ProtoPartyCreateRequest(Msg, <<>>, TrUserData).


e_msg_ProtoPartyCreateRequest(#'ProtoPartyCreateRequest'{session
							     = F1,
							 id = F2},
			      Bin, TrUserData) ->
    B1 = begin
	   TrF1 = id(F1, TrUserData),
	   e_type_bytes(TrF1, <<Bin/binary, 10>>)
	 end,
    begin
      TrF2 = id(F2, TrUserData),
      e_type_int32(TrF2, <<B1/binary, 16>>)
    end.

e_msg_ProtoSocketConnectRequest(Msg, TrUserData) ->
    e_msg_ProtoSocketConnectRequest(Msg, <<>>, TrUserData).


e_msg_ProtoSocketConnectRequest(#'ProtoSocketConnectRequest'{session
								 = F1},
				Bin, TrUserData) ->
    begin
      TrF1 = id(F1, TrUserData),
      e_type_bytes(TrF1, <<Bin/binary, 10>>)
    end.

e_msg_ProtoPartyInfoNotify(Msg, TrUserData) ->
    e_msg_ProtoPartyInfoNotify(Msg, <<>>, TrUserData).


e_msg_ProtoPartyInfoNotify(#'ProtoPartyInfoNotify'{session
						       = F1,
						   talent_id = F2,
						   talent_end_at = F3,
						   remained_create_times = F4,
						   remained_join_times = F5,
						   info = F6},
			   Bin, TrUserData) ->
    B1 = begin
	   TrF1 = id(F1, TrUserData),
	   e_type_bytes(TrF1, <<Bin/binary, 10>>)
	 end,
    B2 = begin
	   TrF2 = id(F2, TrUserData),
	   e_type_int32(TrF2, <<B1/binary, 16>>)
	 end,
    B3 = begin
	   TrF3 = id(F3, TrUserData),
	   e_type_int64(TrF3, <<B2/binary, 24>>)
	 end,
    B4 = begin
	   TrF4 = id(F4, TrUserData),
	   e_type_int32(TrF4, <<B3/binary, 32>>)
	 end,
    B5 = begin
	   TrF5 = id(F5, TrUserData),
	   e_type_int32(TrF5, <<B4/binary, 40>>)
	 end,
    if F6 == undefined -> B5;
       true ->
	   TrF6 = id(F6, TrUserData),
	   e_mfield_ProtoPartyInfoNotify_info(TrF6,
					      <<B5/binary, 50>>, TrUserData)
    end.

e_msg_ProtoSocketConnectResponse(Msg, TrUserData) ->
    e_msg_ProtoSocketConnectResponse(Msg, <<>>, TrUserData).


e_msg_ProtoSocketConnectResponse(#'ProtoSocketConnectResponse'{ret
								   = F1,
							       session = F2,
							       next_try_at =
								   F3},
				 Bin, TrUserData) ->
    B1 = begin
	   TrF1 = id(F1, TrUserData),
	   e_type_int32(TrF1, <<Bin/binary, 8>>)
	 end,
    B2 = begin
	   TrF2 = id(F2, TrUserData),
	   e_type_bytes(TrF2, <<B1/binary, 18>>)
	 end,
    begin
      TrF3 = id(F3, TrUserData),
      e_type_int64(TrF3, <<B2/binary, 24>>)
    end.

e_msg_ProtoPartyBuyResponse(Msg, TrUserData) ->
    e_msg_ProtoPartyBuyResponse(Msg, <<>>, TrUserData).


e_msg_ProtoPartyBuyResponse(#'ProtoPartyBuyResponse'{ret
							 = F1,
						     session = F2},
			    Bin, TrUserData) ->
    B1 = begin
	   TrF1 = id(F1, TrUserData),
	   e_type_int32(TrF1, <<Bin/binary, 8>>)
	 end,
    begin
      TrF2 = id(F2, TrUserData),
      e_type_bytes(TrF2, <<B1/binary, 18>>)
    end.

e_msg_ProtoPartyDismissRequest(Msg, TrUserData) ->
    e_msg_ProtoPartyDismissRequest(Msg, <<>>, TrUserData).


e_msg_ProtoPartyDismissRequest(#'ProtoPartyDismissRequest'{session
							       = F1},
			       Bin, TrUserData) ->
    begin
      TrF1 = id(F1, TrUserData),
      e_type_bytes(TrF1, <<Bin/binary, 10>>)
    end.

e_msg_ProtoPartyJoinRequest(Msg, TrUserData) ->
    e_msg_ProtoPartyJoinRequest(Msg, <<>>, TrUserData).


e_msg_ProtoPartyJoinRequest(#'ProtoPartyJoinRequest'{session
							 = F1,
						     owner_id = F2},
			    Bin, TrUserData) ->
    B1 = begin
	   TrF1 = id(F1, TrUserData),
	   e_type_bytes(TrF1, <<Bin/binary, 10>>)
	 end,
    begin
      TrF2 = id(F2, TrUserData),
      e_type_string(TrF2, <<B1/binary, 18>>)
    end.

e_msg_ProtoTimeRange(Msg, TrUserData) ->
    e_msg_ProtoTimeRange(Msg, <<>>, TrUserData).


e_msg_ProtoTimeRange(#'ProtoTimeRange'{start_at = F1,
				       close_at = F2},
		     Bin, TrUserData) ->
    B1 = begin
	   TrF1 = id(F1, TrUserData),
	   e_type_int64(TrF1, <<Bin/binary, 8>>)
	 end,
    begin
      TrF2 = id(F2, TrUserData),
      e_type_int64(TrF2, <<B1/binary, 16>>)
    end.

e_msg_ProtoPartyNotify(Msg, TrUserData) ->
    e_msg_ProtoPartyNotify(Msg, <<>>, TrUserData).


e_msg_ProtoPartyNotify(#'ProtoPartyNotify'{session = F1,
					   time_range = F2, talent_id = F3,
					   talent_end_at = F4,
					   remained_create_times = F5,
					   remained_join_times = F6},
		       Bin, TrUserData) ->
    B1 = begin
	   TrF1 = id(F1, TrUserData),
	   e_type_bytes(TrF1, <<Bin/binary, 10>>)
	 end,
    B2 = begin
	   TrF2 = id(F2, TrUserData),
	   if TrF2 == [] -> B1;
	      true ->
		  e_field_ProtoPartyNotify_time_range(TrF2, B1,
						      TrUserData)
	   end
	 end,
    B3 = begin
	   TrF3 = id(F3, TrUserData),
	   e_type_int32(TrF3, <<B2/binary, 24>>)
	 end,
    B4 = begin
	   TrF4 = id(F4, TrUserData),
	   e_type_int64(TrF4, <<B3/binary, 32>>)
	 end,
    B5 = begin
	   TrF5 = id(F5, TrUserData),
	   e_type_int32(TrF5, <<B4/binary, 40>>)
	 end,
    begin
      TrF6 = id(F6, TrUserData),
      e_type_int32(TrF6, <<B5/binary, 48>>)
    end.

e_msg_ProtoPartyChatResponse(Msg, TrUserData) ->
    e_msg_ProtoPartyChatResponse(Msg, <<>>, TrUserData).


e_msg_ProtoPartyChatResponse(#'ProtoPartyChatResponse'{ret
							   = F1,
						       session = F2},
			     Bin, TrUserData) ->
    B1 = begin
	   TrF1 = id(F1, TrUserData),
	   e_type_int32(TrF1, <<Bin/binary, 8>>)
	 end,
    begin
      TrF2 = id(F2, TrUserData),
      e_type_bytes(TrF2, <<B1/binary, 18>>)
    end.

e_msg_ProtoPartyKickResponse(Msg, TrUserData) ->
    e_msg_ProtoPartyKickResponse(Msg, <<>>, TrUserData).


e_msg_ProtoPartyKickResponse(#'ProtoPartyKickResponse'{ret
							   = F1,
						       session = F2},
			     Bin, TrUserData) ->
    B1 = begin
	   TrF1 = id(F1, TrUserData),
	   e_type_int32(TrF1, <<Bin/binary, 8>>)
	 end,
    begin
      TrF2 = id(F2, TrUserData),
      e_type_bytes(TrF2, <<B1/binary, 18>>)
    end.

e_msg_ProtoPartyQuitResponse(Msg, TrUserData) ->
    e_msg_ProtoPartyQuitResponse(Msg, <<>>, TrUserData).


e_msg_ProtoPartyQuitResponse(#'ProtoPartyQuitResponse'{ret
							   = F1,
						       session = F2},
			     Bin, TrUserData) ->
    B1 = begin
	   TrF1 = id(F1, TrUserData),
	   e_type_int32(TrF1, <<Bin/binary, 8>>)
	 end,
    begin
      TrF2 = id(F2, TrUserData),
      e_type_bytes(TrF2, <<B1/binary, 18>>)
    end.

e_msg_ProtoPartyJoinResponse(Msg, TrUserData) ->
    e_msg_ProtoPartyJoinResponse(Msg, <<>>, TrUserData).


e_msg_ProtoPartyJoinResponse(#'ProtoPartyJoinResponse'{ret
							   = F1,
						       session = F2},
			     Bin, TrUserData) ->
    B1 = begin
	   TrF1 = id(F1, TrUserData),
	   e_type_int32(TrF1, <<Bin/binary, 8>>)
	 end,
    begin
      TrF2 = id(F2, TrUserData),
      e_type_bytes(TrF2, <<B1/binary, 18>>)
    end.

e_msg_ProtoPartyRoomResponse(Msg, TrUserData) ->
    e_msg_ProtoPartyRoomResponse(Msg, <<>>, TrUserData).


e_msg_ProtoPartyRoomResponse(#'ProtoPartyRoomResponse'{ret
							   = F1,
						       session = F2,
						       rooms = F3},
			     Bin, TrUserData) ->
    B1 = begin
	   TrF1 = id(F1, TrUserData),
	   e_type_int32(TrF1, <<Bin/binary, 8>>)
	 end,
    B2 = begin
	   TrF2 = id(F2, TrUserData),
	   e_type_bytes(TrF2, <<B1/binary, 18>>)
	 end,
    begin
      TrF3 = id(F3, TrUserData),
      if TrF3 == [] -> B2;
	 true ->
	     e_field_ProtoPartyRoomResponse_rooms(TrF3, B2,
						  TrUserData)
      end
    end.

e_msg_ProtoPartyStartResponse(Msg, TrUserData) ->
    e_msg_ProtoPartyStartResponse(Msg, <<>>, TrUserData).


e_msg_ProtoPartyStartResponse(#'ProtoPartyStartResponse'{ret
							     = F1,
							 session = F2},
			      Bin, TrUserData) ->
    B1 = begin
	   TrF1 = id(F1, TrUserData),
	   e_type_int32(TrF1, <<Bin/binary, 8>>)
	 end,
    begin
      TrF2 = id(F2, TrUserData),
      e_type_bytes(TrF2, <<B1/binary, 18>>)
    end.

e_msg_ProtoPartyRoomRequest(Msg, TrUserData) ->
    e_msg_ProtoPartyRoomRequest(Msg, <<>>, TrUserData).


e_msg_ProtoPartyRoomRequest(#'ProtoPartyRoomRequest'{session
							 = F1},
			    Bin, TrUserData) ->
    begin
      TrF1 = id(F1, TrUserData),
      e_type_bytes(TrF1, <<Bin/binary, 10>>)
    end.

e_msg_ProtoSyncRequest(Msg, TrUserData) ->
    e_msg_ProtoSyncRequest(Msg, <<>>, TrUserData).


e_msg_ProtoSyncRequest(#'ProtoSyncRequest'{session = F1,
					   param = F2},
		       Bin, TrUserData) ->
    B1 = begin
	   TrF1 = id(F1, TrUserData),
	   e_type_bytes(TrF1, <<Bin/binary, 10>>)
	 end,
    begin
      TrF2 = id(F2, TrUserData),
      e_type_int32(TrF2, <<B1/binary, 16>>)
    end.

e_msg_ProtoPingRequest(Msg, TrUserData) ->
    e_msg_ProtoPingRequest(Msg, <<>>, TrUserData).


e_msg_ProtoPingRequest(#'ProtoPingRequest'{session =
					       F1},
		       Bin, TrUserData) ->
    begin
      TrF1 = id(F1, TrUserData),
      e_type_bytes(TrF1, <<Bin/binary, 10>>)
    end.

'e_mfield_ProtoPartyInfo.PartyMember_buy_info'(Msg, Bin,
					       TrUserData) ->
    SubBin = 'e_msg_ProtoPartyInfo.PartyMember.BuyInfo'(Msg,
							<<>>, TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

'e_field_ProtoPartyInfo.PartyMember_buy_info'([Elem
					       | Rest],
					      Bin, TrUserData) ->
    Bin2 = <<Bin/binary, 42>>,
    Bin3 =
	'e_mfield_ProtoPartyInfo.PartyMember_buy_info'(id(Elem,
							  TrUserData),
						       Bin2, TrUserData),
    'e_field_ProtoPartyInfo.PartyMember_buy_info'(Rest,
						  Bin3, TrUserData);
'e_field_ProtoPartyInfo.PartyMember_buy_info'([], Bin,
					      _TrUserData) ->
    Bin.

e_mfield_ProtoPartyInfo_members(Msg, Bin, TrUserData) ->
    SubBin = 'e_msg_ProtoPartyInfo.PartyMember'(Msg, <<>>,
						TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

e_field_ProtoPartyInfo_members([Elem | Rest], Bin,
			       TrUserData) ->
    Bin2 = <<Bin/binary, 26>>,
    Bin3 = e_mfield_ProtoPartyInfo_members(id(Elem,
					      TrUserData),
					   Bin2, TrUserData),
    e_field_ProtoPartyInfo_members(Rest, Bin3, TrUserData);
e_field_ProtoPartyInfo_members([], Bin, _TrUserData) ->
    Bin.

'e_field_ProtoPartyMessageNotify.PartyMessage_args'([Elem
						     | Rest],
						    Bin, TrUserData) ->
    Bin2 = <<Bin/binary, 18>>,
    Bin3 = e_type_string(id(Elem, TrUserData), Bin2),
    'e_field_ProtoPartyMessageNotify.PartyMessage_args'(Rest,
							Bin3, TrUserData);
'e_field_ProtoPartyMessageNotify.PartyMessage_args'([],
						    Bin, _TrUserData) ->
    Bin.

e_mfield_ProtoPartyMessageNotify_messages(Msg, Bin,
					  TrUserData) ->
    SubBin =
	'e_msg_ProtoPartyMessageNotify.PartyMessage'(Msg, <<>>,
						     TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

e_field_ProtoPartyMessageNotify_messages([Elem | Rest],
					 Bin, TrUserData) ->
    Bin2 = <<Bin/binary, 26>>,
    Bin3 =
	e_mfield_ProtoPartyMessageNotify_messages(id(Elem,
						     TrUserData),
						  Bin2, TrUserData),
    e_field_ProtoPartyMessageNotify_messages(Rest, Bin3,
					     TrUserData);
e_field_ProtoPartyMessageNotify_messages([], Bin,
					 _TrUserData) ->
    Bin.

e_mfield_ProtoPartyInfoNotify_info(Msg, Bin,
				   TrUserData) ->
    SubBin = e_msg_ProtoPartyInfo(Msg, <<>>, TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

e_mfield_ProtoPartyNotify_time_range(Msg, Bin,
				     TrUserData) ->
    SubBin = e_msg_ProtoTimeRange(Msg, <<>>, TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

e_field_ProtoPartyNotify_time_range([Elem | Rest], Bin,
				    TrUserData) ->
    Bin2 = <<Bin/binary, 18>>,
    Bin3 = e_mfield_ProtoPartyNotify_time_range(id(Elem,
						   TrUserData),
						Bin2, TrUserData),
    e_field_ProtoPartyNotify_time_range(Rest, Bin3,
					TrUserData);
e_field_ProtoPartyNotify_time_range([], Bin,
				    _TrUserData) ->
    Bin.

e_mfield_ProtoPartyRoomResponse_rooms(Msg, Bin,
				      TrUserData) ->
    SubBin = 'e_msg_ProtoPartyRoomResponse.PartyRoom'(Msg,
						      <<>>, TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

e_field_ProtoPartyRoomResponse_rooms([Elem | Rest], Bin,
				     TrUserData) ->
    Bin2 = <<Bin/binary, 26>>,
    Bin3 = e_mfield_ProtoPartyRoomResponse_rooms(id(Elem,
						    TrUserData),
						 Bin2, TrUserData),
    e_field_ProtoPartyRoomResponse_rooms(Rest, Bin3,
					 TrUserData);
e_field_ProtoPartyRoomResponse_rooms([], Bin,
				     _TrUserData) ->
    Bin.



e_enum_Action('ACT_INIT', Bin) -> <<Bin/binary, 1>>;
e_enum_Action('ACT_UPDATE', Bin) -> <<Bin/binary, 2>>;
e_enum_Action(V, Bin) -> e_varint(V, Bin).

e_enum_PartyMessageType('PARTY_MESSAGE_TYPE_CHAT',
			Bin) ->
    <<Bin/binary, 1>>;
e_enum_PartyMessageType('PARTY_MESSAGE_TYPE_BUY',
			Bin) ->
    <<Bin/binary, 2>>;
e_enum_PartyMessageType('PARTY_MESSAGE_TYPE_JOIN',
			Bin) ->
    <<Bin/binary, 3>>;
e_enum_PartyMessageType('PARTY_MESSAGE_TYPE_LEAVE',
			Bin) ->
    <<Bin/binary, 4>>;
e_enum_PartyMessageType(V, Bin) -> e_varint(V, Bin).

e_type_int32(Value, Bin)
    when 0 =< Value, Value =< 127 ->
    <<Bin/binary, Value>>;
e_type_int32(Value, Bin) ->
    <<N:64/unsigned-native>> = <<Value:64/signed-native>>,
    e_varint(N, Bin).

e_type_int64(Value, Bin)
    when 0 =< Value, Value =< 127 ->
    <<Bin/binary, Value>>;
e_type_int64(Value, Bin) ->
    <<N:64/unsigned-native>> = <<Value:64/signed-native>>,
    e_varint(N, Bin).

e_type_string(S, Bin) ->
    Utf8 = unicode:characters_to_binary(S),
    Bin2 = e_varint(byte_size(Utf8), Bin),
    <<Bin2/binary, Utf8/binary>>.

e_type_bytes(Bytes, Bin) when is_binary(Bytes) ->
    Bin2 = e_varint(byte_size(Bytes), Bin),
    <<Bin2/binary, Bytes/binary>>;
e_type_bytes(Bytes, Bin) when is_list(Bytes) ->
    BytesBin = iolist_to_binary(Bytes),
    Bin2 = e_varint(byte_size(BytesBin), Bin),
    <<Bin2/binary, BytesBin/binary>>.

e_varint(N, Bin) when N =< 127 -> <<Bin/binary, N>>;
e_varint(N, Bin) ->
    Bin2 = <<Bin/binary, (N band 127 bor 128)>>,
    e_varint(N bsr 7, Bin2).



decode_msg(Bin, MsgName) when is_binary(Bin) ->
    decode_msg(Bin, MsgName, []).

decode_msg(Bin, MsgName, Opts) when is_binary(Bin) ->
    TrUserData = proplists:get_value(user_data, Opts),
    case MsgName of
      'ProtoPartyInfo.PartyMember.BuyInfo' ->
	  'd_msg_ProtoPartyInfo.PartyMember.BuyInfo'(Bin,
						     TrUserData);
      'ProtoPartyInfo.PartyMember' ->
	  'd_msg_ProtoPartyInfo.PartyMember'(Bin, TrUserData);
      'ProtoPartyInfo' ->
	  d_msg_ProtoPartyInfo(Bin, TrUserData);
      'ProtoPartyMessageNotify.PartyMessage' ->
	  'd_msg_ProtoPartyMessageNotify.PartyMessage'(Bin,
						       TrUserData);
      'ProtoPartyMessageNotify' ->
	  d_msg_ProtoPartyMessageNotify(Bin, TrUserData);
      'ProtoPartyCreateResponse' ->
	  d_msg_ProtoPartyCreateResponse(Bin, TrUserData);
      'ProtoPartyBuyRequest' ->
	  d_msg_ProtoPartyBuyRequest(Bin, TrUserData);
      'ProtoPartyChatRequest' ->
	  d_msg_ProtoPartyChatRequest(Bin, TrUserData);
      'ProtoPartyQuitRequest' ->
	  d_msg_ProtoPartyQuitRequest(Bin, TrUserData);
      'ProtoPartyRoomResponse.PartyRoom' ->
	  'd_msg_ProtoPartyRoomResponse.PartyRoom'(Bin,
						   TrUserData);
      'ProtoSocketServerNotify' ->
	  d_msg_ProtoSocketServerNotify(Bin, TrUserData);
      'ProtoUTCNotify' ->
	  d_msg_ProtoUTCNotify(Bin, TrUserData);
      'ProtoPingResponse' ->
	  d_msg_ProtoPingResponse(Bin, TrUserData);
      'ProtoSyncResponse' ->
	  d_msg_ProtoSyncResponse(Bin, TrUserData);
      'ProtoPartyDismissResponse' ->
	  d_msg_ProtoPartyDismissResponse(Bin, TrUserData);
      'ProtoPartyStartRequest' ->
	  d_msg_ProtoPartyStartRequest(Bin, TrUserData);
      'ProtoPartyKickRequest' ->
	  d_msg_ProtoPartyKickRequest(Bin, TrUserData);
      'ProtoPartyCreateRequest' ->
	  d_msg_ProtoPartyCreateRequest(Bin, TrUserData);
      'ProtoSocketConnectRequest' ->
	  d_msg_ProtoSocketConnectRequest(Bin, TrUserData);
      'ProtoPartyInfoNotify' ->
	  d_msg_ProtoPartyInfoNotify(Bin, TrUserData);
      'ProtoSocketConnectResponse' ->
	  d_msg_ProtoSocketConnectResponse(Bin, TrUserData);
      'ProtoPartyBuyResponse' ->
	  d_msg_ProtoPartyBuyResponse(Bin, TrUserData);
      'ProtoPartyDismissRequest' ->
	  d_msg_ProtoPartyDismissRequest(Bin, TrUserData);
      'ProtoPartyJoinRequest' ->
	  d_msg_ProtoPartyJoinRequest(Bin, TrUserData);
      'ProtoTimeRange' ->
	  d_msg_ProtoTimeRange(Bin, TrUserData);
      'ProtoPartyNotify' ->
	  d_msg_ProtoPartyNotify(Bin, TrUserData);
      'ProtoPartyChatResponse' ->
	  d_msg_ProtoPartyChatResponse(Bin, TrUserData);
      'ProtoPartyKickResponse' ->
	  d_msg_ProtoPartyKickResponse(Bin, TrUserData);
      'ProtoPartyQuitResponse' ->
	  d_msg_ProtoPartyQuitResponse(Bin, TrUserData);
      'ProtoPartyJoinResponse' ->
	  d_msg_ProtoPartyJoinResponse(Bin, TrUserData);
      'ProtoPartyRoomResponse' ->
	  d_msg_ProtoPartyRoomResponse(Bin, TrUserData);
      'ProtoPartyStartResponse' ->
	  d_msg_ProtoPartyStartResponse(Bin, TrUserData);
      'ProtoPartyRoomRequest' ->
	  d_msg_ProtoPartyRoomRequest(Bin, TrUserData);
      'ProtoSyncRequest' ->
	  d_msg_ProtoSyncRequest(Bin, TrUserData);
      'ProtoPingRequest' ->
	  d_msg_ProtoPingRequest(Bin, TrUserData)
    end.



'd_msg_ProtoPartyInfo.PartyMember.BuyInfo'(Bin,
					   TrUserData) ->
    'dfp_read_field_def_ProtoPartyInfo.PartyMember.BuyInfo'(Bin,
							    0, 0,
							    id(undefined,
							       TrUserData),
							    id(undefined,
							       TrUserData),
							    TrUserData).

'dfp_read_field_def_ProtoPartyInfo.PartyMember.BuyInfo'(<<8,
							  Rest/binary>>,
							Z1, Z2, F1, F2,
							TrUserData) ->
    'd_field_ProtoPartyInfo.PartyMember.BuyInfo_buy_id'(Rest,
							Z1, Z2, F1, F2,
							TrUserData);
'dfp_read_field_def_ProtoPartyInfo.PartyMember.BuyInfo'(<<16,
							  Rest/binary>>,
							Z1, Z2, F1, F2,
							TrUserData) ->
    'd_field_ProtoPartyInfo.PartyMember.BuyInfo_buy_times'(Rest,
							   Z1, Z2, F1, F2,
							   TrUserData);
'dfp_read_field_def_ProtoPartyInfo.PartyMember.BuyInfo'(<<>>,
							0, 0, F1, F2, _) ->
    #'ProtoPartyInfo.PartyMember.BuyInfo'{buy_id = F1,
					  buy_times = F2};
'dfp_read_field_def_ProtoPartyInfo.PartyMember.BuyInfo'(Other,
							Z1, Z2, F1, F2,
							TrUserData) ->
    'dg_read_field_def_ProtoPartyInfo.PartyMember.BuyInfo'(Other,
							   Z1, Z2, F1, F2,
							   TrUserData).

'dg_read_field_def_ProtoPartyInfo.PartyMember.BuyInfo'(<<1:1,
							 X:7, Rest/binary>>,
						       N, Acc, F1, F2,
						       TrUserData)
    when N < 32 - 7 ->
    'dg_read_field_def_ProtoPartyInfo.PartyMember.BuyInfo'(Rest,
							   N + 7, X bsl N + Acc,
							   F1, F2, TrUserData);
'dg_read_field_def_ProtoPartyInfo.PartyMember.BuyInfo'(<<0:1,
							 X:7, Rest/binary>>,
						       N, Acc, F1, F2,
						       TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
      8 ->
	  'd_field_ProtoPartyInfo.PartyMember.BuyInfo_buy_id'(Rest,
							      0, 0, F1, F2,
							      TrUserData);
      16 ->
	  'd_field_ProtoPartyInfo.PartyMember.BuyInfo_buy_times'(Rest,
								 0, 0, F1, F2,
								 TrUserData);
      _ ->
	  case Key band 7 of
	    0 ->
		'skip_varint_ProtoPartyInfo.PartyMember.BuyInfo'(Rest,
								 0, 0, F1, F2,
								 TrUserData);
	    1 ->
		'skip_64_ProtoPartyInfo.PartyMember.BuyInfo'(Rest, 0, 0,
							     F1, F2,
							     TrUserData);
	    2 ->
		'skip_length_delimited_ProtoPartyInfo.PartyMember.BuyInfo'(Rest,
									   0, 0,
									   F1,
									   F2,
									   TrUserData);
	    5 ->
		'skip_32_ProtoPartyInfo.PartyMember.BuyInfo'(Rest, 0, 0,
							     F1, F2, TrUserData)
	  end
    end;
'dg_read_field_def_ProtoPartyInfo.PartyMember.BuyInfo'(<<>>,
						       0, 0, F1, F2, _) ->
    #'ProtoPartyInfo.PartyMember.BuyInfo'{buy_id = F1,
					  buy_times = F2}.

'd_field_ProtoPartyInfo.PartyMember.BuyInfo_buy_id'(<<1:1,
						      X:7, Rest/binary>>,
						    N, Acc, F1, F2, TrUserData)
    when N < 57 ->
    'd_field_ProtoPartyInfo.PartyMember.BuyInfo_buy_id'(Rest,
							N + 7, X bsl N + Acc,
							F1, F2, TrUserData);
'd_field_ProtoPartyInfo.PartyMember.BuyInfo_buy_id'(<<0:1,
						      X:7, Rest/binary>>,
						    N, Acc, _, F2,
						    TrUserData) ->
    <<NewFValue:32/signed-native>> = <<(X bsl N +
					  Acc):32/unsigned-native>>,
    'dfp_read_field_def_ProtoPartyInfo.PartyMember.BuyInfo'(Rest,
							    0, 0, NewFValue, F2,
							    TrUserData).


'd_field_ProtoPartyInfo.PartyMember.BuyInfo_buy_times'(<<1:1,
							 X:7, Rest/binary>>,
						       N, Acc, F1, F2,
						       TrUserData)
    when N < 57 ->
    'd_field_ProtoPartyInfo.PartyMember.BuyInfo_buy_times'(Rest,
							   N + 7, X bsl N + Acc,
							   F1, F2, TrUserData);
'd_field_ProtoPartyInfo.PartyMember.BuyInfo_buy_times'(<<0:1,
							 X:7, Rest/binary>>,
						       N, Acc, F1, _,
						       TrUserData) ->
    <<NewFValue:32/signed-native>> = <<(X bsl N +
					  Acc):32/unsigned-native>>,
    'dfp_read_field_def_ProtoPartyInfo.PartyMember.BuyInfo'(Rest,
							    0, 0, F1, NewFValue,
							    TrUserData).


'skip_varint_ProtoPartyInfo.PartyMember.BuyInfo'(<<1:1,
						   _:7, Rest/binary>>,
						 Z1, Z2, F1, F2, TrUserData) ->
    'skip_varint_ProtoPartyInfo.PartyMember.BuyInfo'(Rest,
						     Z1, Z2, F1, F2,
						     TrUserData);
'skip_varint_ProtoPartyInfo.PartyMember.BuyInfo'(<<0:1,
						   _:7, Rest/binary>>,
						 Z1, Z2, F1, F2, TrUserData) ->
    'dfp_read_field_def_ProtoPartyInfo.PartyMember.BuyInfo'(Rest,
							    Z1, Z2, F1, F2,
							    TrUserData).


'skip_length_delimited_ProtoPartyInfo.PartyMember.BuyInfo'(<<1:1,
							     X:7, Rest/binary>>,
							   N, Acc, F1, F2,
							   TrUserData)
    when N < 57 ->
    'skip_length_delimited_ProtoPartyInfo.PartyMember.BuyInfo'(Rest,
							       N + 7,
							       X bsl N + Acc,
							       F1, F2,
							       TrUserData);
'skip_length_delimited_ProtoPartyInfo.PartyMember.BuyInfo'(<<0:1,
							     X:7, Rest/binary>>,
							   N, Acc, F1, F2,
							   TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    'dfp_read_field_def_ProtoPartyInfo.PartyMember.BuyInfo'(Rest2,
							    0, 0, F1, F2,
							    TrUserData).


'skip_32_ProtoPartyInfo.PartyMember.BuyInfo'(<<_:32,
					       Rest/binary>>,
					     Z1, Z2, F1, F2, TrUserData) ->
    'dfp_read_field_def_ProtoPartyInfo.PartyMember.BuyInfo'(Rest,
							    Z1, Z2, F1, F2,
							    TrUserData).


'skip_64_ProtoPartyInfo.PartyMember.BuyInfo'(<<_:64,
					       Rest/binary>>,
					     Z1, Z2, F1, F2, TrUserData) ->
    'dfp_read_field_def_ProtoPartyInfo.PartyMember.BuyInfo'(Rest,
							    Z1, Z2, F1, F2,
							    TrUserData).


'd_msg_ProtoPartyInfo.PartyMember'(Bin, TrUserData) ->
    'dfp_read_field_def_ProtoPartyInfo.PartyMember'(Bin, 0,
						    0,
						    id(undefined, TrUserData),
						    id(undefined, TrUserData),
						    id(undefined, TrUserData),
						    id(undefined, TrUserData),
						    id([], TrUserData),
						    TrUserData).

'dfp_read_field_def_ProtoPartyInfo.PartyMember'(<<10,
						  Rest/binary>>,
						Z1, Z2, F1, F2, F3, F4, F5,
						TrUserData) ->
    'd_field_ProtoPartyInfo.PartyMember_id'(Rest, Z1, Z2,
					    F1, F2, F3, F4, F5, TrUserData);
'dfp_read_field_def_ProtoPartyInfo.PartyMember'(<<16,
						  Rest/binary>>,
						Z1, Z2, F1, F2, F3, F4, F5,
						TrUserData) ->
    'd_field_ProtoPartyInfo.PartyMember_flag'(Rest, Z1, Z2,
					      F1, F2, F3, F4, F5, TrUserData);
'dfp_read_field_def_ProtoPartyInfo.PartyMember'(<<26,
						  Rest/binary>>,
						Z1, Z2, F1, F2, F3, F4, F5,
						TrUserData) ->
    'd_field_ProtoPartyInfo.PartyMember_name'(Rest, Z1, Z2,
					      F1, F2, F3, F4, F5, TrUserData);
'dfp_read_field_def_ProtoPartyInfo.PartyMember'(<<32,
						  Rest/binary>>,
						Z1, Z2, F1, F2, F3, F4, F5,
						TrUserData) ->
    'd_field_ProtoPartyInfo.PartyMember_seat_id'(Rest, Z1,
						 Z2, F1, F2, F3, F4, F5,
						 TrUserData);
'dfp_read_field_def_ProtoPartyInfo.PartyMember'(<<42,
						  Rest/binary>>,
						Z1, Z2, F1, F2, F3, F4, F5,
						TrUserData) ->
    'd_field_ProtoPartyInfo.PartyMember_buy_info'(Rest, Z1,
						  Z2, F1, F2, F3, F4, F5,
						  TrUserData);
'dfp_read_field_def_ProtoPartyInfo.PartyMember'(<<>>, 0,
						0, F1, F2, F3, F4, F5,
						TrUserData) ->
    #'ProtoPartyInfo.PartyMember'{id = F1, flag = F2,
				  name = F3, seat_id = F4,
				  buy_info = lists_reverse(F5, TrUserData)};
'dfp_read_field_def_ProtoPartyInfo.PartyMember'(Other,
						Z1, Z2, F1, F2, F3, F4, F5,
						TrUserData) ->
    'dg_read_field_def_ProtoPartyInfo.PartyMember'(Other,
						   Z1, Z2, F1, F2, F3, F4, F5,
						   TrUserData).

'dg_read_field_def_ProtoPartyInfo.PartyMember'(<<1:1,
						 X:7, Rest/binary>>,
					       N, Acc, F1, F2, F3, F4, F5,
					       TrUserData)
    when N < 32 - 7 ->
    'dg_read_field_def_ProtoPartyInfo.PartyMember'(Rest,
						   N + 7, X bsl N + Acc, F1, F2,
						   F3, F4, F5, TrUserData);
'dg_read_field_def_ProtoPartyInfo.PartyMember'(<<0:1,
						 X:7, Rest/binary>>,
					       N, Acc, F1, F2, F3, F4, F5,
					       TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
      10 ->
	  'd_field_ProtoPartyInfo.PartyMember_id'(Rest, 0, 0, F1,
						  F2, F3, F4, F5, TrUserData);
      16 ->
	  'd_field_ProtoPartyInfo.PartyMember_flag'(Rest, 0, 0,
						    F1, F2, F3, F4, F5,
						    TrUserData);
      26 ->
	  'd_field_ProtoPartyInfo.PartyMember_name'(Rest, 0, 0,
						    F1, F2, F3, F4, F5,
						    TrUserData);
      32 ->
	  'd_field_ProtoPartyInfo.PartyMember_seat_id'(Rest, 0, 0,
						       F1, F2, F3, F4, F5,
						       TrUserData);
      42 ->
	  'd_field_ProtoPartyInfo.PartyMember_buy_info'(Rest, 0,
							0, F1, F2, F3, F4, F5,
							TrUserData);
      _ ->
	  case Key band 7 of
	    0 ->
		'skip_varint_ProtoPartyInfo.PartyMember'(Rest, 0, 0, F1,
							 F2, F3, F4, F5,
							 TrUserData);
	    1 ->
		'skip_64_ProtoPartyInfo.PartyMember'(Rest, 0, 0, F1, F2,
						     F3, F4, F5, TrUserData);
	    2 ->
		'skip_length_delimited_ProtoPartyInfo.PartyMember'(Rest,
								   0, 0, F1, F2,
								   F3, F4, F5,
								   TrUserData);
	    5 ->
		'skip_32_ProtoPartyInfo.PartyMember'(Rest, 0, 0, F1, F2,
						     F3, F4, F5, TrUserData)
	  end
    end;
'dg_read_field_def_ProtoPartyInfo.PartyMember'(<<>>, 0,
					       0, F1, F2, F3, F4, F5,
					       TrUserData) ->
    #'ProtoPartyInfo.PartyMember'{id = F1, flag = F2,
				  name = F3, seat_id = F4,
				  buy_info = lists_reverse(F5, TrUserData)}.

'd_field_ProtoPartyInfo.PartyMember_id'(<<1:1, X:7,
					  Rest/binary>>,
					N, Acc, F1, F2, F3, F4, F5, TrUserData)
    when N < 57 ->
    'd_field_ProtoPartyInfo.PartyMember_id'(Rest, N + 7,
					    X bsl N + Acc, F1, F2, F3, F4, F5,
					    TrUserData);
'd_field_ProtoPartyInfo.PartyMember_id'(<<0:1, X:7,
					  Rest/binary>>,
					N, Acc, _, F2, F3, F4, F5,
					TrUserData) ->
    Len = X bsl N + Acc,
    <<Bytes:Len/binary, Rest2/binary>> = Rest,
    NewFValue = binary:copy(Bytes),
    'dfp_read_field_def_ProtoPartyInfo.PartyMember'(Rest2,
						    0, 0, NewFValue, F2, F3, F4,
						    F5, TrUserData).


'd_field_ProtoPartyInfo.PartyMember_flag'(<<1:1, X:7,
					    Rest/binary>>,
					  N, Acc, F1, F2, F3, F4, F5,
					  TrUserData)
    when N < 57 ->
    'd_field_ProtoPartyInfo.PartyMember_flag'(Rest, N + 7,
					      X bsl N + Acc, F1, F2, F3, F4, F5,
					      TrUserData);
'd_field_ProtoPartyInfo.PartyMember_flag'(<<0:1, X:7,
					    Rest/binary>>,
					  N, Acc, F1, _, F3, F4, F5,
					  TrUserData) ->
    <<NewFValue:32/signed-native>> = <<(X bsl N +
					  Acc):32/unsigned-native>>,
    'dfp_read_field_def_ProtoPartyInfo.PartyMember'(Rest, 0,
						    0, F1, NewFValue, F3, F4,
						    F5, TrUserData).


'd_field_ProtoPartyInfo.PartyMember_name'(<<1:1, X:7,
					    Rest/binary>>,
					  N, Acc, F1, F2, F3, F4, F5,
					  TrUserData)
    when N < 57 ->
    'd_field_ProtoPartyInfo.PartyMember_name'(Rest, N + 7,
					      X bsl N + Acc, F1, F2, F3, F4, F5,
					      TrUserData);
'd_field_ProtoPartyInfo.PartyMember_name'(<<0:1, X:7,
					    Rest/binary>>,
					  N, Acc, F1, F2, _, F4, F5,
					  TrUserData) ->
    Len = X bsl N + Acc,
    <<Bytes:Len/binary, Rest2/binary>> = Rest,
    NewFValue = binary:copy(Bytes),
    'dfp_read_field_def_ProtoPartyInfo.PartyMember'(Rest2,
						    0, 0, F1, F2, NewFValue, F4,
						    F5, TrUserData).


'd_field_ProtoPartyInfo.PartyMember_seat_id'(<<1:1, X:7,
					       Rest/binary>>,
					     N, Acc, F1, F2, F3, F4, F5,
					     TrUserData)
    when N < 57 ->
    'd_field_ProtoPartyInfo.PartyMember_seat_id'(Rest,
						 N + 7, X bsl N + Acc, F1, F2,
						 F3, F4, F5, TrUserData);
'd_field_ProtoPartyInfo.PartyMember_seat_id'(<<0:1, X:7,
					       Rest/binary>>,
					     N, Acc, F1, F2, F3, _, F5,
					     TrUserData) ->
    <<NewFValue:32/signed-native>> = <<(X bsl N +
					  Acc):32/unsigned-native>>,
    'dfp_read_field_def_ProtoPartyInfo.PartyMember'(Rest, 0,
						    0, F1, F2, F3, NewFValue,
						    F5, TrUserData).


'd_field_ProtoPartyInfo.PartyMember_buy_info'(<<1:1,
						X:7, Rest/binary>>,
					      N, Acc, F1, F2, F3, F4, F5,
					      TrUserData)
    when N < 57 ->
    'd_field_ProtoPartyInfo.PartyMember_buy_info'(Rest,
						  N + 7, X bsl N + Acc, F1, F2,
						  F3, F4, F5, TrUserData);
'd_field_ProtoPartyInfo.PartyMember_buy_info'(<<0:1,
						X:7, Rest/binary>>,
					      N, Acc, F1, F2, F3, F4, F5,
					      TrUserData) ->
    Len = X bsl N + Acc,
    <<Bs:Len/binary, Rest2/binary>> = Rest,
    NewFValue =
	id('d_msg_ProtoPartyInfo.PartyMember.BuyInfo'(Bs,
						      TrUserData),
	   TrUserData),
    'dfp_read_field_def_ProtoPartyInfo.PartyMember'(Rest2,
						    0, 0, F1, F2, F3, F4,
						    cons(NewFValue, F5,
							 TrUserData),
						    TrUserData).


'skip_varint_ProtoPartyInfo.PartyMember'(<<1:1, _:7,
					   Rest/binary>>,
					 Z1, Z2, F1, F2, F3, F4, F5,
					 TrUserData) ->
    'skip_varint_ProtoPartyInfo.PartyMember'(Rest, Z1, Z2,
					     F1, F2, F3, F4, F5, TrUserData);
'skip_varint_ProtoPartyInfo.PartyMember'(<<0:1, _:7,
					   Rest/binary>>,
					 Z1, Z2, F1, F2, F3, F4, F5,
					 TrUserData) ->
    'dfp_read_field_def_ProtoPartyInfo.PartyMember'(Rest,
						    Z1, Z2, F1, F2, F3, F4, F5,
						    TrUserData).


'skip_length_delimited_ProtoPartyInfo.PartyMember'(<<1:1,
						     X:7, Rest/binary>>,
						   N, Acc, F1, F2, F3, F4, F5,
						   TrUserData)
    when N < 57 ->
    'skip_length_delimited_ProtoPartyInfo.PartyMember'(Rest,
						       N + 7, X bsl N + Acc, F1,
						       F2, F3, F4, F5,
						       TrUserData);
'skip_length_delimited_ProtoPartyInfo.PartyMember'(<<0:1,
						     X:7, Rest/binary>>,
						   N, Acc, F1, F2, F3, F4, F5,
						   TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    'dfp_read_field_def_ProtoPartyInfo.PartyMember'(Rest2,
						    0, 0, F1, F2, F3, F4, F5,
						    TrUserData).


'skip_32_ProtoPartyInfo.PartyMember'(<<_:32,
				       Rest/binary>>,
				     Z1, Z2, F1, F2, F3, F4, F5, TrUserData) ->
    'dfp_read_field_def_ProtoPartyInfo.PartyMember'(Rest,
						    Z1, Z2, F1, F2, F3, F4, F5,
						    TrUserData).


'skip_64_ProtoPartyInfo.PartyMember'(<<_:64,
				       Rest/binary>>,
				     Z1, Z2, F1, F2, F3, F4, F5, TrUserData) ->
    'dfp_read_field_def_ProtoPartyInfo.PartyMember'(Rest,
						    Z1, Z2, F1, F2, F3, F4, F5,
						    TrUserData).


d_msg_ProtoPartyInfo(Bin, TrUserData) ->
    dfp_read_field_def_ProtoPartyInfo(Bin, 0, 0,
				      id(undefined, TrUserData),
				      id(undefined, TrUserData),
				      id([], TrUserData), TrUserData).

dfp_read_field_def_ProtoPartyInfo(<<8, Rest/binary>>,
				  Z1, Z2, F1, F2, F3, TrUserData) ->
    d_field_ProtoPartyInfo_level(Rest, Z1, Z2, F1, F2, F3,
				 TrUserData);
dfp_read_field_def_ProtoPartyInfo(<<16, Rest/binary>>,
				  Z1, Z2, F1, F2, F3, TrUserData) ->
    d_field_ProtoPartyInfo_end_at(Rest, Z1, Z2, F1, F2, F3,
				  TrUserData);
dfp_read_field_def_ProtoPartyInfo(<<26, Rest/binary>>,
				  Z1, Z2, F1, F2, F3, TrUserData) ->
    d_field_ProtoPartyInfo_members(Rest, Z1, Z2, F1, F2, F3,
				   TrUserData);
dfp_read_field_def_ProtoPartyInfo(<<>>, 0, 0, F1, F2,
				  F3, TrUserData) ->
    #'ProtoPartyInfo'{level = F1, end_at = F2,
		      members = lists_reverse(F3, TrUserData)};
dfp_read_field_def_ProtoPartyInfo(Other, Z1, Z2, F1, F2,
				  F3, TrUserData) ->
    dg_read_field_def_ProtoPartyInfo(Other, Z1, Z2, F1, F2,
				     F3, TrUserData).

dg_read_field_def_ProtoPartyInfo(<<1:1, X:7,
				   Rest/binary>>,
				 N, Acc, F1, F2, F3, TrUserData)
    when N < 32 - 7 ->
    dg_read_field_def_ProtoPartyInfo(Rest, N + 7,
				     X bsl N + Acc, F1, F2, F3, TrUserData);
dg_read_field_def_ProtoPartyInfo(<<0:1, X:7,
				   Rest/binary>>,
				 N, Acc, F1, F2, F3, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
      8 ->
	  d_field_ProtoPartyInfo_level(Rest, 0, 0, F1, F2, F3,
				       TrUserData);
      16 ->
	  d_field_ProtoPartyInfo_end_at(Rest, 0, 0, F1, F2, F3,
					TrUserData);
      26 ->
	  d_field_ProtoPartyInfo_members(Rest, 0, 0, F1, F2, F3,
					 TrUserData);
      _ ->
	  case Key band 7 of
	    0 ->
		skip_varint_ProtoPartyInfo(Rest, 0, 0, F1, F2, F3,
					   TrUserData);
	    1 ->
		skip_64_ProtoPartyInfo(Rest, 0, 0, F1, F2, F3,
				       TrUserData);
	    2 ->
		skip_length_delimited_ProtoPartyInfo(Rest, 0, 0, F1, F2,
						     F3, TrUserData);
	    5 ->
		skip_32_ProtoPartyInfo(Rest, 0, 0, F1, F2, F3,
				       TrUserData)
	  end
    end;
dg_read_field_def_ProtoPartyInfo(<<>>, 0, 0, F1, F2, F3,
				 TrUserData) ->
    #'ProtoPartyInfo'{level = F1, end_at = F2,
		      members = lists_reverse(F3, TrUserData)}.

d_field_ProtoPartyInfo_level(<<1:1, X:7, Rest/binary>>,
			     N, Acc, F1, F2, F3, TrUserData)
    when N < 57 ->
    d_field_ProtoPartyInfo_level(Rest, N + 7, X bsl N + Acc,
				 F1, F2, F3, TrUserData);
d_field_ProtoPartyInfo_level(<<0:1, X:7, Rest/binary>>,
			     N, Acc, _, F2, F3, TrUserData) ->
    <<NewFValue:32/signed-native>> = <<(X bsl N +
					  Acc):32/unsigned-native>>,
    dfp_read_field_def_ProtoPartyInfo(Rest, 0, 0, NewFValue,
				      F2, F3, TrUserData).


d_field_ProtoPartyInfo_end_at(<<1:1, X:7, Rest/binary>>,
			      N, Acc, F1, F2, F3, TrUserData)
    when N < 57 ->
    d_field_ProtoPartyInfo_end_at(Rest, N + 7,
				  X bsl N + Acc, F1, F2, F3, TrUserData);
d_field_ProtoPartyInfo_end_at(<<0:1, X:7, Rest/binary>>,
			      N, Acc, F1, _, F3, TrUserData) ->
    <<NewFValue:64/signed-native>> = <<(X bsl N +
					  Acc):64/unsigned-native>>,
    dfp_read_field_def_ProtoPartyInfo(Rest, 0, 0, F1,
				      NewFValue, F3, TrUserData).


d_field_ProtoPartyInfo_members(<<1:1, X:7,
				 Rest/binary>>,
			       N, Acc, F1, F2, F3, TrUserData)
    when N < 57 ->
    d_field_ProtoPartyInfo_members(Rest, N + 7,
				   X bsl N + Acc, F1, F2, F3, TrUserData);
d_field_ProtoPartyInfo_members(<<0:1, X:7,
				 Rest/binary>>,
			       N, Acc, F1, F2, F3, TrUserData) ->
    Len = X bsl N + Acc,
    <<Bs:Len/binary, Rest2/binary>> = Rest,
    NewFValue = id('d_msg_ProtoPartyInfo.PartyMember'(Bs,
						      TrUserData),
		   TrUserData),
    dfp_read_field_def_ProtoPartyInfo(Rest2, 0, 0, F1, F2,
				      cons(NewFValue, F3, TrUserData),
				      TrUserData).


skip_varint_ProtoPartyInfo(<<1:1, _:7, Rest/binary>>,
			   Z1, Z2, F1, F2, F3, TrUserData) ->
    skip_varint_ProtoPartyInfo(Rest, Z1, Z2, F1, F2, F3,
			       TrUserData);
skip_varint_ProtoPartyInfo(<<0:1, _:7, Rest/binary>>,
			   Z1, Z2, F1, F2, F3, TrUserData) ->
    dfp_read_field_def_ProtoPartyInfo(Rest, Z1, Z2, F1, F2,
				      F3, TrUserData).


skip_length_delimited_ProtoPartyInfo(<<1:1, X:7,
				       Rest/binary>>,
				     N, Acc, F1, F2, F3, TrUserData)
    when N < 57 ->
    skip_length_delimited_ProtoPartyInfo(Rest, N + 7,
					 X bsl N + Acc, F1, F2, F3, TrUserData);
skip_length_delimited_ProtoPartyInfo(<<0:1, X:7,
				       Rest/binary>>,
				     N, Acc, F1, F2, F3, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    dfp_read_field_def_ProtoPartyInfo(Rest2, 0, 0, F1, F2,
				      F3, TrUserData).


skip_32_ProtoPartyInfo(<<_:32, Rest/binary>>, Z1, Z2,
		       F1, F2, F3, TrUserData) ->
    dfp_read_field_def_ProtoPartyInfo(Rest, Z1, Z2, F1, F2,
				      F3, TrUserData).


skip_64_ProtoPartyInfo(<<_:64, Rest/binary>>, Z1, Z2,
		       F1, F2, F3, TrUserData) ->
    dfp_read_field_def_ProtoPartyInfo(Rest, Z1, Z2, F1, F2,
				      F3, TrUserData).


'd_msg_ProtoPartyMessageNotify.PartyMessage'(Bin,
					     TrUserData) ->
    'dfp_read_field_def_ProtoPartyMessageNotify.PartyMessage'(Bin,
							      0, 0,
							      id(undefined,
								 TrUserData),
							      id([],
								 TrUserData),
							      TrUserData).

'dfp_read_field_def_ProtoPartyMessageNotify.PartyMessage'(<<8,
							    Rest/binary>>,
							  Z1, Z2, F1, F2,
							  TrUserData) ->
    'd_field_ProtoPartyMessageNotify.PartyMessage_tp'(Rest,
						      Z1, Z2, F1, F2,
						      TrUserData);
'dfp_read_field_def_ProtoPartyMessageNotify.PartyMessage'(<<18,
							    Rest/binary>>,
							  Z1, Z2, F1, F2,
							  TrUserData) ->
    'd_field_ProtoPartyMessageNotify.PartyMessage_args'(Rest,
							Z1, Z2, F1, F2,
							TrUserData);
'dfp_read_field_def_ProtoPartyMessageNotify.PartyMessage'(<<>>,
							  0, 0, F1, F2,
							  TrUserData) ->
    #'ProtoPartyMessageNotify.PartyMessage'{tp = F1,
					    args =
						lists_reverse(F2, TrUserData)};
'dfp_read_field_def_ProtoPartyMessageNotify.PartyMessage'(Other,
							  Z1, Z2, F1, F2,
							  TrUserData) ->
    'dg_read_field_def_ProtoPartyMessageNotify.PartyMessage'(Other,
							     Z1, Z2, F1, F2,
							     TrUserData).

'dg_read_field_def_ProtoPartyMessageNotify.PartyMessage'(<<1:1,
							   X:7, Rest/binary>>,
							 N, Acc, F1, F2,
							 TrUserData)
    when N < 32 - 7 ->
    'dg_read_field_def_ProtoPartyMessageNotify.PartyMessage'(Rest,
							     N + 7,
							     X bsl N + Acc, F1,
							     F2, TrUserData);
'dg_read_field_def_ProtoPartyMessageNotify.PartyMessage'(<<0:1,
							   X:7, Rest/binary>>,
							 N, Acc, F1, F2,
							 TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
      8 ->
	  'd_field_ProtoPartyMessageNotify.PartyMessage_tp'(Rest,
							    0, 0, F1, F2,
							    TrUserData);
      18 ->
	  'd_field_ProtoPartyMessageNotify.PartyMessage_args'(Rest,
							      0, 0, F1, F2,
							      TrUserData);
      _ ->
	  case Key band 7 of
	    0 ->
		'skip_varint_ProtoPartyMessageNotify.PartyMessage'(Rest,
								   0, 0, F1, F2,
								   TrUserData);
	    1 ->
		'skip_64_ProtoPartyMessageNotify.PartyMessage'(Rest, 0,
							       0, F1, F2,
							       TrUserData);
	    2 ->
		'skip_length_delimited_ProtoPartyMessageNotify.PartyMessage'(Rest,
									     0,
									     0,
									     F1,
									     F2,
									     TrUserData);
	    5 ->
		'skip_32_ProtoPartyMessageNotify.PartyMessage'(Rest, 0,
							       0, F1, F2,
							       TrUserData)
	  end
    end;
'dg_read_field_def_ProtoPartyMessageNotify.PartyMessage'(<<>>,
							 0, 0, F1, F2,
							 TrUserData) ->
    #'ProtoPartyMessageNotify.PartyMessage'{tp = F1,
					    args =
						lists_reverse(F2, TrUserData)}.

'd_field_ProtoPartyMessageNotify.PartyMessage_tp'(<<1:1,
						    X:7, Rest/binary>>,
						  N, Acc, F1, F2, TrUserData)
    when N < 57 ->
    'd_field_ProtoPartyMessageNotify.PartyMessage_tp'(Rest,
						      N + 7, X bsl N + Acc, F1,
						      F2, TrUserData);
'd_field_ProtoPartyMessageNotify.PartyMessage_tp'(<<0:1,
						    X:7, Rest/binary>>,
						  N, Acc, _, F2, TrUserData) ->
    <<Tmp:32/signed-native>> = <<(X bsl N +
				    Acc):32/unsigned-native>>,
    NewFValue = d_enum_PartyMessageType(Tmp),
    'dfp_read_field_def_ProtoPartyMessageNotify.PartyMessage'(Rest,
							      0, 0, NewFValue,
							      F2, TrUserData).


'd_field_ProtoPartyMessageNotify.PartyMessage_args'(<<1:1,
						      X:7, Rest/binary>>,
						    N, Acc, F1, F2, TrUserData)
    when N < 57 ->
    'd_field_ProtoPartyMessageNotify.PartyMessage_args'(Rest,
							N + 7, X bsl N + Acc,
							F1, F2, TrUserData);
'd_field_ProtoPartyMessageNotify.PartyMessage_args'(<<0:1,
						      X:7, Rest/binary>>,
						    N, Acc, F1, F2,
						    TrUserData) ->
    Len = X bsl N + Acc,
    <<Bytes:Len/binary, Rest2/binary>> = Rest,
    NewFValue = binary:copy(Bytes),
    'dfp_read_field_def_ProtoPartyMessageNotify.PartyMessage'(Rest2,
							      0, 0, F1,
							      cons(NewFValue,
								   F2,
								   TrUserData),
							      TrUserData).


'skip_varint_ProtoPartyMessageNotify.PartyMessage'(<<1:1,
						     _:7, Rest/binary>>,
						   Z1, Z2, F1, F2,
						   TrUserData) ->
    'skip_varint_ProtoPartyMessageNotify.PartyMessage'(Rest,
						       Z1, Z2, F1, F2,
						       TrUserData);
'skip_varint_ProtoPartyMessageNotify.PartyMessage'(<<0:1,
						     _:7, Rest/binary>>,
						   Z1, Z2, F1, F2,
						   TrUserData) ->
    'dfp_read_field_def_ProtoPartyMessageNotify.PartyMessage'(Rest,
							      Z1, Z2, F1, F2,
							      TrUserData).


'skip_length_delimited_ProtoPartyMessageNotify.PartyMessage'(<<1:1,
							       X:7,
							       Rest/binary>>,
							     N, Acc, F1, F2,
							     TrUserData)
    when N < 57 ->
    'skip_length_delimited_ProtoPartyMessageNotify.PartyMessage'(Rest,
								 N + 7,
								 X bsl N + Acc,
								 F1, F2,
								 TrUserData);
'skip_length_delimited_ProtoPartyMessageNotify.PartyMessage'(<<0:1,
							       X:7,
							       Rest/binary>>,
							     N, Acc, F1, F2,
							     TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    'dfp_read_field_def_ProtoPartyMessageNotify.PartyMessage'(Rest2,
							      0, 0, F1, F2,
							      TrUserData).


'skip_32_ProtoPartyMessageNotify.PartyMessage'(<<_:32,
						 Rest/binary>>,
					       Z1, Z2, F1, F2, TrUserData) ->
    'dfp_read_field_def_ProtoPartyMessageNotify.PartyMessage'(Rest,
							      Z1, Z2, F1, F2,
							      TrUserData).


'skip_64_ProtoPartyMessageNotify.PartyMessage'(<<_:64,
						 Rest/binary>>,
					       Z1, Z2, F1, F2, TrUserData) ->
    'dfp_read_field_def_ProtoPartyMessageNotify.PartyMessage'(Rest,
							      Z1, Z2, F1, F2,
							      TrUserData).


d_msg_ProtoPartyMessageNotify(Bin, TrUserData) ->
    dfp_read_field_def_ProtoPartyMessageNotify(Bin, 0, 0,
					       id(undefined, TrUserData),
					       id(undefined, TrUserData),
					       id([], TrUserData), TrUserData).

dfp_read_field_def_ProtoPartyMessageNotify(<<10,
					     Rest/binary>>,
					   Z1, Z2, F1, F2, F3, TrUserData) ->
    d_field_ProtoPartyMessageNotify_session(Rest, Z1, Z2,
					    F1, F2, F3, TrUserData);
dfp_read_field_def_ProtoPartyMessageNotify(<<16,
					     Rest/binary>>,
					   Z1, Z2, F1, F2, F3, TrUserData) ->
    d_field_ProtoPartyMessageNotify_act(Rest, Z1, Z2, F1,
					F2, F3, TrUserData);
dfp_read_field_def_ProtoPartyMessageNotify(<<26,
					     Rest/binary>>,
					   Z1, Z2, F1, F2, F3, TrUserData) ->
    d_field_ProtoPartyMessageNotify_messages(Rest, Z1, Z2,
					     F1, F2, F3, TrUserData);
dfp_read_field_def_ProtoPartyMessageNotify(<<>>, 0, 0,
					   F1, F2, F3, TrUserData) ->
    #'ProtoPartyMessageNotify'{session = F1, act = F2,
			       messages = lists_reverse(F3, TrUserData)};
dfp_read_field_def_ProtoPartyMessageNotify(Other, Z1,
					   Z2, F1, F2, F3, TrUserData) ->
    dg_read_field_def_ProtoPartyMessageNotify(Other, Z1, Z2,
					      F1, F2, F3, TrUserData).

dg_read_field_def_ProtoPartyMessageNotify(<<1:1, X:7,
					    Rest/binary>>,
					  N, Acc, F1, F2, F3, TrUserData)
    when N < 32 - 7 ->
    dg_read_field_def_ProtoPartyMessageNotify(Rest, N + 7,
					      X bsl N + Acc, F1, F2, F3,
					      TrUserData);
dg_read_field_def_ProtoPartyMessageNotify(<<0:1, X:7,
					    Rest/binary>>,
					  N, Acc, F1, F2, F3, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
      10 ->
	  d_field_ProtoPartyMessageNotify_session(Rest, 0, 0, F1,
						  F2, F3, TrUserData);
      16 ->
	  d_field_ProtoPartyMessageNotify_act(Rest, 0, 0, F1, F2,
					      F3, TrUserData);
      26 ->
	  d_field_ProtoPartyMessageNotify_messages(Rest, 0, 0, F1,
						   F2, F3, TrUserData);
      _ ->
	  case Key band 7 of
	    0 ->
		skip_varint_ProtoPartyMessageNotify(Rest, 0, 0, F1, F2,
						    F3, TrUserData);
	    1 ->
		skip_64_ProtoPartyMessageNotify(Rest, 0, 0, F1, F2, F3,
						TrUserData);
	    2 ->
		skip_length_delimited_ProtoPartyMessageNotify(Rest, 0,
							      0, F1, F2, F3,
							      TrUserData);
	    5 ->
		skip_32_ProtoPartyMessageNotify(Rest, 0, 0, F1, F2, F3,
						TrUserData)
	  end
    end;
dg_read_field_def_ProtoPartyMessageNotify(<<>>, 0, 0,
					  F1, F2, F3, TrUserData) ->
    #'ProtoPartyMessageNotify'{session = F1, act = F2,
			       messages = lists_reverse(F3, TrUserData)}.

d_field_ProtoPartyMessageNotify_session(<<1:1, X:7,
					  Rest/binary>>,
					N, Acc, F1, F2, F3, TrUserData)
    when N < 57 ->
    d_field_ProtoPartyMessageNotify_session(Rest, N + 7,
					    X bsl N + Acc, F1, F2, F3,
					    TrUserData);
d_field_ProtoPartyMessageNotify_session(<<0:1, X:7,
					  Rest/binary>>,
					N, Acc, _, F2, F3, TrUserData) ->
    Len = X bsl N + Acc,
    <<Bytes:Len/binary, Rest2/binary>> = Rest,
    NewFValue = binary:copy(Bytes),
    dfp_read_field_def_ProtoPartyMessageNotify(Rest2, 0, 0,
					       NewFValue, F2, F3, TrUserData).


d_field_ProtoPartyMessageNotify_act(<<1:1, X:7,
				      Rest/binary>>,
				    N, Acc, F1, F2, F3, TrUserData)
    when N < 57 ->
    d_field_ProtoPartyMessageNotify_act(Rest, N + 7,
					X bsl N + Acc, F1, F2, F3, TrUserData);
d_field_ProtoPartyMessageNotify_act(<<0:1, X:7,
				      Rest/binary>>,
				    N, Acc, F1, _, F3, TrUserData) ->
    <<Tmp:32/signed-native>> = <<(X bsl N +
				    Acc):32/unsigned-native>>,
    NewFValue = d_enum_Action(Tmp),
    dfp_read_field_def_ProtoPartyMessageNotify(Rest, 0, 0,
					       F1, NewFValue, F3, TrUserData).


d_field_ProtoPartyMessageNotify_messages(<<1:1, X:7,
					   Rest/binary>>,
					 N, Acc, F1, F2, F3, TrUserData)
    when N < 57 ->
    d_field_ProtoPartyMessageNotify_messages(Rest, N + 7,
					     X bsl N + Acc, F1, F2, F3,
					     TrUserData);
d_field_ProtoPartyMessageNotify_messages(<<0:1, X:7,
					   Rest/binary>>,
					 N, Acc, F1, F2, F3, TrUserData) ->
    Len = X bsl N + Acc,
    <<Bs:Len/binary, Rest2/binary>> = Rest,
    NewFValue =
	id('d_msg_ProtoPartyMessageNotify.PartyMessage'(Bs,
							TrUserData),
	   TrUserData),
    dfp_read_field_def_ProtoPartyMessageNotify(Rest2, 0, 0,
					       F1, F2,
					       cons(NewFValue, F3, TrUserData),
					       TrUserData).


skip_varint_ProtoPartyMessageNotify(<<1:1, _:7,
				      Rest/binary>>,
				    Z1, Z2, F1, F2, F3, TrUserData) ->
    skip_varint_ProtoPartyMessageNotify(Rest, Z1, Z2, F1,
					F2, F3, TrUserData);
skip_varint_ProtoPartyMessageNotify(<<0:1, _:7,
				      Rest/binary>>,
				    Z1, Z2, F1, F2, F3, TrUserData) ->
    dfp_read_field_def_ProtoPartyMessageNotify(Rest, Z1, Z2,
					       F1, F2, F3, TrUserData).


skip_length_delimited_ProtoPartyMessageNotify(<<1:1,
						X:7, Rest/binary>>,
					      N, Acc, F1, F2, F3, TrUserData)
    when N < 57 ->
    skip_length_delimited_ProtoPartyMessageNotify(Rest,
						  N + 7, X bsl N + Acc, F1, F2,
						  F3, TrUserData);
skip_length_delimited_ProtoPartyMessageNotify(<<0:1,
						X:7, Rest/binary>>,
					      N, Acc, F1, F2, F3, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    dfp_read_field_def_ProtoPartyMessageNotify(Rest2, 0, 0,
					       F1, F2, F3, TrUserData).


skip_32_ProtoPartyMessageNotify(<<_:32, Rest/binary>>,
				Z1, Z2, F1, F2, F3, TrUserData) ->
    dfp_read_field_def_ProtoPartyMessageNotify(Rest, Z1, Z2,
					       F1, F2, F3, TrUserData).


skip_64_ProtoPartyMessageNotify(<<_:64, Rest/binary>>,
				Z1, Z2, F1, F2, F3, TrUserData) ->
    dfp_read_field_def_ProtoPartyMessageNotify(Rest, Z1, Z2,
					       F1, F2, F3, TrUserData).


d_msg_ProtoPartyCreateResponse(Bin, TrUserData) ->
    dfp_read_field_def_ProtoPartyCreateResponse(Bin, 0, 0,
						id(undefined, TrUserData),
						id(undefined, TrUserData),
						TrUserData).

dfp_read_field_def_ProtoPartyCreateResponse(<<8,
					      Rest/binary>>,
					    Z1, Z2, F1, F2, TrUserData) ->
    d_field_ProtoPartyCreateResponse_ret(Rest, Z1, Z2, F1,
					 F2, TrUserData);
dfp_read_field_def_ProtoPartyCreateResponse(<<18,
					      Rest/binary>>,
					    Z1, Z2, F1, F2, TrUserData) ->
    d_field_ProtoPartyCreateResponse_session(Rest, Z1, Z2,
					     F1, F2, TrUserData);
dfp_read_field_def_ProtoPartyCreateResponse(<<>>, 0, 0,
					    F1, F2, _) ->
    #'ProtoPartyCreateResponse'{ret = F1, session = F2};
dfp_read_field_def_ProtoPartyCreateResponse(Other, Z1,
					    Z2, F1, F2, TrUserData) ->
    dg_read_field_def_ProtoPartyCreateResponse(Other, Z1,
					       Z2, F1, F2, TrUserData).

dg_read_field_def_ProtoPartyCreateResponse(<<1:1, X:7,
					     Rest/binary>>,
					   N, Acc, F1, F2, TrUserData)
    when N < 32 - 7 ->
    dg_read_field_def_ProtoPartyCreateResponse(Rest, N + 7,
					       X bsl N + Acc, F1, F2,
					       TrUserData);
dg_read_field_def_ProtoPartyCreateResponse(<<0:1, X:7,
					     Rest/binary>>,
					   N, Acc, F1, F2, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
      8 ->
	  d_field_ProtoPartyCreateResponse_ret(Rest, 0, 0, F1, F2,
					       TrUserData);
      18 ->
	  d_field_ProtoPartyCreateResponse_session(Rest, 0, 0, F1,
						   F2, TrUserData);
      _ ->
	  case Key band 7 of
	    0 ->
		skip_varint_ProtoPartyCreateResponse(Rest, 0, 0, F1, F2,
						     TrUserData);
	    1 ->
		skip_64_ProtoPartyCreateResponse(Rest, 0, 0, F1, F2,
						 TrUserData);
	    2 ->
		skip_length_delimited_ProtoPartyCreateResponse(Rest, 0,
							       0, F1, F2,
							       TrUserData);
	    5 ->
		skip_32_ProtoPartyCreateResponse(Rest, 0, 0, F1, F2,
						 TrUserData)
	  end
    end;
dg_read_field_def_ProtoPartyCreateResponse(<<>>, 0, 0,
					   F1, F2, _) ->
    #'ProtoPartyCreateResponse'{ret = F1, session = F2}.

d_field_ProtoPartyCreateResponse_ret(<<1:1, X:7,
				       Rest/binary>>,
				     N, Acc, F1, F2, TrUserData)
    when N < 57 ->
    d_field_ProtoPartyCreateResponse_ret(Rest, N + 7,
					 X bsl N + Acc, F1, F2, TrUserData);
d_field_ProtoPartyCreateResponse_ret(<<0:1, X:7,
				       Rest/binary>>,
				     N, Acc, _, F2, TrUserData) ->
    <<NewFValue:32/signed-native>> = <<(X bsl N +
					  Acc):32/unsigned-native>>,
    dfp_read_field_def_ProtoPartyCreateResponse(Rest, 0, 0,
						NewFValue, F2, TrUserData).


d_field_ProtoPartyCreateResponse_session(<<1:1, X:7,
					   Rest/binary>>,
					 N, Acc, F1, F2, TrUserData)
    when N < 57 ->
    d_field_ProtoPartyCreateResponse_session(Rest, N + 7,
					     X bsl N + Acc, F1, F2, TrUserData);
d_field_ProtoPartyCreateResponse_session(<<0:1, X:7,
					   Rest/binary>>,
					 N, Acc, F1, _, TrUserData) ->
    Len = X bsl N + Acc,
    <<Bytes:Len/binary, Rest2/binary>> = Rest,
    NewFValue = binary:copy(Bytes),
    dfp_read_field_def_ProtoPartyCreateResponse(Rest2, 0, 0,
						F1, NewFValue, TrUserData).


skip_varint_ProtoPartyCreateResponse(<<1:1, _:7,
				       Rest/binary>>,
				     Z1, Z2, F1, F2, TrUserData) ->
    skip_varint_ProtoPartyCreateResponse(Rest, Z1, Z2, F1,
					 F2, TrUserData);
skip_varint_ProtoPartyCreateResponse(<<0:1, _:7,
				       Rest/binary>>,
				     Z1, Z2, F1, F2, TrUserData) ->
    dfp_read_field_def_ProtoPartyCreateResponse(Rest, Z1,
						Z2, F1, F2, TrUserData).


skip_length_delimited_ProtoPartyCreateResponse(<<1:1,
						 X:7, Rest/binary>>,
					       N, Acc, F1, F2, TrUserData)
    when N < 57 ->
    skip_length_delimited_ProtoPartyCreateResponse(Rest,
						   N + 7, X bsl N + Acc, F1, F2,
						   TrUserData);
skip_length_delimited_ProtoPartyCreateResponse(<<0:1,
						 X:7, Rest/binary>>,
					       N, Acc, F1, F2, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    dfp_read_field_def_ProtoPartyCreateResponse(Rest2, 0, 0,
						F1, F2, TrUserData).


skip_32_ProtoPartyCreateResponse(<<_:32, Rest/binary>>,
				 Z1, Z2, F1, F2, TrUserData) ->
    dfp_read_field_def_ProtoPartyCreateResponse(Rest, Z1,
						Z2, F1, F2, TrUserData).


skip_64_ProtoPartyCreateResponse(<<_:64, Rest/binary>>,
				 Z1, Z2, F1, F2, TrUserData) ->
    dfp_read_field_def_ProtoPartyCreateResponse(Rest, Z1,
						Z2, F1, F2, TrUserData).


d_msg_ProtoPartyBuyRequest(Bin, TrUserData) ->
    dfp_read_field_def_ProtoPartyBuyRequest(Bin, 0, 0,
					    id(undefined, TrUserData),
					    id(undefined, TrUserData),
					    TrUserData).

dfp_read_field_def_ProtoPartyBuyRequest(<<10,
					  Rest/binary>>,
					Z1, Z2, F1, F2, TrUserData) ->
    d_field_ProtoPartyBuyRequest_session(Rest, Z1, Z2, F1,
					 F2, TrUserData);
dfp_read_field_def_ProtoPartyBuyRequest(<<16,
					  Rest/binary>>,
					Z1, Z2, F1, F2, TrUserData) ->
    d_field_ProtoPartyBuyRequest_buy_id(Rest, Z1, Z2, F1,
					F2, TrUserData);
dfp_read_field_def_ProtoPartyBuyRequest(<<>>, 0, 0, F1,
					F2, _) ->
    #'ProtoPartyBuyRequest'{session = F1, buy_id = F2};
dfp_read_field_def_ProtoPartyBuyRequest(Other, Z1, Z2,
					F1, F2, TrUserData) ->
    dg_read_field_def_ProtoPartyBuyRequest(Other, Z1, Z2,
					   F1, F2, TrUserData).

dg_read_field_def_ProtoPartyBuyRequest(<<1:1, X:7,
					 Rest/binary>>,
				       N, Acc, F1, F2, TrUserData)
    when N < 32 - 7 ->
    dg_read_field_def_ProtoPartyBuyRequest(Rest, N + 7,
					   X bsl N + Acc, F1, F2, TrUserData);
dg_read_field_def_ProtoPartyBuyRequest(<<0:1, X:7,
					 Rest/binary>>,
				       N, Acc, F1, F2, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
      10 ->
	  d_field_ProtoPartyBuyRequest_session(Rest, 0, 0, F1, F2,
					       TrUserData);
      16 ->
	  d_field_ProtoPartyBuyRequest_buy_id(Rest, 0, 0, F1, F2,
					      TrUserData);
      _ ->
	  case Key band 7 of
	    0 ->
		skip_varint_ProtoPartyBuyRequest(Rest, 0, 0, F1, F2,
						 TrUserData);
	    1 ->
		skip_64_ProtoPartyBuyRequest(Rest, 0, 0, F1, F2,
					     TrUserData);
	    2 ->
		skip_length_delimited_ProtoPartyBuyRequest(Rest, 0, 0,
							   F1, F2, TrUserData);
	    5 ->
		skip_32_ProtoPartyBuyRequest(Rest, 0, 0, F1, F2,
					     TrUserData)
	  end
    end;
dg_read_field_def_ProtoPartyBuyRequest(<<>>, 0, 0, F1,
				       F2, _) ->
    #'ProtoPartyBuyRequest'{session = F1, buy_id = F2}.

d_field_ProtoPartyBuyRequest_session(<<1:1, X:7,
				       Rest/binary>>,
				     N, Acc, F1, F2, TrUserData)
    when N < 57 ->
    d_field_ProtoPartyBuyRequest_session(Rest, N + 7,
					 X bsl N + Acc, F1, F2, TrUserData);
d_field_ProtoPartyBuyRequest_session(<<0:1, X:7,
				       Rest/binary>>,
				     N, Acc, _, F2, TrUserData) ->
    Len = X bsl N + Acc,
    <<Bytes:Len/binary, Rest2/binary>> = Rest,
    NewFValue = binary:copy(Bytes),
    dfp_read_field_def_ProtoPartyBuyRequest(Rest2, 0, 0,
					    NewFValue, F2, TrUserData).


d_field_ProtoPartyBuyRequest_buy_id(<<1:1, X:7,
				      Rest/binary>>,
				    N, Acc, F1, F2, TrUserData)
    when N < 57 ->
    d_field_ProtoPartyBuyRequest_buy_id(Rest, N + 7,
					X bsl N + Acc, F1, F2, TrUserData);
d_field_ProtoPartyBuyRequest_buy_id(<<0:1, X:7,
				      Rest/binary>>,
				    N, Acc, F1, _, TrUserData) ->
    <<NewFValue:32/signed-native>> = <<(X bsl N +
					  Acc):32/unsigned-native>>,
    dfp_read_field_def_ProtoPartyBuyRequest(Rest, 0, 0, F1,
					    NewFValue, TrUserData).


skip_varint_ProtoPartyBuyRequest(<<1:1, _:7,
				   Rest/binary>>,
				 Z1, Z2, F1, F2, TrUserData) ->
    skip_varint_ProtoPartyBuyRequest(Rest, Z1, Z2, F1, F2,
				     TrUserData);
skip_varint_ProtoPartyBuyRequest(<<0:1, _:7,
				   Rest/binary>>,
				 Z1, Z2, F1, F2, TrUserData) ->
    dfp_read_field_def_ProtoPartyBuyRequest(Rest, Z1, Z2,
					    F1, F2, TrUserData).


skip_length_delimited_ProtoPartyBuyRequest(<<1:1, X:7,
					     Rest/binary>>,
					   N, Acc, F1, F2, TrUserData)
    when N < 57 ->
    skip_length_delimited_ProtoPartyBuyRequest(Rest, N + 7,
					       X bsl N + Acc, F1, F2,
					       TrUserData);
skip_length_delimited_ProtoPartyBuyRequest(<<0:1, X:7,
					     Rest/binary>>,
					   N, Acc, F1, F2, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    dfp_read_field_def_ProtoPartyBuyRequest(Rest2, 0, 0, F1,
					    F2, TrUserData).


skip_32_ProtoPartyBuyRequest(<<_:32, Rest/binary>>, Z1,
			     Z2, F1, F2, TrUserData) ->
    dfp_read_field_def_ProtoPartyBuyRequest(Rest, Z1, Z2,
					    F1, F2, TrUserData).


skip_64_ProtoPartyBuyRequest(<<_:64, Rest/binary>>, Z1,
			     Z2, F1, F2, TrUserData) ->
    dfp_read_field_def_ProtoPartyBuyRequest(Rest, Z1, Z2,
					    F1, F2, TrUserData).


d_msg_ProtoPartyChatRequest(Bin, TrUserData) ->
    dfp_read_field_def_ProtoPartyChatRequest(Bin, 0, 0,
					     id(undefined, TrUserData),
					     id(undefined, TrUserData),
					     TrUserData).

dfp_read_field_def_ProtoPartyChatRequest(<<10,
					   Rest/binary>>,
					 Z1, Z2, F1, F2, TrUserData) ->
    d_field_ProtoPartyChatRequest_session(Rest, Z1, Z2, F1,
					  F2, TrUserData);
dfp_read_field_def_ProtoPartyChatRequest(<<18,
					   Rest/binary>>,
					 Z1, Z2, F1, F2, TrUserData) ->
    d_field_ProtoPartyChatRequest_text(Rest, Z1, Z2, F1, F2,
				       TrUserData);
dfp_read_field_def_ProtoPartyChatRequest(<<>>, 0, 0, F1,
					 F2, _) ->
    #'ProtoPartyChatRequest'{session = F1, text = F2};
dfp_read_field_def_ProtoPartyChatRequest(Other, Z1, Z2,
					 F1, F2, TrUserData) ->
    dg_read_field_def_ProtoPartyChatRequest(Other, Z1, Z2,
					    F1, F2, TrUserData).

dg_read_field_def_ProtoPartyChatRequest(<<1:1, X:7,
					  Rest/binary>>,
					N, Acc, F1, F2, TrUserData)
    when N < 32 - 7 ->
    dg_read_field_def_ProtoPartyChatRequest(Rest, N + 7,
					    X bsl N + Acc, F1, F2, TrUserData);
dg_read_field_def_ProtoPartyChatRequest(<<0:1, X:7,
					  Rest/binary>>,
					N, Acc, F1, F2, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
      10 ->
	  d_field_ProtoPartyChatRequest_session(Rest, 0, 0, F1,
						F2, TrUserData);
      18 ->
	  d_field_ProtoPartyChatRequest_text(Rest, 0, 0, F1, F2,
					     TrUserData);
      _ ->
	  case Key band 7 of
	    0 ->
		skip_varint_ProtoPartyChatRequest(Rest, 0, 0, F1, F2,
						  TrUserData);
	    1 ->
		skip_64_ProtoPartyChatRequest(Rest, 0, 0, F1, F2,
					      TrUserData);
	    2 ->
		skip_length_delimited_ProtoPartyChatRequest(Rest, 0, 0,
							    F1, F2, TrUserData);
	    5 ->
		skip_32_ProtoPartyChatRequest(Rest, 0, 0, F1, F2,
					      TrUserData)
	  end
    end;
dg_read_field_def_ProtoPartyChatRequest(<<>>, 0, 0, F1,
					F2, _) ->
    #'ProtoPartyChatRequest'{session = F1, text = F2}.

d_field_ProtoPartyChatRequest_session(<<1:1, X:7,
					Rest/binary>>,
				      N, Acc, F1, F2, TrUserData)
    when N < 57 ->
    d_field_ProtoPartyChatRequest_session(Rest, N + 7,
					  X bsl N + Acc, F1, F2, TrUserData);
d_field_ProtoPartyChatRequest_session(<<0:1, X:7,
					Rest/binary>>,
				      N, Acc, _, F2, TrUserData) ->
    Len = X bsl N + Acc,
    <<Bytes:Len/binary, Rest2/binary>> = Rest,
    NewFValue = binary:copy(Bytes),
    dfp_read_field_def_ProtoPartyChatRequest(Rest2, 0, 0,
					     NewFValue, F2, TrUserData).


d_field_ProtoPartyChatRequest_text(<<1:1, X:7,
				     Rest/binary>>,
				   N, Acc, F1, F2, TrUserData)
    when N < 57 ->
    d_field_ProtoPartyChatRequest_text(Rest, N + 7,
				       X bsl N + Acc, F1, F2, TrUserData);
d_field_ProtoPartyChatRequest_text(<<0:1, X:7,
				     Rest/binary>>,
				   N, Acc, F1, _, TrUserData) ->
    Len = X bsl N + Acc,
    <<Bytes:Len/binary, Rest2/binary>> = Rest,
    NewFValue = binary:copy(Bytes),
    dfp_read_field_def_ProtoPartyChatRequest(Rest2, 0, 0,
					     F1, NewFValue, TrUserData).


skip_varint_ProtoPartyChatRequest(<<1:1, _:7,
				    Rest/binary>>,
				  Z1, Z2, F1, F2, TrUserData) ->
    skip_varint_ProtoPartyChatRequest(Rest, Z1, Z2, F1, F2,
				      TrUserData);
skip_varint_ProtoPartyChatRequest(<<0:1, _:7,
				    Rest/binary>>,
				  Z1, Z2, F1, F2, TrUserData) ->
    dfp_read_field_def_ProtoPartyChatRequest(Rest, Z1, Z2,
					     F1, F2, TrUserData).


skip_length_delimited_ProtoPartyChatRequest(<<1:1, X:7,
					      Rest/binary>>,
					    N, Acc, F1, F2, TrUserData)
    when N < 57 ->
    skip_length_delimited_ProtoPartyChatRequest(Rest, N + 7,
						X bsl N + Acc, F1, F2,
						TrUserData);
skip_length_delimited_ProtoPartyChatRequest(<<0:1, X:7,
					      Rest/binary>>,
					    N, Acc, F1, F2, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    dfp_read_field_def_ProtoPartyChatRequest(Rest2, 0, 0,
					     F1, F2, TrUserData).


skip_32_ProtoPartyChatRequest(<<_:32, Rest/binary>>, Z1,
			      Z2, F1, F2, TrUserData) ->
    dfp_read_field_def_ProtoPartyChatRequest(Rest, Z1, Z2,
					     F1, F2, TrUserData).


skip_64_ProtoPartyChatRequest(<<_:64, Rest/binary>>, Z1,
			      Z2, F1, F2, TrUserData) ->
    dfp_read_field_def_ProtoPartyChatRequest(Rest, Z1, Z2,
					     F1, F2, TrUserData).


d_msg_ProtoPartyQuitRequest(Bin, TrUserData) ->
    dfp_read_field_def_ProtoPartyQuitRequest(Bin, 0, 0,
					     id(undefined, TrUserData),
					     TrUserData).

dfp_read_field_def_ProtoPartyQuitRequest(<<10,
					   Rest/binary>>,
					 Z1, Z2, F1, TrUserData) ->
    d_field_ProtoPartyQuitRequest_session(Rest, Z1, Z2, F1,
					  TrUserData);
dfp_read_field_def_ProtoPartyQuitRequest(<<>>, 0, 0, F1,
					 _) ->
    #'ProtoPartyQuitRequest'{session = F1};
dfp_read_field_def_ProtoPartyQuitRequest(Other, Z1, Z2,
					 F1, TrUserData) ->
    dg_read_field_def_ProtoPartyQuitRequest(Other, Z1, Z2,
					    F1, TrUserData).

dg_read_field_def_ProtoPartyQuitRequest(<<1:1, X:7,
					  Rest/binary>>,
					N, Acc, F1, TrUserData)
    when N < 32 - 7 ->
    dg_read_field_def_ProtoPartyQuitRequest(Rest, N + 7,
					    X bsl N + Acc, F1, TrUserData);
dg_read_field_def_ProtoPartyQuitRequest(<<0:1, X:7,
					  Rest/binary>>,
					N, Acc, F1, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
      10 ->
	  d_field_ProtoPartyQuitRequest_session(Rest, 0, 0, F1,
						TrUserData);
      _ ->
	  case Key band 7 of
	    0 ->
		skip_varint_ProtoPartyQuitRequest(Rest, 0, 0, F1,
						  TrUserData);
	    1 ->
		skip_64_ProtoPartyQuitRequest(Rest, 0, 0, F1,
					      TrUserData);
	    2 ->
		skip_length_delimited_ProtoPartyQuitRequest(Rest, 0, 0,
							    F1, TrUserData);
	    5 ->
		skip_32_ProtoPartyQuitRequest(Rest, 0, 0, F1,
					      TrUserData)
	  end
    end;
dg_read_field_def_ProtoPartyQuitRequest(<<>>, 0, 0, F1,
					_) ->
    #'ProtoPartyQuitRequest'{session = F1}.

d_field_ProtoPartyQuitRequest_session(<<1:1, X:7,
					Rest/binary>>,
				      N, Acc, F1, TrUserData)
    when N < 57 ->
    d_field_ProtoPartyQuitRequest_session(Rest, N + 7,
					  X bsl N + Acc, F1, TrUserData);
d_field_ProtoPartyQuitRequest_session(<<0:1, X:7,
					Rest/binary>>,
				      N, Acc, _, TrUserData) ->
    Len = X bsl N + Acc,
    <<Bytes:Len/binary, Rest2/binary>> = Rest,
    NewFValue = binary:copy(Bytes),
    dfp_read_field_def_ProtoPartyQuitRequest(Rest2, 0, 0,
					     NewFValue, TrUserData).


skip_varint_ProtoPartyQuitRequest(<<1:1, _:7,
				    Rest/binary>>,
				  Z1, Z2, F1, TrUserData) ->
    skip_varint_ProtoPartyQuitRequest(Rest, Z1, Z2, F1,
				      TrUserData);
skip_varint_ProtoPartyQuitRequest(<<0:1, _:7,
				    Rest/binary>>,
				  Z1, Z2, F1, TrUserData) ->
    dfp_read_field_def_ProtoPartyQuitRequest(Rest, Z1, Z2,
					     F1, TrUserData).


skip_length_delimited_ProtoPartyQuitRequest(<<1:1, X:7,
					      Rest/binary>>,
					    N, Acc, F1, TrUserData)
    when N < 57 ->
    skip_length_delimited_ProtoPartyQuitRequest(Rest, N + 7,
						X bsl N + Acc, F1, TrUserData);
skip_length_delimited_ProtoPartyQuitRequest(<<0:1, X:7,
					      Rest/binary>>,
					    N, Acc, F1, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    dfp_read_field_def_ProtoPartyQuitRequest(Rest2, 0, 0,
					     F1, TrUserData).


skip_32_ProtoPartyQuitRequest(<<_:32, Rest/binary>>, Z1,
			      Z2, F1, TrUserData) ->
    dfp_read_field_def_ProtoPartyQuitRequest(Rest, Z1, Z2,
					     F1, TrUserData).


skip_64_ProtoPartyQuitRequest(<<_:64, Rest/binary>>, Z1,
			      Z2, F1, TrUserData) ->
    dfp_read_field_def_ProtoPartyQuitRequest(Rest, Z1, Z2,
					     F1, TrUserData).


'd_msg_ProtoPartyRoomResponse.PartyRoom'(Bin,
					 TrUserData) ->
    'dfp_read_field_def_ProtoPartyRoomResponse.PartyRoom'(Bin,
							  0, 0,
							  id(undefined,
							     TrUserData),
							  id(undefined,
							     TrUserData),
							  id(undefined,
							     TrUserData),
							  id(undefined,
							     TrUserData),
							  TrUserData).

'dfp_read_field_def_ProtoPartyRoomResponse.PartyRoom'(<<10,
							Rest/binary>>,
						      Z1, Z2, F1, F2, F3, F4,
						      TrUserData) ->
    'd_field_ProtoPartyRoomResponse.PartyRoom_owner_id'(Rest,
							Z1, Z2, F1, F2, F3, F4,
							TrUserData);
'dfp_read_field_def_ProtoPartyRoomResponse.PartyRoom'(<<18,
							Rest/binary>>,
						      Z1, Z2, F1, F2, F3, F4,
						      TrUserData) ->
    'd_field_ProtoPartyRoomResponse.PartyRoom_owner_name'(Rest,
							  Z1, Z2, F1, F2, F3,
							  F4, TrUserData);
'dfp_read_field_def_ProtoPartyRoomResponse.PartyRoom'(<<24,
							Rest/binary>>,
						      Z1, Z2, F1, F2, F3, F4,
						      TrUserData) ->
    'd_field_ProtoPartyRoomResponse.PartyRoom_level'(Rest,
						     Z1, Z2, F1, F2, F3, F4,
						     TrUserData);
'dfp_read_field_def_ProtoPartyRoomResponse.PartyRoom'(<<32,
							Rest/binary>>,
						      Z1, Z2, F1, F2, F3, F4,
						      TrUserData) ->
    'd_field_ProtoPartyRoomResponse.PartyRoom_current_amount'(Rest,
							      Z1, Z2, F1, F2,
							      F3, F4,
							      TrUserData);
'dfp_read_field_def_ProtoPartyRoomResponse.PartyRoom'(<<>>,
						      0, 0, F1, F2, F3, F4,
						      _) ->
    #'ProtoPartyRoomResponse.PartyRoom'{owner_id = F1,
					owner_name = F2, level = F3,
					current_amount = F4};
'dfp_read_field_def_ProtoPartyRoomResponse.PartyRoom'(Other,
						      Z1, Z2, F1, F2, F3, F4,
						      TrUserData) ->
    'dg_read_field_def_ProtoPartyRoomResponse.PartyRoom'(Other,
							 Z1, Z2, F1, F2, F3, F4,
							 TrUserData).

'dg_read_field_def_ProtoPartyRoomResponse.PartyRoom'(<<1:1,
						       X:7, Rest/binary>>,
						     N, Acc, F1, F2, F3, F4,
						     TrUserData)
    when N < 32 - 7 ->
    'dg_read_field_def_ProtoPartyRoomResponse.PartyRoom'(Rest,
							 N + 7, X bsl N + Acc,
							 F1, F2, F3, F4,
							 TrUserData);
'dg_read_field_def_ProtoPartyRoomResponse.PartyRoom'(<<0:1,
						       X:7, Rest/binary>>,
						     N, Acc, F1, F2, F3, F4,
						     TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
      10 ->
	  'd_field_ProtoPartyRoomResponse.PartyRoom_owner_id'(Rest,
							      0, 0, F1, F2, F3,
							      F4, TrUserData);
      18 ->
	  'd_field_ProtoPartyRoomResponse.PartyRoom_owner_name'(Rest,
								0, 0, F1, F2,
								F3, F4,
								TrUserData);
      24 ->
	  'd_field_ProtoPartyRoomResponse.PartyRoom_level'(Rest,
							   0, 0, F1, F2, F3, F4,
							   TrUserData);
      32 ->
	  'd_field_ProtoPartyRoomResponse.PartyRoom_current_amount'(Rest,
								    0, 0, F1,
								    F2, F3, F4,
								    TrUserData);
      _ ->
	  case Key band 7 of
	    0 ->
		'skip_varint_ProtoPartyRoomResponse.PartyRoom'(Rest, 0,
							       0, F1, F2, F3,
							       F4, TrUserData);
	    1 ->
		'skip_64_ProtoPartyRoomResponse.PartyRoom'(Rest, 0, 0,
							   F1, F2, F3, F4,
							   TrUserData);
	    2 ->
		'skip_length_delimited_ProtoPartyRoomResponse.PartyRoom'(Rest,
									 0, 0,
									 F1, F2,
									 F3, F4,
									 TrUserData);
	    5 ->
		'skip_32_ProtoPartyRoomResponse.PartyRoom'(Rest, 0, 0,
							   F1, F2, F3, F4,
							   TrUserData)
	  end
    end;
'dg_read_field_def_ProtoPartyRoomResponse.PartyRoom'(<<>>,
						     0, 0, F1, F2, F3, F4, _) ->
    #'ProtoPartyRoomResponse.PartyRoom'{owner_id = F1,
					owner_name = F2, level = F3,
					current_amount = F4}.

'd_field_ProtoPartyRoomResponse.PartyRoom_owner_id'(<<1:1,
						      X:7, Rest/binary>>,
						    N, Acc, F1, F2, F3, F4,
						    TrUserData)
    when N < 57 ->
    'd_field_ProtoPartyRoomResponse.PartyRoom_owner_id'(Rest,
							N + 7, X bsl N + Acc,
							F1, F2, F3, F4,
							TrUserData);
'd_field_ProtoPartyRoomResponse.PartyRoom_owner_id'(<<0:1,
						      X:7, Rest/binary>>,
						    N, Acc, _, F2, F3, F4,
						    TrUserData) ->
    Len = X bsl N + Acc,
    <<Bytes:Len/binary, Rest2/binary>> = Rest,
    NewFValue = binary:copy(Bytes),
    'dfp_read_field_def_ProtoPartyRoomResponse.PartyRoom'(Rest2,
							  0, 0, NewFValue, F2,
							  F3, F4, TrUserData).


'd_field_ProtoPartyRoomResponse.PartyRoom_owner_name'(<<1:1,
							X:7, Rest/binary>>,
						      N, Acc, F1, F2, F3, F4,
						      TrUserData)
    when N < 57 ->
    'd_field_ProtoPartyRoomResponse.PartyRoom_owner_name'(Rest,
							  N + 7, X bsl N + Acc,
							  F1, F2, F3, F4,
							  TrUserData);
'd_field_ProtoPartyRoomResponse.PartyRoom_owner_name'(<<0:1,
							X:7, Rest/binary>>,
						      N, Acc, F1, _, F3, F4,
						      TrUserData) ->
    Len = X bsl N + Acc,
    <<Bytes:Len/binary, Rest2/binary>> = Rest,
    NewFValue = binary:copy(Bytes),
    'dfp_read_field_def_ProtoPartyRoomResponse.PartyRoom'(Rest2,
							  0, 0, F1, NewFValue,
							  F3, F4, TrUserData).


'd_field_ProtoPartyRoomResponse.PartyRoom_level'(<<1:1,
						   X:7, Rest/binary>>,
						 N, Acc, F1, F2, F3, F4,
						 TrUserData)
    when N < 57 ->
    'd_field_ProtoPartyRoomResponse.PartyRoom_level'(Rest,
						     N + 7, X bsl N + Acc, F1,
						     F2, F3, F4, TrUserData);
'd_field_ProtoPartyRoomResponse.PartyRoom_level'(<<0:1,
						   X:7, Rest/binary>>,
						 N, Acc, F1, F2, _, F4,
						 TrUserData) ->
    <<NewFValue:32/signed-native>> = <<(X bsl N +
					  Acc):32/unsigned-native>>,
    'dfp_read_field_def_ProtoPartyRoomResponse.PartyRoom'(Rest,
							  0, 0, F1, F2,
							  NewFValue, F4,
							  TrUserData).


'd_field_ProtoPartyRoomResponse.PartyRoom_current_amount'(<<1:1,
							    X:7, Rest/binary>>,
							  N, Acc, F1, F2, F3,
							  F4, TrUserData)
    when N < 57 ->
    'd_field_ProtoPartyRoomResponse.PartyRoom_current_amount'(Rest,
							      N + 7,
							      X bsl N + Acc, F1,
							      F2, F3, F4,
							      TrUserData);
'd_field_ProtoPartyRoomResponse.PartyRoom_current_amount'(<<0:1,
							    X:7, Rest/binary>>,
							  N, Acc, F1, F2, F3, _,
							  TrUserData) ->
    <<NewFValue:32/signed-native>> = <<(X bsl N +
					  Acc):32/unsigned-native>>,
    'dfp_read_field_def_ProtoPartyRoomResponse.PartyRoom'(Rest,
							  0, 0, F1, F2, F3,
							  NewFValue,
							  TrUserData).


'skip_varint_ProtoPartyRoomResponse.PartyRoom'(<<1:1,
						 _:7, Rest/binary>>,
					       Z1, Z2, F1, F2, F3, F4,
					       TrUserData) ->
    'skip_varint_ProtoPartyRoomResponse.PartyRoom'(Rest, Z1,
						   Z2, F1, F2, F3, F4,
						   TrUserData);
'skip_varint_ProtoPartyRoomResponse.PartyRoom'(<<0:1,
						 _:7, Rest/binary>>,
					       Z1, Z2, F1, F2, F3, F4,
					       TrUserData) ->
    'dfp_read_field_def_ProtoPartyRoomResponse.PartyRoom'(Rest,
							  Z1, Z2, F1, F2, F3,
							  F4, TrUserData).


'skip_length_delimited_ProtoPartyRoomResponse.PartyRoom'(<<1:1,
							   X:7, Rest/binary>>,
							 N, Acc, F1, F2, F3, F4,
							 TrUserData)
    when N < 57 ->
    'skip_length_delimited_ProtoPartyRoomResponse.PartyRoom'(Rest,
							     N + 7,
							     X bsl N + Acc, F1,
							     F2, F3, F4,
							     TrUserData);
'skip_length_delimited_ProtoPartyRoomResponse.PartyRoom'(<<0:1,
							   X:7, Rest/binary>>,
							 N, Acc, F1, F2, F3, F4,
							 TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    'dfp_read_field_def_ProtoPartyRoomResponse.PartyRoom'(Rest2,
							  0, 0, F1, F2, F3, F4,
							  TrUserData).


'skip_32_ProtoPartyRoomResponse.PartyRoom'(<<_:32,
					     Rest/binary>>,
					   Z1, Z2, F1, F2, F3, F4,
					   TrUserData) ->
    'dfp_read_field_def_ProtoPartyRoomResponse.PartyRoom'(Rest,
							  Z1, Z2, F1, F2, F3,
							  F4, TrUserData).


'skip_64_ProtoPartyRoomResponse.PartyRoom'(<<_:64,
					     Rest/binary>>,
					   Z1, Z2, F1, F2, F3, F4,
					   TrUserData) ->
    'dfp_read_field_def_ProtoPartyRoomResponse.PartyRoom'(Rest,
							  Z1, Z2, F1, F2, F3,
							  F4, TrUserData).


d_msg_ProtoSocketServerNotify(Bin, TrUserData) ->
    dfp_read_field_def_ProtoSocketServerNotify(Bin, 0, 0,
					       id(undefined, TrUserData),
					       id(undefined, TrUserData),
					       id(undefined, TrUserData),
					       TrUserData).

dfp_read_field_def_ProtoSocketServerNotify(<<10,
					     Rest/binary>>,
					   Z1, Z2, F1, F2, F3, TrUserData) ->
    d_field_ProtoSocketServerNotify_session(Rest, Z1, Z2,
					    F1, F2, F3, TrUserData);
dfp_read_field_def_ProtoSocketServerNotify(<<18,
					     Rest/binary>>,
					   Z1, Z2, F1, F2, F3, TrUserData) ->
    d_field_ProtoSocketServerNotify_ip(Rest, Z1, Z2, F1, F2,
				       F3, TrUserData);
dfp_read_field_def_ProtoSocketServerNotify(<<24,
					     Rest/binary>>,
					   Z1, Z2, F1, F2, F3, TrUserData) ->
    d_field_ProtoSocketServerNotify_port(Rest, Z1, Z2, F1,
					 F2, F3, TrUserData);
dfp_read_field_def_ProtoSocketServerNotify(<<>>, 0, 0,
					   F1, F2, F3, _) ->
    #'ProtoSocketServerNotify'{session = F1, ip = F2,
			       port = F3};
dfp_read_field_def_ProtoSocketServerNotify(Other, Z1,
					   Z2, F1, F2, F3, TrUserData) ->
    dg_read_field_def_ProtoSocketServerNotify(Other, Z1, Z2,
					      F1, F2, F3, TrUserData).

dg_read_field_def_ProtoSocketServerNotify(<<1:1, X:7,
					    Rest/binary>>,
					  N, Acc, F1, F2, F3, TrUserData)
    when N < 32 - 7 ->
    dg_read_field_def_ProtoSocketServerNotify(Rest, N + 7,
					      X bsl N + Acc, F1, F2, F3,
					      TrUserData);
dg_read_field_def_ProtoSocketServerNotify(<<0:1, X:7,
					    Rest/binary>>,
					  N, Acc, F1, F2, F3, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
      10 ->
	  d_field_ProtoSocketServerNotify_session(Rest, 0, 0, F1,
						  F2, F3, TrUserData);
      18 ->
	  d_field_ProtoSocketServerNotify_ip(Rest, 0, 0, F1, F2,
					     F3, TrUserData);
      24 ->
	  d_field_ProtoSocketServerNotify_port(Rest, 0, 0, F1, F2,
					       F3, TrUserData);
      _ ->
	  case Key band 7 of
	    0 ->
		skip_varint_ProtoSocketServerNotify(Rest, 0, 0, F1, F2,
						    F3, TrUserData);
	    1 ->
		skip_64_ProtoSocketServerNotify(Rest, 0, 0, F1, F2, F3,
						TrUserData);
	    2 ->
		skip_length_delimited_ProtoSocketServerNotify(Rest, 0,
							      0, F1, F2, F3,
							      TrUserData);
	    5 ->
		skip_32_ProtoSocketServerNotify(Rest, 0, 0, F1, F2, F3,
						TrUserData)
	  end
    end;
dg_read_field_def_ProtoSocketServerNotify(<<>>, 0, 0,
					  F1, F2, F3, _) ->
    #'ProtoSocketServerNotify'{session = F1, ip = F2,
			       port = F3}.

d_field_ProtoSocketServerNotify_session(<<1:1, X:7,
					  Rest/binary>>,
					N, Acc, F1, F2, F3, TrUserData)
    when N < 57 ->
    d_field_ProtoSocketServerNotify_session(Rest, N + 7,
					    X bsl N + Acc, F1, F2, F3,
					    TrUserData);
d_field_ProtoSocketServerNotify_session(<<0:1, X:7,
					  Rest/binary>>,
					N, Acc, _, F2, F3, TrUserData) ->
    Len = X bsl N + Acc,
    <<Bytes:Len/binary, Rest2/binary>> = Rest,
    NewFValue = binary:copy(Bytes),
    dfp_read_field_def_ProtoSocketServerNotify(Rest2, 0, 0,
					       NewFValue, F2, F3, TrUserData).


d_field_ProtoSocketServerNotify_ip(<<1:1, X:7,
				     Rest/binary>>,
				   N, Acc, F1, F2, F3, TrUserData)
    when N < 57 ->
    d_field_ProtoSocketServerNotify_ip(Rest, N + 7,
				       X bsl N + Acc, F1, F2, F3, TrUserData);
d_field_ProtoSocketServerNotify_ip(<<0:1, X:7,
				     Rest/binary>>,
				   N, Acc, F1, _, F3, TrUserData) ->
    Len = X bsl N + Acc,
    <<Bytes:Len/binary, Rest2/binary>> = Rest,
    NewFValue = binary:copy(Bytes),
    dfp_read_field_def_ProtoSocketServerNotify(Rest2, 0, 0,
					       F1, NewFValue, F3, TrUserData).


d_field_ProtoSocketServerNotify_port(<<1:1, X:7,
				       Rest/binary>>,
				     N, Acc, F1, F2, F3, TrUserData)
    when N < 57 ->
    d_field_ProtoSocketServerNotify_port(Rest, N + 7,
					 X bsl N + Acc, F1, F2, F3, TrUserData);
d_field_ProtoSocketServerNotify_port(<<0:1, X:7,
				       Rest/binary>>,
				     N, Acc, F1, F2, _, TrUserData) ->
    <<NewFValue:32/signed-native>> = <<(X bsl N +
					  Acc):32/unsigned-native>>,
    dfp_read_field_def_ProtoSocketServerNotify(Rest, 0, 0,
					       F1, F2, NewFValue, TrUserData).


skip_varint_ProtoSocketServerNotify(<<1:1, _:7,
				      Rest/binary>>,
				    Z1, Z2, F1, F2, F3, TrUserData) ->
    skip_varint_ProtoSocketServerNotify(Rest, Z1, Z2, F1,
					F2, F3, TrUserData);
skip_varint_ProtoSocketServerNotify(<<0:1, _:7,
				      Rest/binary>>,
				    Z1, Z2, F1, F2, F3, TrUserData) ->
    dfp_read_field_def_ProtoSocketServerNotify(Rest, Z1, Z2,
					       F1, F2, F3, TrUserData).


skip_length_delimited_ProtoSocketServerNotify(<<1:1,
						X:7, Rest/binary>>,
					      N, Acc, F1, F2, F3, TrUserData)
    when N < 57 ->
    skip_length_delimited_ProtoSocketServerNotify(Rest,
						  N + 7, X bsl N + Acc, F1, F2,
						  F3, TrUserData);
skip_length_delimited_ProtoSocketServerNotify(<<0:1,
						X:7, Rest/binary>>,
					      N, Acc, F1, F2, F3, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    dfp_read_field_def_ProtoSocketServerNotify(Rest2, 0, 0,
					       F1, F2, F3, TrUserData).


skip_32_ProtoSocketServerNotify(<<_:32, Rest/binary>>,
				Z1, Z2, F1, F2, F3, TrUserData) ->
    dfp_read_field_def_ProtoSocketServerNotify(Rest, Z1, Z2,
					       F1, F2, F3, TrUserData).


skip_64_ProtoSocketServerNotify(<<_:64, Rest/binary>>,
				Z1, Z2, F1, F2, F3, TrUserData) ->
    dfp_read_field_def_ProtoSocketServerNotify(Rest, Z1, Z2,
					       F1, F2, F3, TrUserData).


d_msg_ProtoUTCNotify(Bin, TrUserData) ->
    dfp_read_field_def_ProtoUTCNotify(Bin, 0, 0,
				      id(undefined, TrUserData),
				      id(undefined, TrUserData), TrUserData).

dfp_read_field_def_ProtoUTCNotify(<<10, Rest/binary>>,
				  Z1, Z2, F1, F2, TrUserData) ->
    d_field_ProtoUTCNotify_session(Rest, Z1, Z2, F1, F2,
				   TrUserData);
dfp_read_field_def_ProtoUTCNotify(<<16, Rest/binary>>,
				  Z1, Z2, F1, F2, TrUserData) ->
    d_field_ProtoUTCNotify_timestamp(Rest, Z1, Z2, F1, F2,
				     TrUserData);
dfp_read_field_def_ProtoUTCNotify(<<>>, 0, 0, F1, F2,
				  _) ->
    #'ProtoUTCNotify'{session = F1, timestamp = F2};
dfp_read_field_def_ProtoUTCNotify(Other, Z1, Z2, F1, F2,
				  TrUserData) ->
    dg_read_field_def_ProtoUTCNotify(Other, Z1, Z2, F1, F2,
				     TrUserData).

dg_read_field_def_ProtoUTCNotify(<<1:1, X:7,
				   Rest/binary>>,
				 N, Acc, F1, F2, TrUserData)
    when N < 32 - 7 ->
    dg_read_field_def_ProtoUTCNotify(Rest, N + 7,
				     X bsl N + Acc, F1, F2, TrUserData);
dg_read_field_def_ProtoUTCNotify(<<0:1, X:7,
				   Rest/binary>>,
				 N, Acc, F1, F2, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
      10 ->
	  d_field_ProtoUTCNotify_session(Rest, 0, 0, F1, F2,
					 TrUserData);
      16 ->
	  d_field_ProtoUTCNotify_timestamp(Rest, 0, 0, F1, F2,
					   TrUserData);
      _ ->
	  case Key band 7 of
	    0 ->
		skip_varint_ProtoUTCNotify(Rest, 0, 0, F1, F2,
					   TrUserData);
	    1 ->
		skip_64_ProtoUTCNotify(Rest, 0, 0, F1, F2, TrUserData);
	    2 ->
		skip_length_delimited_ProtoUTCNotify(Rest, 0, 0, F1, F2,
						     TrUserData);
	    5 ->
		skip_32_ProtoUTCNotify(Rest, 0, 0, F1, F2, TrUserData)
	  end
    end;
dg_read_field_def_ProtoUTCNotify(<<>>, 0, 0, F1, F2,
				 _) ->
    #'ProtoUTCNotify'{session = F1, timestamp = F2}.

d_field_ProtoUTCNotify_session(<<1:1, X:7,
				 Rest/binary>>,
			       N, Acc, F1, F2, TrUserData)
    when N < 57 ->
    d_field_ProtoUTCNotify_session(Rest, N + 7,
				   X bsl N + Acc, F1, F2, TrUserData);
d_field_ProtoUTCNotify_session(<<0:1, X:7,
				 Rest/binary>>,
			       N, Acc, _, F2, TrUserData) ->
    Len = X bsl N + Acc,
    <<Bytes:Len/binary, Rest2/binary>> = Rest,
    NewFValue = binary:copy(Bytes),
    dfp_read_field_def_ProtoUTCNotify(Rest2, 0, 0,
				      NewFValue, F2, TrUserData).


d_field_ProtoUTCNotify_timestamp(<<1:1, X:7,
				   Rest/binary>>,
				 N, Acc, F1, F2, TrUserData)
    when N < 57 ->
    d_field_ProtoUTCNotify_timestamp(Rest, N + 7,
				     X bsl N + Acc, F1, F2, TrUserData);
d_field_ProtoUTCNotify_timestamp(<<0:1, X:7,
				   Rest/binary>>,
				 N, Acc, F1, _, TrUserData) ->
    <<NewFValue:64/signed-native>> = <<(X bsl N +
					  Acc):64/unsigned-native>>,
    dfp_read_field_def_ProtoUTCNotify(Rest, 0, 0, F1,
				      NewFValue, TrUserData).


skip_varint_ProtoUTCNotify(<<1:1, _:7, Rest/binary>>,
			   Z1, Z2, F1, F2, TrUserData) ->
    skip_varint_ProtoUTCNotify(Rest, Z1, Z2, F1, F2,
			       TrUserData);
skip_varint_ProtoUTCNotify(<<0:1, _:7, Rest/binary>>,
			   Z1, Z2, F1, F2, TrUserData) ->
    dfp_read_field_def_ProtoUTCNotify(Rest, Z1, Z2, F1, F2,
				      TrUserData).


skip_length_delimited_ProtoUTCNotify(<<1:1, X:7,
				       Rest/binary>>,
				     N, Acc, F1, F2, TrUserData)
    when N < 57 ->
    skip_length_delimited_ProtoUTCNotify(Rest, N + 7,
					 X bsl N + Acc, F1, F2, TrUserData);
skip_length_delimited_ProtoUTCNotify(<<0:1, X:7,
				       Rest/binary>>,
				     N, Acc, F1, F2, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    dfp_read_field_def_ProtoUTCNotify(Rest2, 0, 0, F1, F2,
				      TrUserData).


skip_32_ProtoUTCNotify(<<_:32, Rest/binary>>, Z1, Z2,
		       F1, F2, TrUserData) ->
    dfp_read_field_def_ProtoUTCNotify(Rest, Z1, Z2, F1, F2,
				      TrUserData).


skip_64_ProtoUTCNotify(<<_:64, Rest/binary>>, Z1, Z2,
		       F1, F2, TrUserData) ->
    dfp_read_field_def_ProtoUTCNotify(Rest, Z1, Z2, F1, F2,
				      TrUserData).


d_msg_ProtoPingResponse(Bin, TrUserData) ->
    dfp_read_field_def_ProtoPingResponse(Bin, 0, 0,
					 id(undefined, TrUserData),
					 id(undefined, TrUserData), TrUserData).

dfp_read_field_def_ProtoPingResponse(<<8, Rest/binary>>,
				     Z1, Z2, F1, F2, TrUserData) ->
    d_field_ProtoPingResponse_ret(Rest, Z1, Z2, F1, F2,
				  TrUserData);
dfp_read_field_def_ProtoPingResponse(<<18,
				       Rest/binary>>,
				     Z1, Z2, F1, F2, TrUserData) ->
    d_field_ProtoPingResponse_session(Rest, Z1, Z2, F1, F2,
				      TrUserData);
dfp_read_field_def_ProtoPingResponse(<<>>, 0, 0, F1, F2,
				     _) ->
    #'ProtoPingResponse'{ret = F1, session = F2};
dfp_read_field_def_ProtoPingResponse(Other, Z1, Z2, F1,
				     F2, TrUserData) ->
    dg_read_field_def_ProtoPingResponse(Other, Z1, Z2, F1,
					F2, TrUserData).

dg_read_field_def_ProtoPingResponse(<<1:1, X:7,
				      Rest/binary>>,
				    N, Acc, F1, F2, TrUserData)
    when N < 32 - 7 ->
    dg_read_field_def_ProtoPingResponse(Rest, N + 7,
					X bsl N + Acc, F1, F2, TrUserData);
dg_read_field_def_ProtoPingResponse(<<0:1, X:7,
				      Rest/binary>>,
				    N, Acc, F1, F2, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
      8 ->
	  d_field_ProtoPingResponse_ret(Rest, 0, 0, F1, F2,
					TrUserData);
      18 ->
	  d_field_ProtoPingResponse_session(Rest, 0, 0, F1, F2,
					    TrUserData);
      _ ->
	  case Key band 7 of
	    0 ->
		skip_varint_ProtoPingResponse(Rest, 0, 0, F1, F2,
					      TrUserData);
	    1 ->
		skip_64_ProtoPingResponse(Rest, 0, 0, F1, F2,
					  TrUserData);
	    2 ->
		skip_length_delimited_ProtoPingResponse(Rest, 0, 0, F1,
							F2, TrUserData);
	    5 ->
		skip_32_ProtoPingResponse(Rest, 0, 0, F1, F2,
					  TrUserData)
	  end
    end;
dg_read_field_def_ProtoPingResponse(<<>>, 0, 0, F1, F2,
				    _) ->
    #'ProtoPingResponse'{ret = F1, session = F2}.

d_field_ProtoPingResponse_ret(<<1:1, X:7, Rest/binary>>,
			      N, Acc, F1, F2, TrUserData)
    when N < 57 ->
    d_field_ProtoPingResponse_ret(Rest, N + 7,
				  X bsl N + Acc, F1, F2, TrUserData);
d_field_ProtoPingResponse_ret(<<0:1, X:7, Rest/binary>>,
			      N, Acc, _, F2, TrUserData) ->
    <<NewFValue:32/signed-native>> = <<(X bsl N +
					  Acc):32/unsigned-native>>,
    dfp_read_field_def_ProtoPingResponse(Rest, 0, 0,
					 NewFValue, F2, TrUserData).


d_field_ProtoPingResponse_session(<<1:1, X:7,
				    Rest/binary>>,
				  N, Acc, F1, F2, TrUserData)
    when N < 57 ->
    d_field_ProtoPingResponse_session(Rest, N + 7,
				      X bsl N + Acc, F1, F2, TrUserData);
d_field_ProtoPingResponse_session(<<0:1, X:7,
				    Rest/binary>>,
				  N, Acc, F1, _, TrUserData) ->
    Len = X bsl N + Acc,
    <<Bytes:Len/binary, Rest2/binary>> = Rest,
    NewFValue = binary:copy(Bytes),
    dfp_read_field_def_ProtoPingResponse(Rest2, 0, 0, F1,
					 NewFValue, TrUserData).


skip_varint_ProtoPingResponse(<<1:1, _:7, Rest/binary>>,
			      Z1, Z2, F1, F2, TrUserData) ->
    skip_varint_ProtoPingResponse(Rest, Z1, Z2, F1, F2,
				  TrUserData);
skip_varint_ProtoPingResponse(<<0:1, _:7, Rest/binary>>,
			      Z1, Z2, F1, F2, TrUserData) ->
    dfp_read_field_def_ProtoPingResponse(Rest, Z1, Z2, F1,
					 F2, TrUserData).


skip_length_delimited_ProtoPingResponse(<<1:1, X:7,
					  Rest/binary>>,
					N, Acc, F1, F2, TrUserData)
    when N < 57 ->
    skip_length_delimited_ProtoPingResponse(Rest, N + 7,
					    X bsl N + Acc, F1, F2, TrUserData);
skip_length_delimited_ProtoPingResponse(<<0:1, X:7,
					  Rest/binary>>,
					N, Acc, F1, F2, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    dfp_read_field_def_ProtoPingResponse(Rest2, 0, 0, F1,
					 F2, TrUserData).


skip_32_ProtoPingResponse(<<_:32, Rest/binary>>, Z1, Z2,
			  F1, F2, TrUserData) ->
    dfp_read_field_def_ProtoPingResponse(Rest, Z1, Z2, F1,
					 F2, TrUserData).


skip_64_ProtoPingResponse(<<_:64, Rest/binary>>, Z1, Z2,
			  F1, F2, TrUserData) ->
    dfp_read_field_def_ProtoPingResponse(Rest, Z1, Z2, F1,
					 F2, TrUserData).


d_msg_ProtoSyncResponse(Bin, TrUserData) ->
    dfp_read_field_def_ProtoSyncResponse(Bin, 0, 0,
					 id(undefined, TrUserData),
					 id(undefined, TrUserData),
					 id(undefined, TrUserData), TrUserData).

dfp_read_field_def_ProtoSyncResponse(<<8, Rest/binary>>,
				     Z1, Z2, F1, F2, F3, TrUserData) ->
    d_field_ProtoSyncResponse_ret(Rest, Z1, Z2, F1, F2, F3,
				  TrUserData);
dfp_read_field_def_ProtoSyncResponse(<<18,
				       Rest/binary>>,
				     Z1, Z2, F1, F2, F3, TrUserData) ->
    d_field_ProtoSyncResponse_session(Rest, Z1, Z2, F1, F2,
				      F3, TrUserData);
dfp_read_field_def_ProtoSyncResponse(<<24,
				       Rest/binary>>,
				     Z1, Z2, F1, F2, F3, TrUserData) ->
    d_field_ProtoSyncResponse_param(Rest, Z1, Z2, F1, F2,
				    F3, TrUserData);
dfp_read_field_def_ProtoSyncResponse(<<>>, 0, 0, F1, F2,
				     F3, _) ->
    #'ProtoSyncResponse'{ret = F1, session = F2,
			 param = F3};
dfp_read_field_def_ProtoSyncResponse(Other, Z1, Z2, F1,
				     F2, F3, TrUserData) ->
    dg_read_field_def_ProtoSyncResponse(Other, Z1, Z2, F1,
					F2, F3, TrUserData).

dg_read_field_def_ProtoSyncResponse(<<1:1, X:7,
				      Rest/binary>>,
				    N, Acc, F1, F2, F3, TrUserData)
    when N < 32 - 7 ->
    dg_read_field_def_ProtoSyncResponse(Rest, N + 7,
					X bsl N + Acc, F1, F2, F3, TrUserData);
dg_read_field_def_ProtoSyncResponse(<<0:1, X:7,
				      Rest/binary>>,
				    N, Acc, F1, F2, F3, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
      8 ->
	  d_field_ProtoSyncResponse_ret(Rest, 0, 0, F1, F2, F3,
					TrUserData);
      18 ->
	  d_field_ProtoSyncResponse_session(Rest, 0, 0, F1, F2,
					    F3, TrUserData);
      24 ->
	  d_field_ProtoSyncResponse_param(Rest, 0, 0, F1, F2, F3,
					  TrUserData);
      _ ->
	  case Key band 7 of
	    0 ->
		skip_varint_ProtoSyncResponse(Rest, 0, 0, F1, F2, F3,
					      TrUserData);
	    1 ->
		skip_64_ProtoSyncResponse(Rest, 0, 0, F1, F2, F3,
					  TrUserData);
	    2 ->
		skip_length_delimited_ProtoSyncResponse(Rest, 0, 0, F1,
							F2, F3, TrUserData);
	    5 ->
		skip_32_ProtoSyncResponse(Rest, 0, 0, F1, F2, F3,
					  TrUserData)
	  end
    end;
dg_read_field_def_ProtoSyncResponse(<<>>, 0, 0, F1, F2,
				    F3, _) ->
    #'ProtoSyncResponse'{ret = F1, session = F2,
			 param = F3}.

d_field_ProtoSyncResponse_ret(<<1:1, X:7, Rest/binary>>,
			      N, Acc, F1, F2, F3, TrUserData)
    when N < 57 ->
    d_field_ProtoSyncResponse_ret(Rest, N + 7,
				  X bsl N + Acc, F1, F2, F3, TrUserData);
d_field_ProtoSyncResponse_ret(<<0:1, X:7, Rest/binary>>,
			      N, Acc, _, F2, F3, TrUserData) ->
    <<NewFValue:32/signed-native>> = <<(X bsl N +
					  Acc):32/unsigned-native>>,
    dfp_read_field_def_ProtoSyncResponse(Rest, 0, 0,
					 NewFValue, F2, F3, TrUserData).


d_field_ProtoSyncResponse_session(<<1:1, X:7,
				    Rest/binary>>,
				  N, Acc, F1, F2, F3, TrUserData)
    when N < 57 ->
    d_field_ProtoSyncResponse_session(Rest, N + 7,
				      X bsl N + Acc, F1, F2, F3, TrUserData);
d_field_ProtoSyncResponse_session(<<0:1, X:7,
				    Rest/binary>>,
				  N, Acc, F1, _, F3, TrUserData) ->
    Len = X bsl N + Acc,
    <<Bytes:Len/binary, Rest2/binary>> = Rest,
    NewFValue = binary:copy(Bytes),
    dfp_read_field_def_ProtoSyncResponse(Rest2, 0, 0, F1,
					 NewFValue, F3, TrUserData).


d_field_ProtoSyncResponse_param(<<1:1, X:7,
				  Rest/binary>>,
				N, Acc, F1, F2, F3, TrUserData)
    when N < 57 ->
    d_field_ProtoSyncResponse_param(Rest, N + 7,
				    X bsl N + Acc, F1, F2, F3, TrUserData);
d_field_ProtoSyncResponse_param(<<0:1, X:7,
				  Rest/binary>>,
				N, Acc, F1, F2, _, TrUserData) ->
    <<NewFValue:32/signed-native>> = <<(X bsl N +
					  Acc):32/unsigned-native>>,
    dfp_read_field_def_ProtoSyncResponse(Rest, 0, 0, F1, F2,
					 NewFValue, TrUserData).


skip_varint_ProtoSyncResponse(<<1:1, _:7, Rest/binary>>,
			      Z1, Z2, F1, F2, F3, TrUserData) ->
    skip_varint_ProtoSyncResponse(Rest, Z1, Z2, F1, F2, F3,
				  TrUserData);
skip_varint_ProtoSyncResponse(<<0:1, _:7, Rest/binary>>,
			      Z1, Z2, F1, F2, F3, TrUserData) ->
    dfp_read_field_def_ProtoSyncResponse(Rest, Z1, Z2, F1,
					 F2, F3, TrUserData).


skip_length_delimited_ProtoSyncResponse(<<1:1, X:7,
					  Rest/binary>>,
					N, Acc, F1, F2, F3, TrUserData)
    when N < 57 ->
    skip_length_delimited_ProtoSyncResponse(Rest, N + 7,
					    X bsl N + Acc, F1, F2, F3,
					    TrUserData);
skip_length_delimited_ProtoSyncResponse(<<0:1, X:7,
					  Rest/binary>>,
					N, Acc, F1, F2, F3, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    dfp_read_field_def_ProtoSyncResponse(Rest2, 0, 0, F1,
					 F2, F3, TrUserData).


skip_32_ProtoSyncResponse(<<_:32, Rest/binary>>, Z1, Z2,
			  F1, F2, F3, TrUserData) ->
    dfp_read_field_def_ProtoSyncResponse(Rest, Z1, Z2, F1,
					 F2, F3, TrUserData).


skip_64_ProtoSyncResponse(<<_:64, Rest/binary>>, Z1, Z2,
			  F1, F2, F3, TrUserData) ->
    dfp_read_field_def_ProtoSyncResponse(Rest, Z1, Z2, F1,
					 F2, F3, TrUserData).


d_msg_ProtoPartyDismissResponse(Bin, TrUserData) ->
    dfp_read_field_def_ProtoPartyDismissResponse(Bin, 0, 0,
						 id(undefined, TrUserData),
						 id(undefined, TrUserData),
						 TrUserData).

dfp_read_field_def_ProtoPartyDismissResponse(<<8,
					       Rest/binary>>,
					     Z1, Z2, F1, F2, TrUserData) ->
    d_field_ProtoPartyDismissResponse_ret(Rest, Z1, Z2, F1,
					  F2, TrUserData);
dfp_read_field_def_ProtoPartyDismissResponse(<<18,
					       Rest/binary>>,
					     Z1, Z2, F1, F2, TrUserData) ->
    d_field_ProtoPartyDismissResponse_session(Rest, Z1, Z2,
					      F1, F2, TrUserData);
dfp_read_field_def_ProtoPartyDismissResponse(<<>>, 0, 0,
					     F1, F2, _) ->
    #'ProtoPartyDismissResponse'{ret = F1, session = F2};
dfp_read_field_def_ProtoPartyDismissResponse(Other, Z1,
					     Z2, F1, F2, TrUserData) ->
    dg_read_field_def_ProtoPartyDismissResponse(Other, Z1,
						Z2, F1, F2, TrUserData).

dg_read_field_def_ProtoPartyDismissResponse(<<1:1, X:7,
					      Rest/binary>>,
					    N, Acc, F1, F2, TrUserData)
    when N < 32 - 7 ->
    dg_read_field_def_ProtoPartyDismissResponse(Rest, N + 7,
						X bsl N + Acc, F1, F2,
						TrUserData);
dg_read_field_def_ProtoPartyDismissResponse(<<0:1, X:7,
					      Rest/binary>>,
					    N, Acc, F1, F2, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
      8 ->
	  d_field_ProtoPartyDismissResponse_ret(Rest, 0, 0, F1,
						F2, TrUserData);
      18 ->
	  d_field_ProtoPartyDismissResponse_session(Rest, 0, 0,
						    F1, F2, TrUserData);
      _ ->
	  case Key band 7 of
	    0 ->
		skip_varint_ProtoPartyDismissResponse(Rest, 0, 0, F1,
						      F2, TrUserData);
	    1 ->
		skip_64_ProtoPartyDismissResponse(Rest, 0, 0, F1, F2,
						  TrUserData);
	    2 ->
		skip_length_delimited_ProtoPartyDismissResponse(Rest, 0,
								0, F1, F2,
								TrUserData);
	    5 ->
		skip_32_ProtoPartyDismissResponse(Rest, 0, 0, F1, F2,
						  TrUserData)
	  end
    end;
dg_read_field_def_ProtoPartyDismissResponse(<<>>, 0, 0,
					    F1, F2, _) ->
    #'ProtoPartyDismissResponse'{ret = F1, session = F2}.

d_field_ProtoPartyDismissResponse_ret(<<1:1, X:7,
					Rest/binary>>,
				      N, Acc, F1, F2, TrUserData)
    when N < 57 ->
    d_field_ProtoPartyDismissResponse_ret(Rest, N + 7,
					  X bsl N + Acc, F1, F2, TrUserData);
d_field_ProtoPartyDismissResponse_ret(<<0:1, X:7,
					Rest/binary>>,
				      N, Acc, _, F2, TrUserData) ->
    <<NewFValue:32/signed-native>> = <<(X bsl N +
					  Acc):32/unsigned-native>>,
    dfp_read_field_def_ProtoPartyDismissResponse(Rest, 0, 0,
						 NewFValue, F2, TrUserData).


d_field_ProtoPartyDismissResponse_session(<<1:1, X:7,
					    Rest/binary>>,
					  N, Acc, F1, F2, TrUserData)
    when N < 57 ->
    d_field_ProtoPartyDismissResponse_session(Rest, N + 7,
					      X bsl N + Acc, F1, F2,
					      TrUserData);
d_field_ProtoPartyDismissResponse_session(<<0:1, X:7,
					    Rest/binary>>,
					  N, Acc, F1, _, TrUserData) ->
    Len = X bsl N + Acc,
    <<Bytes:Len/binary, Rest2/binary>> = Rest,
    NewFValue = binary:copy(Bytes),
    dfp_read_field_def_ProtoPartyDismissResponse(Rest2, 0,
						 0, F1, NewFValue, TrUserData).


skip_varint_ProtoPartyDismissResponse(<<1:1, _:7,
					Rest/binary>>,
				      Z1, Z2, F1, F2, TrUserData) ->
    skip_varint_ProtoPartyDismissResponse(Rest, Z1, Z2, F1,
					  F2, TrUserData);
skip_varint_ProtoPartyDismissResponse(<<0:1, _:7,
					Rest/binary>>,
				      Z1, Z2, F1, F2, TrUserData) ->
    dfp_read_field_def_ProtoPartyDismissResponse(Rest, Z1,
						 Z2, F1, F2, TrUserData).


skip_length_delimited_ProtoPartyDismissResponse(<<1:1,
						  X:7, Rest/binary>>,
						N, Acc, F1, F2, TrUserData)
    when N < 57 ->
    skip_length_delimited_ProtoPartyDismissResponse(Rest,
						    N + 7, X bsl N + Acc, F1,
						    F2, TrUserData);
skip_length_delimited_ProtoPartyDismissResponse(<<0:1,
						  X:7, Rest/binary>>,
						N, Acc, F1, F2, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    dfp_read_field_def_ProtoPartyDismissResponse(Rest2, 0,
						 0, F1, F2, TrUserData).


skip_32_ProtoPartyDismissResponse(<<_:32, Rest/binary>>,
				  Z1, Z2, F1, F2, TrUserData) ->
    dfp_read_field_def_ProtoPartyDismissResponse(Rest, Z1,
						 Z2, F1, F2, TrUserData).


skip_64_ProtoPartyDismissResponse(<<_:64, Rest/binary>>,
				  Z1, Z2, F1, F2, TrUserData) ->
    dfp_read_field_def_ProtoPartyDismissResponse(Rest, Z1,
						 Z2, F1, F2, TrUserData).


d_msg_ProtoPartyStartRequest(Bin, TrUserData) ->
    dfp_read_field_def_ProtoPartyStartRequest(Bin, 0, 0,
					      id(undefined, TrUserData),
					      TrUserData).

dfp_read_field_def_ProtoPartyStartRequest(<<10,
					    Rest/binary>>,
					  Z1, Z2, F1, TrUserData) ->
    d_field_ProtoPartyStartRequest_session(Rest, Z1, Z2, F1,
					   TrUserData);
dfp_read_field_def_ProtoPartyStartRequest(<<>>, 0, 0,
					  F1, _) ->
    #'ProtoPartyStartRequest'{session = F1};
dfp_read_field_def_ProtoPartyStartRequest(Other, Z1, Z2,
					  F1, TrUserData) ->
    dg_read_field_def_ProtoPartyStartRequest(Other, Z1, Z2,
					     F1, TrUserData).

dg_read_field_def_ProtoPartyStartRequest(<<1:1, X:7,
					   Rest/binary>>,
					 N, Acc, F1, TrUserData)
    when N < 32 - 7 ->
    dg_read_field_def_ProtoPartyStartRequest(Rest, N + 7,
					     X bsl N + Acc, F1, TrUserData);
dg_read_field_def_ProtoPartyStartRequest(<<0:1, X:7,
					   Rest/binary>>,
					 N, Acc, F1, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
      10 ->
	  d_field_ProtoPartyStartRequest_session(Rest, 0, 0, F1,
						 TrUserData);
      _ ->
	  case Key band 7 of
	    0 ->
		skip_varint_ProtoPartyStartRequest(Rest, 0, 0, F1,
						   TrUserData);
	    1 ->
		skip_64_ProtoPartyStartRequest(Rest, 0, 0, F1,
					       TrUserData);
	    2 ->
		skip_length_delimited_ProtoPartyStartRequest(Rest, 0, 0,
							     F1, TrUserData);
	    5 ->
		skip_32_ProtoPartyStartRequest(Rest, 0, 0, F1,
					       TrUserData)
	  end
    end;
dg_read_field_def_ProtoPartyStartRequest(<<>>, 0, 0, F1,
					 _) ->
    #'ProtoPartyStartRequest'{session = F1}.

d_field_ProtoPartyStartRequest_session(<<1:1, X:7,
					 Rest/binary>>,
				       N, Acc, F1, TrUserData)
    when N < 57 ->
    d_field_ProtoPartyStartRequest_session(Rest, N + 7,
					   X bsl N + Acc, F1, TrUserData);
d_field_ProtoPartyStartRequest_session(<<0:1, X:7,
					 Rest/binary>>,
				       N, Acc, _, TrUserData) ->
    Len = X bsl N + Acc,
    <<Bytes:Len/binary, Rest2/binary>> = Rest,
    NewFValue = binary:copy(Bytes),
    dfp_read_field_def_ProtoPartyStartRequest(Rest2, 0, 0,
					      NewFValue, TrUserData).


skip_varint_ProtoPartyStartRequest(<<1:1, _:7,
				     Rest/binary>>,
				   Z1, Z2, F1, TrUserData) ->
    skip_varint_ProtoPartyStartRequest(Rest, Z1, Z2, F1,
				       TrUserData);
skip_varint_ProtoPartyStartRequest(<<0:1, _:7,
				     Rest/binary>>,
				   Z1, Z2, F1, TrUserData) ->
    dfp_read_field_def_ProtoPartyStartRequest(Rest, Z1, Z2,
					      F1, TrUserData).


skip_length_delimited_ProtoPartyStartRequest(<<1:1, X:7,
					       Rest/binary>>,
					     N, Acc, F1, TrUserData)
    when N < 57 ->
    skip_length_delimited_ProtoPartyStartRequest(Rest,
						 N + 7, X bsl N + Acc, F1,
						 TrUserData);
skip_length_delimited_ProtoPartyStartRequest(<<0:1, X:7,
					       Rest/binary>>,
					     N, Acc, F1, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    dfp_read_field_def_ProtoPartyStartRequest(Rest2, 0, 0,
					      F1, TrUserData).


skip_32_ProtoPartyStartRequest(<<_:32, Rest/binary>>,
			       Z1, Z2, F1, TrUserData) ->
    dfp_read_field_def_ProtoPartyStartRequest(Rest, Z1, Z2,
					      F1, TrUserData).


skip_64_ProtoPartyStartRequest(<<_:64, Rest/binary>>,
			       Z1, Z2, F1, TrUserData) ->
    dfp_read_field_def_ProtoPartyStartRequest(Rest, Z1, Z2,
					      F1, TrUserData).


d_msg_ProtoPartyKickRequest(Bin, TrUserData) ->
    dfp_read_field_def_ProtoPartyKickRequest(Bin, 0, 0,
					     id(undefined, TrUserData),
					     id(undefined, TrUserData),
					     TrUserData).

dfp_read_field_def_ProtoPartyKickRequest(<<10,
					   Rest/binary>>,
					 Z1, Z2, F1, F2, TrUserData) ->
    d_field_ProtoPartyKickRequest_session(Rest, Z1, Z2, F1,
					  F2, TrUserData);
dfp_read_field_def_ProtoPartyKickRequest(<<18,
					   Rest/binary>>,
					 Z1, Z2, F1, F2, TrUserData) ->
    d_field_ProtoPartyKickRequest_id(Rest, Z1, Z2, F1, F2,
				     TrUserData);
dfp_read_field_def_ProtoPartyKickRequest(<<>>, 0, 0, F1,
					 F2, _) ->
    #'ProtoPartyKickRequest'{session = F1, id = F2};
dfp_read_field_def_ProtoPartyKickRequest(Other, Z1, Z2,
					 F1, F2, TrUserData) ->
    dg_read_field_def_ProtoPartyKickRequest(Other, Z1, Z2,
					    F1, F2, TrUserData).

dg_read_field_def_ProtoPartyKickRequest(<<1:1, X:7,
					  Rest/binary>>,
					N, Acc, F1, F2, TrUserData)
    when N < 32 - 7 ->
    dg_read_field_def_ProtoPartyKickRequest(Rest, N + 7,
					    X bsl N + Acc, F1, F2, TrUserData);
dg_read_field_def_ProtoPartyKickRequest(<<0:1, X:7,
					  Rest/binary>>,
					N, Acc, F1, F2, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
      10 ->
	  d_field_ProtoPartyKickRequest_session(Rest, 0, 0, F1,
						F2, TrUserData);
      18 ->
	  d_field_ProtoPartyKickRequest_id(Rest, 0, 0, F1, F2,
					   TrUserData);
      _ ->
	  case Key band 7 of
	    0 ->
		skip_varint_ProtoPartyKickRequest(Rest, 0, 0, F1, F2,
						  TrUserData);
	    1 ->
		skip_64_ProtoPartyKickRequest(Rest, 0, 0, F1, F2,
					      TrUserData);
	    2 ->
		skip_length_delimited_ProtoPartyKickRequest(Rest, 0, 0,
							    F1, F2, TrUserData);
	    5 ->
		skip_32_ProtoPartyKickRequest(Rest, 0, 0, F1, F2,
					      TrUserData)
	  end
    end;
dg_read_field_def_ProtoPartyKickRequest(<<>>, 0, 0, F1,
					F2, _) ->
    #'ProtoPartyKickRequest'{session = F1, id = F2}.

d_field_ProtoPartyKickRequest_session(<<1:1, X:7,
					Rest/binary>>,
				      N, Acc, F1, F2, TrUserData)
    when N < 57 ->
    d_field_ProtoPartyKickRequest_session(Rest, N + 7,
					  X bsl N + Acc, F1, F2, TrUserData);
d_field_ProtoPartyKickRequest_session(<<0:1, X:7,
					Rest/binary>>,
				      N, Acc, _, F2, TrUserData) ->
    Len = X bsl N + Acc,
    <<Bytes:Len/binary, Rest2/binary>> = Rest,
    NewFValue = binary:copy(Bytes),
    dfp_read_field_def_ProtoPartyKickRequest(Rest2, 0, 0,
					     NewFValue, F2, TrUserData).


d_field_ProtoPartyKickRequest_id(<<1:1, X:7,
				   Rest/binary>>,
				 N, Acc, F1, F2, TrUserData)
    when N < 57 ->
    d_field_ProtoPartyKickRequest_id(Rest, N + 7,
				     X bsl N + Acc, F1, F2, TrUserData);
d_field_ProtoPartyKickRequest_id(<<0:1, X:7,
				   Rest/binary>>,
				 N, Acc, F1, _, TrUserData) ->
    Len = X bsl N + Acc,
    <<Bytes:Len/binary, Rest2/binary>> = Rest,
    NewFValue = binary:copy(Bytes),
    dfp_read_field_def_ProtoPartyKickRequest(Rest2, 0, 0,
					     F1, NewFValue, TrUserData).


skip_varint_ProtoPartyKickRequest(<<1:1, _:7,
				    Rest/binary>>,
				  Z1, Z2, F1, F2, TrUserData) ->
    skip_varint_ProtoPartyKickRequest(Rest, Z1, Z2, F1, F2,
				      TrUserData);
skip_varint_ProtoPartyKickRequest(<<0:1, _:7,
				    Rest/binary>>,
				  Z1, Z2, F1, F2, TrUserData) ->
    dfp_read_field_def_ProtoPartyKickRequest(Rest, Z1, Z2,
					     F1, F2, TrUserData).


skip_length_delimited_ProtoPartyKickRequest(<<1:1, X:7,
					      Rest/binary>>,
					    N, Acc, F1, F2, TrUserData)
    when N < 57 ->
    skip_length_delimited_ProtoPartyKickRequest(Rest, N + 7,
						X bsl N + Acc, F1, F2,
						TrUserData);
skip_length_delimited_ProtoPartyKickRequest(<<0:1, X:7,
					      Rest/binary>>,
					    N, Acc, F1, F2, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    dfp_read_field_def_ProtoPartyKickRequest(Rest2, 0, 0,
					     F1, F2, TrUserData).


skip_32_ProtoPartyKickRequest(<<_:32, Rest/binary>>, Z1,
			      Z2, F1, F2, TrUserData) ->
    dfp_read_field_def_ProtoPartyKickRequest(Rest, Z1, Z2,
					     F1, F2, TrUserData).


skip_64_ProtoPartyKickRequest(<<_:64, Rest/binary>>, Z1,
			      Z2, F1, F2, TrUserData) ->
    dfp_read_field_def_ProtoPartyKickRequest(Rest, Z1, Z2,
					     F1, F2, TrUserData).


d_msg_ProtoPartyCreateRequest(Bin, TrUserData) ->
    dfp_read_field_def_ProtoPartyCreateRequest(Bin, 0, 0,
					       id(undefined, TrUserData),
					       id(undefined, TrUserData),
					       TrUserData).

dfp_read_field_def_ProtoPartyCreateRequest(<<10,
					     Rest/binary>>,
					   Z1, Z2, F1, F2, TrUserData) ->
    d_field_ProtoPartyCreateRequest_session(Rest, Z1, Z2,
					    F1, F2, TrUserData);
dfp_read_field_def_ProtoPartyCreateRequest(<<16,
					     Rest/binary>>,
					   Z1, Z2, F1, F2, TrUserData) ->
    d_field_ProtoPartyCreateRequest_id(Rest, Z1, Z2, F1, F2,
				       TrUserData);
dfp_read_field_def_ProtoPartyCreateRequest(<<>>, 0, 0,
					   F1, F2, _) ->
    #'ProtoPartyCreateRequest'{session = F1, id = F2};
dfp_read_field_def_ProtoPartyCreateRequest(Other, Z1,
					   Z2, F1, F2, TrUserData) ->
    dg_read_field_def_ProtoPartyCreateRequest(Other, Z1, Z2,
					      F1, F2, TrUserData).

dg_read_field_def_ProtoPartyCreateRequest(<<1:1, X:7,
					    Rest/binary>>,
					  N, Acc, F1, F2, TrUserData)
    when N < 32 - 7 ->
    dg_read_field_def_ProtoPartyCreateRequest(Rest, N + 7,
					      X bsl N + Acc, F1, F2,
					      TrUserData);
dg_read_field_def_ProtoPartyCreateRequest(<<0:1, X:7,
					    Rest/binary>>,
					  N, Acc, F1, F2, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
      10 ->
	  d_field_ProtoPartyCreateRequest_session(Rest, 0, 0, F1,
						  F2, TrUserData);
      16 ->
	  d_field_ProtoPartyCreateRequest_id(Rest, 0, 0, F1, F2,
					     TrUserData);
      _ ->
	  case Key band 7 of
	    0 ->
		skip_varint_ProtoPartyCreateRequest(Rest, 0, 0, F1, F2,
						    TrUserData);
	    1 ->
		skip_64_ProtoPartyCreateRequest(Rest, 0, 0, F1, F2,
						TrUserData);
	    2 ->
		skip_length_delimited_ProtoPartyCreateRequest(Rest, 0,
							      0, F1, F2,
							      TrUserData);
	    5 ->
		skip_32_ProtoPartyCreateRequest(Rest, 0, 0, F1, F2,
						TrUserData)
	  end
    end;
dg_read_field_def_ProtoPartyCreateRequest(<<>>, 0, 0,
					  F1, F2, _) ->
    #'ProtoPartyCreateRequest'{session = F1, id = F2}.

d_field_ProtoPartyCreateRequest_session(<<1:1, X:7,
					  Rest/binary>>,
					N, Acc, F1, F2, TrUserData)
    when N < 57 ->
    d_field_ProtoPartyCreateRequest_session(Rest, N + 7,
					    X bsl N + Acc, F1, F2, TrUserData);
d_field_ProtoPartyCreateRequest_session(<<0:1, X:7,
					  Rest/binary>>,
					N, Acc, _, F2, TrUserData) ->
    Len = X bsl N + Acc,
    <<Bytes:Len/binary, Rest2/binary>> = Rest,
    NewFValue = binary:copy(Bytes),
    dfp_read_field_def_ProtoPartyCreateRequest(Rest2, 0, 0,
					       NewFValue, F2, TrUserData).


d_field_ProtoPartyCreateRequest_id(<<1:1, X:7,
				     Rest/binary>>,
				   N, Acc, F1, F2, TrUserData)
    when N < 57 ->
    d_field_ProtoPartyCreateRequest_id(Rest, N + 7,
				       X bsl N + Acc, F1, F2, TrUserData);
d_field_ProtoPartyCreateRequest_id(<<0:1, X:7,
				     Rest/binary>>,
				   N, Acc, F1, _, TrUserData) ->
    <<NewFValue:32/signed-native>> = <<(X bsl N +
					  Acc):32/unsigned-native>>,
    dfp_read_field_def_ProtoPartyCreateRequest(Rest, 0, 0,
					       F1, NewFValue, TrUserData).


skip_varint_ProtoPartyCreateRequest(<<1:1, _:7,
				      Rest/binary>>,
				    Z1, Z2, F1, F2, TrUserData) ->
    skip_varint_ProtoPartyCreateRequest(Rest, Z1, Z2, F1,
					F2, TrUserData);
skip_varint_ProtoPartyCreateRequest(<<0:1, _:7,
				      Rest/binary>>,
				    Z1, Z2, F1, F2, TrUserData) ->
    dfp_read_field_def_ProtoPartyCreateRequest(Rest, Z1, Z2,
					       F1, F2, TrUserData).


skip_length_delimited_ProtoPartyCreateRequest(<<1:1,
						X:7, Rest/binary>>,
					      N, Acc, F1, F2, TrUserData)
    when N < 57 ->
    skip_length_delimited_ProtoPartyCreateRequest(Rest,
						  N + 7, X bsl N + Acc, F1, F2,
						  TrUserData);
skip_length_delimited_ProtoPartyCreateRequest(<<0:1,
						X:7, Rest/binary>>,
					      N, Acc, F1, F2, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    dfp_read_field_def_ProtoPartyCreateRequest(Rest2, 0, 0,
					       F1, F2, TrUserData).


skip_32_ProtoPartyCreateRequest(<<_:32, Rest/binary>>,
				Z1, Z2, F1, F2, TrUserData) ->
    dfp_read_field_def_ProtoPartyCreateRequest(Rest, Z1, Z2,
					       F1, F2, TrUserData).


skip_64_ProtoPartyCreateRequest(<<_:64, Rest/binary>>,
				Z1, Z2, F1, F2, TrUserData) ->
    dfp_read_field_def_ProtoPartyCreateRequest(Rest, Z1, Z2,
					       F1, F2, TrUserData).


d_msg_ProtoSocketConnectRequest(Bin, TrUserData) ->
    dfp_read_field_def_ProtoSocketConnectRequest(Bin, 0, 0,
						 id(undefined, TrUserData),
						 TrUserData).

dfp_read_field_def_ProtoSocketConnectRequest(<<10,
					       Rest/binary>>,
					     Z1, Z2, F1, TrUserData) ->
    d_field_ProtoSocketConnectRequest_session(Rest, Z1, Z2,
					      F1, TrUserData);
dfp_read_field_def_ProtoSocketConnectRequest(<<>>, 0, 0,
					     F1, _) ->
    #'ProtoSocketConnectRequest'{session = F1};
dfp_read_field_def_ProtoSocketConnectRequest(Other, Z1,
					     Z2, F1, TrUserData) ->
    dg_read_field_def_ProtoSocketConnectRequest(Other, Z1,
						Z2, F1, TrUserData).

dg_read_field_def_ProtoSocketConnectRequest(<<1:1, X:7,
					      Rest/binary>>,
					    N, Acc, F1, TrUserData)
    when N < 32 - 7 ->
    dg_read_field_def_ProtoSocketConnectRequest(Rest, N + 7,
						X bsl N + Acc, F1, TrUserData);
dg_read_field_def_ProtoSocketConnectRequest(<<0:1, X:7,
					      Rest/binary>>,
					    N, Acc, F1, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
      10 ->
	  d_field_ProtoSocketConnectRequest_session(Rest, 0, 0,
						    F1, TrUserData);
      _ ->
	  case Key band 7 of
	    0 ->
		skip_varint_ProtoSocketConnectRequest(Rest, 0, 0, F1,
						      TrUserData);
	    1 ->
		skip_64_ProtoSocketConnectRequest(Rest, 0, 0, F1,
						  TrUserData);
	    2 ->
		skip_length_delimited_ProtoSocketConnectRequest(Rest, 0,
								0, F1,
								TrUserData);
	    5 ->
		skip_32_ProtoSocketConnectRequest(Rest, 0, 0, F1,
						  TrUserData)
	  end
    end;
dg_read_field_def_ProtoSocketConnectRequest(<<>>, 0, 0,
					    F1, _) ->
    #'ProtoSocketConnectRequest'{session = F1}.

d_field_ProtoSocketConnectRequest_session(<<1:1, X:7,
					    Rest/binary>>,
					  N, Acc, F1, TrUserData)
    when N < 57 ->
    d_field_ProtoSocketConnectRequest_session(Rest, N + 7,
					      X bsl N + Acc, F1, TrUserData);
d_field_ProtoSocketConnectRequest_session(<<0:1, X:7,
					    Rest/binary>>,
					  N, Acc, _, TrUserData) ->
    Len = X bsl N + Acc,
    <<Bytes:Len/binary, Rest2/binary>> = Rest,
    NewFValue = binary:copy(Bytes),
    dfp_read_field_def_ProtoSocketConnectRequest(Rest2, 0,
						 0, NewFValue, TrUserData).


skip_varint_ProtoSocketConnectRequest(<<1:1, _:7,
					Rest/binary>>,
				      Z1, Z2, F1, TrUserData) ->
    skip_varint_ProtoSocketConnectRequest(Rest, Z1, Z2, F1,
					  TrUserData);
skip_varint_ProtoSocketConnectRequest(<<0:1, _:7,
					Rest/binary>>,
				      Z1, Z2, F1, TrUserData) ->
    dfp_read_field_def_ProtoSocketConnectRequest(Rest, Z1,
						 Z2, F1, TrUserData).


skip_length_delimited_ProtoSocketConnectRequest(<<1:1,
						  X:7, Rest/binary>>,
						N, Acc, F1, TrUserData)
    when N < 57 ->
    skip_length_delimited_ProtoSocketConnectRequest(Rest,
						    N + 7, X bsl N + Acc, F1,
						    TrUserData);
skip_length_delimited_ProtoSocketConnectRequest(<<0:1,
						  X:7, Rest/binary>>,
						N, Acc, F1, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    dfp_read_field_def_ProtoSocketConnectRequest(Rest2, 0,
						 0, F1, TrUserData).


skip_32_ProtoSocketConnectRequest(<<_:32, Rest/binary>>,
				  Z1, Z2, F1, TrUserData) ->
    dfp_read_field_def_ProtoSocketConnectRequest(Rest, Z1,
						 Z2, F1, TrUserData).


skip_64_ProtoSocketConnectRequest(<<_:64, Rest/binary>>,
				  Z1, Z2, F1, TrUserData) ->
    dfp_read_field_def_ProtoSocketConnectRequest(Rest, Z1,
						 Z2, F1, TrUserData).


d_msg_ProtoPartyInfoNotify(Bin, TrUserData) ->
    dfp_read_field_def_ProtoPartyInfoNotify(Bin, 0, 0,
					    id(undefined, TrUserData),
					    id(undefined, TrUserData),
					    id(undefined, TrUserData),
					    id(undefined, TrUserData),
					    id(undefined, TrUserData),
					    id(undefined, TrUserData),
					    TrUserData).

dfp_read_field_def_ProtoPartyInfoNotify(<<10,
					  Rest/binary>>,
					Z1, Z2, F1, F2, F3, F4, F5, F6,
					TrUserData) ->
    d_field_ProtoPartyInfoNotify_session(Rest, Z1, Z2, F1,
					 F2, F3, F4, F5, F6, TrUserData);
dfp_read_field_def_ProtoPartyInfoNotify(<<16,
					  Rest/binary>>,
					Z1, Z2, F1, F2, F3, F4, F5, F6,
					TrUserData) ->
    d_field_ProtoPartyInfoNotify_talent_id(Rest, Z1, Z2, F1,
					   F2, F3, F4, F5, F6, TrUserData);
dfp_read_field_def_ProtoPartyInfoNotify(<<24,
					  Rest/binary>>,
					Z1, Z2, F1, F2, F3, F4, F5, F6,
					TrUserData) ->
    d_field_ProtoPartyInfoNotify_talent_end_at(Rest, Z1, Z2,
					       F1, F2, F3, F4, F5, F6,
					       TrUserData);
dfp_read_field_def_ProtoPartyInfoNotify(<<32,
					  Rest/binary>>,
					Z1, Z2, F1, F2, F3, F4, F5, F6,
					TrUserData) ->
    d_field_ProtoPartyInfoNotify_remained_create_times(Rest,
						       Z1, Z2, F1, F2, F3, F4,
						       F5, F6, TrUserData);
dfp_read_field_def_ProtoPartyInfoNotify(<<40,
					  Rest/binary>>,
					Z1, Z2, F1, F2, F3, F4, F5, F6,
					TrUserData) ->
    d_field_ProtoPartyInfoNotify_remained_join_times(Rest,
						     Z1, Z2, F1, F2, F3, F4, F5,
						     F6, TrUserData);
dfp_read_field_def_ProtoPartyInfoNotify(<<50,
					  Rest/binary>>,
					Z1, Z2, F1, F2, F3, F4, F5, F6,
					TrUserData) ->
    d_field_ProtoPartyInfoNotify_info(Rest, Z1, Z2, F1, F2,
				      F3, F4, F5, F6, TrUserData);
dfp_read_field_def_ProtoPartyInfoNotify(<<>>, 0, 0, F1,
					F2, F3, F4, F5, F6, _) ->
    #'ProtoPartyInfoNotify'{session = F1, talent_id = F2,
			    talent_end_at = F3, remained_create_times = F4,
			    remained_join_times = F5, info = F6};
dfp_read_field_def_ProtoPartyInfoNotify(Other, Z1, Z2,
					F1, F2, F3, F4, F5, F6, TrUserData) ->
    dg_read_field_def_ProtoPartyInfoNotify(Other, Z1, Z2,
					   F1, F2, F3, F4, F5, F6, TrUserData).

dg_read_field_def_ProtoPartyInfoNotify(<<1:1, X:7,
					 Rest/binary>>,
				       N, Acc, F1, F2, F3, F4, F5, F6,
				       TrUserData)
    when N < 32 - 7 ->
    dg_read_field_def_ProtoPartyInfoNotify(Rest, N + 7,
					   X bsl N + Acc, F1, F2, F3, F4, F5,
					   F6, TrUserData);
dg_read_field_def_ProtoPartyInfoNotify(<<0:1, X:7,
					 Rest/binary>>,
				       N, Acc, F1, F2, F3, F4, F5, F6,
				       TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
      10 ->
	  d_field_ProtoPartyInfoNotify_session(Rest, 0, 0, F1, F2,
					       F3, F4, F5, F6, TrUserData);
      16 ->
	  d_field_ProtoPartyInfoNotify_talent_id(Rest, 0, 0, F1,
						 F2, F3, F4, F5, F6,
						 TrUserData);
      24 ->
	  d_field_ProtoPartyInfoNotify_talent_end_at(Rest, 0, 0,
						     F1, F2, F3, F4, F5, F6,
						     TrUserData);
      32 ->
	  d_field_ProtoPartyInfoNotify_remained_create_times(Rest,
							     0, 0, F1, F2, F3,
							     F4, F5, F6,
							     TrUserData);
      40 ->
	  d_field_ProtoPartyInfoNotify_remained_join_times(Rest,
							   0, 0, F1, F2, F3, F4,
							   F5, F6, TrUserData);
      50 ->
	  d_field_ProtoPartyInfoNotify_info(Rest, 0, 0, F1, F2,
					    F3, F4, F5, F6, TrUserData);
      _ ->
	  case Key band 7 of
	    0 ->
		skip_varint_ProtoPartyInfoNotify(Rest, 0, 0, F1, F2, F3,
						 F4, F5, F6, TrUserData);
	    1 ->
		skip_64_ProtoPartyInfoNotify(Rest, 0, 0, F1, F2, F3, F4,
					     F5, F6, TrUserData);
	    2 ->
		skip_length_delimited_ProtoPartyInfoNotify(Rest, 0, 0,
							   F1, F2, F3, F4, F5,
							   F6, TrUserData);
	    5 ->
		skip_32_ProtoPartyInfoNotify(Rest, 0, 0, F1, F2, F3, F4,
					     F5, F6, TrUserData)
	  end
    end;
dg_read_field_def_ProtoPartyInfoNotify(<<>>, 0, 0, F1,
				       F2, F3, F4, F5, F6, _) ->
    #'ProtoPartyInfoNotify'{session = F1, talent_id = F2,
			    talent_end_at = F3, remained_create_times = F4,
			    remained_join_times = F5, info = F6}.

d_field_ProtoPartyInfoNotify_session(<<1:1, X:7,
				       Rest/binary>>,
				     N, Acc, F1, F2, F3, F4, F5, F6, TrUserData)
    when N < 57 ->
    d_field_ProtoPartyInfoNotify_session(Rest, N + 7,
					 X bsl N + Acc, F1, F2, F3, F4, F5, F6,
					 TrUserData);
d_field_ProtoPartyInfoNotify_session(<<0:1, X:7,
				       Rest/binary>>,
				     N, Acc, _, F2, F3, F4, F5, F6,
				     TrUserData) ->
    Len = X bsl N + Acc,
    <<Bytes:Len/binary, Rest2/binary>> = Rest,
    NewFValue = binary:copy(Bytes),
    dfp_read_field_def_ProtoPartyInfoNotify(Rest2, 0, 0,
					    NewFValue, F2, F3, F4, F5, F6,
					    TrUserData).


d_field_ProtoPartyInfoNotify_talent_id(<<1:1, X:7,
					 Rest/binary>>,
				       N, Acc, F1, F2, F3, F4, F5, F6,
				       TrUserData)
    when N < 57 ->
    d_field_ProtoPartyInfoNotify_talent_id(Rest, N + 7,
					   X bsl N + Acc, F1, F2, F3, F4, F5,
					   F6, TrUserData);
d_field_ProtoPartyInfoNotify_talent_id(<<0:1, X:7,
					 Rest/binary>>,
				       N, Acc, F1, _, F3, F4, F5, F6,
				       TrUserData) ->
    <<NewFValue:32/signed-native>> = <<(X bsl N +
					  Acc):32/unsigned-native>>,
    dfp_read_field_def_ProtoPartyInfoNotify(Rest, 0, 0, F1,
					    NewFValue, F3, F4, F5, F6,
					    TrUserData).


d_field_ProtoPartyInfoNotify_talent_end_at(<<1:1, X:7,
					     Rest/binary>>,
					   N, Acc, F1, F2, F3, F4, F5, F6,
					   TrUserData)
    when N < 57 ->
    d_field_ProtoPartyInfoNotify_talent_end_at(Rest, N + 7,
					       X bsl N + Acc, F1, F2, F3, F4,
					       F5, F6, TrUserData);
d_field_ProtoPartyInfoNotify_talent_end_at(<<0:1, X:7,
					     Rest/binary>>,
					   N, Acc, F1, F2, _, F4, F5, F6,
					   TrUserData) ->
    <<NewFValue:64/signed-native>> = <<(X bsl N +
					  Acc):64/unsigned-native>>,
    dfp_read_field_def_ProtoPartyInfoNotify(Rest, 0, 0, F1,
					    F2, NewFValue, F4, F5, F6,
					    TrUserData).


d_field_ProtoPartyInfoNotify_remained_create_times(<<1:1,
						     X:7, Rest/binary>>,
						   N, Acc, F1, F2, F3, F4, F5,
						   F6, TrUserData)
    when N < 57 ->
    d_field_ProtoPartyInfoNotify_remained_create_times(Rest,
						       N + 7, X bsl N + Acc, F1,
						       F2, F3, F4, F5, F6,
						       TrUserData);
d_field_ProtoPartyInfoNotify_remained_create_times(<<0:1,
						     X:7, Rest/binary>>,
						   N, Acc, F1, F2, F3, _, F5,
						   F6, TrUserData) ->
    <<NewFValue:32/signed-native>> = <<(X bsl N +
					  Acc):32/unsigned-native>>,
    dfp_read_field_def_ProtoPartyInfoNotify(Rest, 0, 0, F1,
					    F2, F3, NewFValue, F5, F6,
					    TrUserData).


d_field_ProtoPartyInfoNotify_remained_join_times(<<1:1,
						   X:7, Rest/binary>>,
						 N, Acc, F1, F2, F3, F4, F5, F6,
						 TrUserData)
    when N < 57 ->
    d_field_ProtoPartyInfoNotify_remained_join_times(Rest,
						     N + 7, X bsl N + Acc, F1,
						     F2, F3, F4, F5, F6,
						     TrUserData);
d_field_ProtoPartyInfoNotify_remained_join_times(<<0:1,
						   X:7, Rest/binary>>,
						 N, Acc, F1, F2, F3, F4, _, F6,
						 TrUserData) ->
    <<NewFValue:32/signed-native>> = <<(X bsl N +
					  Acc):32/unsigned-native>>,
    dfp_read_field_def_ProtoPartyInfoNotify(Rest, 0, 0, F1,
					    F2, F3, F4, NewFValue, F6,
					    TrUserData).


d_field_ProtoPartyInfoNotify_info(<<1:1, X:7,
				    Rest/binary>>,
				  N, Acc, F1, F2, F3, F4, F5, F6, TrUserData)
    when N < 57 ->
    d_field_ProtoPartyInfoNotify_info(Rest, N + 7,
				      X bsl N + Acc, F1, F2, F3, F4, F5, F6,
				      TrUserData);
d_field_ProtoPartyInfoNotify_info(<<0:1, X:7,
				    Rest/binary>>,
				  N, Acc, F1, F2, F3, F4, F5, F6, TrUserData) ->
    Len = X bsl N + Acc,
    <<Bs:Len/binary, Rest2/binary>> = Rest,
    NewFValue = id(d_msg_ProtoPartyInfo(Bs, TrUserData),
		   TrUserData),
    dfp_read_field_def_ProtoPartyInfoNotify(Rest2, 0, 0, F1,
					    F2, F3, F4, F5,
					    if F6 == undefined -> NewFValue;
					       true ->
						   merge_msg_ProtoPartyInfo(F6,
									    NewFValue,
									    TrUserData)
					    end,
					    TrUserData).


skip_varint_ProtoPartyInfoNotify(<<1:1, _:7,
				   Rest/binary>>,
				 Z1, Z2, F1, F2, F3, F4, F5, F6, TrUserData) ->
    skip_varint_ProtoPartyInfoNotify(Rest, Z1, Z2, F1, F2,
				     F3, F4, F5, F6, TrUserData);
skip_varint_ProtoPartyInfoNotify(<<0:1, _:7,
				   Rest/binary>>,
				 Z1, Z2, F1, F2, F3, F4, F5, F6, TrUserData) ->
    dfp_read_field_def_ProtoPartyInfoNotify(Rest, Z1, Z2,
					    F1, F2, F3, F4, F5, F6, TrUserData).


skip_length_delimited_ProtoPartyInfoNotify(<<1:1, X:7,
					     Rest/binary>>,
					   N, Acc, F1, F2, F3, F4, F5, F6,
					   TrUserData)
    when N < 57 ->
    skip_length_delimited_ProtoPartyInfoNotify(Rest, N + 7,
					       X bsl N + Acc, F1, F2, F3, F4,
					       F5, F6, TrUserData);
skip_length_delimited_ProtoPartyInfoNotify(<<0:1, X:7,
					     Rest/binary>>,
					   N, Acc, F1, F2, F3, F4, F5, F6,
					   TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    dfp_read_field_def_ProtoPartyInfoNotify(Rest2, 0, 0, F1,
					    F2, F3, F4, F5, F6, TrUserData).


skip_32_ProtoPartyInfoNotify(<<_:32, Rest/binary>>, Z1,
			     Z2, F1, F2, F3, F4, F5, F6, TrUserData) ->
    dfp_read_field_def_ProtoPartyInfoNotify(Rest, Z1, Z2,
					    F1, F2, F3, F4, F5, F6, TrUserData).


skip_64_ProtoPartyInfoNotify(<<_:64, Rest/binary>>, Z1,
			     Z2, F1, F2, F3, F4, F5, F6, TrUserData) ->
    dfp_read_field_def_ProtoPartyInfoNotify(Rest, Z1, Z2,
					    F1, F2, F3, F4, F5, F6, TrUserData).


d_msg_ProtoSocketConnectResponse(Bin, TrUserData) ->
    dfp_read_field_def_ProtoSocketConnectResponse(Bin, 0, 0,
						  id(undefined, TrUserData),
						  id(undefined, TrUserData),
						  id(undefined, TrUserData),
						  TrUserData).

dfp_read_field_def_ProtoSocketConnectResponse(<<8,
						Rest/binary>>,
					      Z1, Z2, F1, F2, F3, TrUserData) ->
    d_field_ProtoSocketConnectResponse_ret(Rest, Z1, Z2, F1,
					   F2, F3, TrUserData);
dfp_read_field_def_ProtoSocketConnectResponse(<<18,
						Rest/binary>>,
					      Z1, Z2, F1, F2, F3, TrUserData) ->
    d_field_ProtoSocketConnectResponse_session(Rest, Z1, Z2,
					       F1, F2, F3, TrUserData);
dfp_read_field_def_ProtoSocketConnectResponse(<<24,
						Rest/binary>>,
					      Z1, Z2, F1, F2, F3, TrUserData) ->
    d_field_ProtoSocketConnectResponse_next_try_at(Rest, Z1,
						   Z2, F1, F2, F3, TrUserData);
dfp_read_field_def_ProtoSocketConnectResponse(<<>>, 0,
					      0, F1, F2, F3, _) ->
    #'ProtoSocketConnectResponse'{ret = F1, session = F2,
				  next_try_at = F3};
dfp_read_field_def_ProtoSocketConnectResponse(Other, Z1,
					      Z2, F1, F2, F3, TrUserData) ->
    dg_read_field_def_ProtoSocketConnectResponse(Other, Z1,
						 Z2, F1, F2, F3, TrUserData).

dg_read_field_def_ProtoSocketConnectResponse(<<1:1, X:7,
					       Rest/binary>>,
					     N, Acc, F1, F2, F3, TrUserData)
    when N < 32 - 7 ->
    dg_read_field_def_ProtoSocketConnectResponse(Rest,
						 N + 7, X bsl N + Acc, F1, F2,
						 F3, TrUserData);
dg_read_field_def_ProtoSocketConnectResponse(<<0:1, X:7,
					       Rest/binary>>,
					     N, Acc, F1, F2, F3, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
      8 ->
	  d_field_ProtoSocketConnectResponse_ret(Rest, 0, 0, F1,
						 F2, F3, TrUserData);
      18 ->
	  d_field_ProtoSocketConnectResponse_session(Rest, 0, 0,
						     F1, F2, F3, TrUserData);
      24 ->
	  d_field_ProtoSocketConnectResponse_next_try_at(Rest, 0,
							 0, F1, F2, F3,
							 TrUserData);
      _ ->
	  case Key band 7 of
	    0 ->
		skip_varint_ProtoSocketConnectResponse(Rest, 0, 0, F1,
						       F2, F3, TrUserData);
	    1 ->
		skip_64_ProtoSocketConnectResponse(Rest, 0, 0, F1, F2,
						   F3, TrUserData);
	    2 ->
		skip_length_delimited_ProtoSocketConnectResponse(Rest,
								 0, 0, F1, F2,
								 F3,
								 TrUserData);
	    5 ->
		skip_32_ProtoSocketConnectResponse(Rest, 0, 0, F1, F2,
						   F3, TrUserData)
	  end
    end;
dg_read_field_def_ProtoSocketConnectResponse(<<>>, 0, 0,
					     F1, F2, F3, _) ->
    #'ProtoSocketConnectResponse'{ret = F1, session = F2,
				  next_try_at = F3}.

d_field_ProtoSocketConnectResponse_ret(<<1:1, X:7,
					 Rest/binary>>,
				       N, Acc, F1, F2, F3, TrUserData)
    when N < 57 ->
    d_field_ProtoSocketConnectResponse_ret(Rest, N + 7,
					   X bsl N + Acc, F1, F2, F3,
					   TrUserData);
d_field_ProtoSocketConnectResponse_ret(<<0:1, X:7,
					 Rest/binary>>,
				       N, Acc, _, F2, F3, TrUserData) ->
    <<NewFValue:32/signed-native>> = <<(X bsl N +
					  Acc):32/unsigned-native>>,
    dfp_read_field_def_ProtoSocketConnectResponse(Rest, 0,
						  0, NewFValue, F2, F3,
						  TrUserData).


d_field_ProtoSocketConnectResponse_session(<<1:1, X:7,
					     Rest/binary>>,
					   N, Acc, F1, F2, F3, TrUserData)
    when N < 57 ->
    d_field_ProtoSocketConnectResponse_session(Rest, N + 7,
					       X bsl N + Acc, F1, F2, F3,
					       TrUserData);
d_field_ProtoSocketConnectResponse_session(<<0:1, X:7,
					     Rest/binary>>,
					   N, Acc, F1, _, F3, TrUserData) ->
    Len = X bsl N + Acc,
    <<Bytes:Len/binary, Rest2/binary>> = Rest,
    NewFValue = binary:copy(Bytes),
    dfp_read_field_def_ProtoSocketConnectResponse(Rest2, 0,
						  0, F1, NewFValue, F3,
						  TrUserData).


d_field_ProtoSocketConnectResponse_next_try_at(<<1:1,
						 X:7, Rest/binary>>,
					       N, Acc, F1, F2, F3, TrUserData)
    when N < 57 ->
    d_field_ProtoSocketConnectResponse_next_try_at(Rest,
						   N + 7, X bsl N + Acc, F1, F2,
						   F3, TrUserData);
d_field_ProtoSocketConnectResponse_next_try_at(<<0:1,
						 X:7, Rest/binary>>,
					       N, Acc, F1, F2, _, TrUserData) ->
    <<NewFValue:64/signed-native>> = <<(X bsl N +
					  Acc):64/unsigned-native>>,
    dfp_read_field_def_ProtoSocketConnectResponse(Rest, 0,
						  0, F1, F2, NewFValue,
						  TrUserData).


skip_varint_ProtoSocketConnectResponse(<<1:1, _:7,
					 Rest/binary>>,
				       Z1, Z2, F1, F2, F3, TrUserData) ->
    skip_varint_ProtoSocketConnectResponse(Rest, Z1, Z2, F1,
					   F2, F3, TrUserData);
skip_varint_ProtoSocketConnectResponse(<<0:1, _:7,
					 Rest/binary>>,
				       Z1, Z2, F1, F2, F3, TrUserData) ->
    dfp_read_field_def_ProtoSocketConnectResponse(Rest, Z1,
						  Z2, F1, F2, F3, TrUserData).


skip_length_delimited_ProtoSocketConnectResponse(<<1:1,
						   X:7, Rest/binary>>,
						 N, Acc, F1, F2, F3, TrUserData)
    when N < 57 ->
    skip_length_delimited_ProtoSocketConnectResponse(Rest,
						     N + 7, X bsl N + Acc, F1,
						     F2, F3, TrUserData);
skip_length_delimited_ProtoSocketConnectResponse(<<0:1,
						   X:7, Rest/binary>>,
						 N, Acc, F1, F2, F3,
						 TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    dfp_read_field_def_ProtoSocketConnectResponse(Rest2, 0,
						  0, F1, F2, F3, TrUserData).


skip_32_ProtoSocketConnectResponse(<<_:32,
				     Rest/binary>>,
				   Z1, Z2, F1, F2, F3, TrUserData) ->
    dfp_read_field_def_ProtoSocketConnectResponse(Rest, Z1,
						  Z2, F1, F2, F3, TrUserData).


skip_64_ProtoSocketConnectResponse(<<_:64,
				     Rest/binary>>,
				   Z1, Z2, F1, F2, F3, TrUserData) ->
    dfp_read_field_def_ProtoSocketConnectResponse(Rest, Z1,
						  Z2, F1, F2, F3, TrUserData).


d_msg_ProtoPartyBuyResponse(Bin, TrUserData) ->
    dfp_read_field_def_ProtoPartyBuyResponse(Bin, 0, 0,
					     id(undefined, TrUserData),
					     id(undefined, TrUserData),
					     TrUserData).

dfp_read_field_def_ProtoPartyBuyResponse(<<8,
					   Rest/binary>>,
					 Z1, Z2, F1, F2, TrUserData) ->
    d_field_ProtoPartyBuyResponse_ret(Rest, Z1, Z2, F1, F2,
				      TrUserData);
dfp_read_field_def_ProtoPartyBuyResponse(<<18,
					   Rest/binary>>,
					 Z1, Z2, F1, F2, TrUserData) ->
    d_field_ProtoPartyBuyResponse_session(Rest, Z1, Z2, F1,
					  F2, TrUserData);
dfp_read_field_def_ProtoPartyBuyResponse(<<>>, 0, 0, F1,
					 F2, _) ->
    #'ProtoPartyBuyResponse'{ret = F1, session = F2};
dfp_read_field_def_ProtoPartyBuyResponse(Other, Z1, Z2,
					 F1, F2, TrUserData) ->
    dg_read_field_def_ProtoPartyBuyResponse(Other, Z1, Z2,
					    F1, F2, TrUserData).

dg_read_field_def_ProtoPartyBuyResponse(<<1:1, X:7,
					  Rest/binary>>,
					N, Acc, F1, F2, TrUserData)
    when N < 32 - 7 ->
    dg_read_field_def_ProtoPartyBuyResponse(Rest, N + 7,
					    X bsl N + Acc, F1, F2, TrUserData);
dg_read_field_def_ProtoPartyBuyResponse(<<0:1, X:7,
					  Rest/binary>>,
					N, Acc, F1, F2, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
      8 ->
	  d_field_ProtoPartyBuyResponse_ret(Rest, 0, 0, F1, F2,
					    TrUserData);
      18 ->
	  d_field_ProtoPartyBuyResponse_session(Rest, 0, 0, F1,
						F2, TrUserData);
      _ ->
	  case Key band 7 of
	    0 ->
		skip_varint_ProtoPartyBuyResponse(Rest, 0, 0, F1, F2,
						  TrUserData);
	    1 ->
		skip_64_ProtoPartyBuyResponse(Rest, 0, 0, F1, F2,
					      TrUserData);
	    2 ->
		skip_length_delimited_ProtoPartyBuyResponse(Rest, 0, 0,
							    F1, F2, TrUserData);
	    5 ->
		skip_32_ProtoPartyBuyResponse(Rest, 0, 0, F1, F2,
					      TrUserData)
	  end
    end;
dg_read_field_def_ProtoPartyBuyResponse(<<>>, 0, 0, F1,
					F2, _) ->
    #'ProtoPartyBuyResponse'{ret = F1, session = F2}.

d_field_ProtoPartyBuyResponse_ret(<<1:1, X:7,
				    Rest/binary>>,
				  N, Acc, F1, F2, TrUserData)
    when N < 57 ->
    d_field_ProtoPartyBuyResponse_ret(Rest, N + 7,
				      X bsl N + Acc, F1, F2, TrUserData);
d_field_ProtoPartyBuyResponse_ret(<<0:1, X:7,
				    Rest/binary>>,
				  N, Acc, _, F2, TrUserData) ->
    <<NewFValue:32/signed-native>> = <<(X bsl N +
					  Acc):32/unsigned-native>>,
    dfp_read_field_def_ProtoPartyBuyResponse(Rest, 0, 0,
					     NewFValue, F2, TrUserData).


d_field_ProtoPartyBuyResponse_session(<<1:1, X:7,
					Rest/binary>>,
				      N, Acc, F1, F2, TrUserData)
    when N < 57 ->
    d_field_ProtoPartyBuyResponse_session(Rest, N + 7,
					  X bsl N + Acc, F1, F2, TrUserData);
d_field_ProtoPartyBuyResponse_session(<<0:1, X:7,
					Rest/binary>>,
				      N, Acc, F1, _, TrUserData) ->
    Len = X bsl N + Acc,
    <<Bytes:Len/binary, Rest2/binary>> = Rest,
    NewFValue = binary:copy(Bytes),
    dfp_read_field_def_ProtoPartyBuyResponse(Rest2, 0, 0,
					     F1, NewFValue, TrUserData).


skip_varint_ProtoPartyBuyResponse(<<1:1, _:7,
				    Rest/binary>>,
				  Z1, Z2, F1, F2, TrUserData) ->
    skip_varint_ProtoPartyBuyResponse(Rest, Z1, Z2, F1, F2,
				      TrUserData);
skip_varint_ProtoPartyBuyResponse(<<0:1, _:7,
				    Rest/binary>>,
				  Z1, Z2, F1, F2, TrUserData) ->
    dfp_read_field_def_ProtoPartyBuyResponse(Rest, Z1, Z2,
					     F1, F2, TrUserData).


skip_length_delimited_ProtoPartyBuyResponse(<<1:1, X:7,
					      Rest/binary>>,
					    N, Acc, F1, F2, TrUserData)
    when N < 57 ->
    skip_length_delimited_ProtoPartyBuyResponse(Rest, N + 7,
						X bsl N + Acc, F1, F2,
						TrUserData);
skip_length_delimited_ProtoPartyBuyResponse(<<0:1, X:7,
					      Rest/binary>>,
					    N, Acc, F1, F2, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    dfp_read_field_def_ProtoPartyBuyResponse(Rest2, 0, 0,
					     F1, F2, TrUserData).


skip_32_ProtoPartyBuyResponse(<<_:32, Rest/binary>>, Z1,
			      Z2, F1, F2, TrUserData) ->
    dfp_read_field_def_ProtoPartyBuyResponse(Rest, Z1, Z2,
					     F1, F2, TrUserData).


skip_64_ProtoPartyBuyResponse(<<_:64, Rest/binary>>, Z1,
			      Z2, F1, F2, TrUserData) ->
    dfp_read_field_def_ProtoPartyBuyResponse(Rest, Z1, Z2,
					     F1, F2, TrUserData).


d_msg_ProtoPartyDismissRequest(Bin, TrUserData) ->
    dfp_read_field_def_ProtoPartyDismissRequest(Bin, 0, 0,
						id(undefined, TrUserData),
						TrUserData).

dfp_read_field_def_ProtoPartyDismissRequest(<<10,
					      Rest/binary>>,
					    Z1, Z2, F1, TrUserData) ->
    d_field_ProtoPartyDismissRequest_session(Rest, Z1, Z2,
					     F1, TrUserData);
dfp_read_field_def_ProtoPartyDismissRequest(<<>>, 0, 0,
					    F1, _) ->
    #'ProtoPartyDismissRequest'{session = F1};
dfp_read_field_def_ProtoPartyDismissRequest(Other, Z1,
					    Z2, F1, TrUserData) ->
    dg_read_field_def_ProtoPartyDismissRequest(Other, Z1,
					       Z2, F1, TrUserData).

dg_read_field_def_ProtoPartyDismissRequest(<<1:1, X:7,
					     Rest/binary>>,
					   N, Acc, F1, TrUserData)
    when N < 32 - 7 ->
    dg_read_field_def_ProtoPartyDismissRequest(Rest, N + 7,
					       X bsl N + Acc, F1, TrUserData);
dg_read_field_def_ProtoPartyDismissRequest(<<0:1, X:7,
					     Rest/binary>>,
					   N, Acc, F1, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
      10 ->
	  d_field_ProtoPartyDismissRequest_session(Rest, 0, 0, F1,
						   TrUserData);
      _ ->
	  case Key band 7 of
	    0 ->
		skip_varint_ProtoPartyDismissRequest(Rest, 0, 0, F1,
						     TrUserData);
	    1 ->
		skip_64_ProtoPartyDismissRequest(Rest, 0, 0, F1,
						 TrUserData);
	    2 ->
		skip_length_delimited_ProtoPartyDismissRequest(Rest, 0,
							       0, F1,
							       TrUserData);
	    5 ->
		skip_32_ProtoPartyDismissRequest(Rest, 0, 0, F1,
						 TrUserData)
	  end
    end;
dg_read_field_def_ProtoPartyDismissRequest(<<>>, 0, 0,
					   F1, _) ->
    #'ProtoPartyDismissRequest'{session = F1}.

d_field_ProtoPartyDismissRequest_session(<<1:1, X:7,
					   Rest/binary>>,
					 N, Acc, F1, TrUserData)
    when N < 57 ->
    d_field_ProtoPartyDismissRequest_session(Rest, N + 7,
					     X bsl N + Acc, F1, TrUserData);
d_field_ProtoPartyDismissRequest_session(<<0:1, X:7,
					   Rest/binary>>,
					 N, Acc, _, TrUserData) ->
    Len = X bsl N + Acc,
    <<Bytes:Len/binary, Rest2/binary>> = Rest,
    NewFValue = binary:copy(Bytes),
    dfp_read_field_def_ProtoPartyDismissRequest(Rest2, 0, 0,
						NewFValue, TrUserData).


skip_varint_ProtoPartyDismissRequest(<<1:1, _:7,
				       Rest/binary>>,
				     Z1, Z2, F1, TrUserData) ->
    skip_varint_ProtoPartyDismissRequest(Rest, Z1, Z2, F1,
					 TrUserData);
skip_varint_ProtoPartyDismissRequest(<<0:1, _:7,
				       Rest/binary>>,
				     Z1, Z2, F1, TrUserData) ->
    dfp_read_field_def_ProtoPartyDismissRequest(Rest, Z1,
						Z2, F1, TrUserData).


skip_length_delimited_ProtoPartyDismissRequest(<<1:1,
						 X:7, Rest/binary>>,
					       N, Acc, F1, TrUserData)
    when N < 57 ->
    skip_length_delimited_ProtoPartyDismissRequest(Rest,
						   N + 7, X bsl N + Acc, F1,
						   TrUserData);
skip_length_delimited_ProtoPartyDismissRequest(<<0:1,
						 X:7, Rest/binary>>,
					       N, Acc, F1, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    dfp_read_field_def_ProtoPartyDismissRequest(Rest2, 0, 0,
						F1, TrUserData).


skip_32_ProtoPartyDismissRequest(<<_:32, Rest/binary>>,
				 Z1, Z2, F1, TrUserData) ->
    dfp_read_field_def_ProtoPartyDismissRequest(Rest, Z1,
						Z2, F1, TrUserData).


skip_64_ProtoPartyDismissRequest(<<_:64, Rest/binary>>,
				 Z1, Z2, F1, TrUserData) ->
    dfp_read_field_def_ProtoPartyDismissRequest(Rest, Z1,
						Z2, F1, TrUserData).


d_msg_ProtoPartyJoinRequest(Bin, TrUserData) ->
    dfp_read_field_def_ProtoPartyJoinRequest(Bin, 0, 0,
					     id(undefined, TrUserData),
					     id(undefined, TrUserData),
					     TrUserData).

dfp_read_field_def_ProtoPartyJoinRequest(<<10,
					   Rest/binary>>,
					 Z1, Z2, F1, F2, TrUserData) ->
    d_field_ProtoPartyJoinRequest_session(Rest, Z1, Z2, F1,
					  F2, TrUserData);
dfp_read_field_def_ProtoPartyJoinRequest(<<18,
					   Rest/binary>>,
					 Z1, Z2, F1, F2, TrUserData) ->
    d_field_ProtoPartyJoinRequest_owner_id(Rest, Z1, Z2, F1,
					   F2, TrUserData);
dfp_read_field_def_ProtoPartyJoinRequest(<<>>, 0, 0, F1,
					 F2, _) ->
    #'ProtoPartyJoinRequest'{session = F1, owner_id = F2};
dfp_read_field_def_ProtoPartyJoinRequest(Other, Z1, Z2,
					 F1, F2, TrUserData) ->
    dg_read_field_def_ProtoPartyJoinRequest(Other, Z1, Z2,
					    F1, F2, TrUserData).

dg_read_field_def_ProtoPartyJoinRequest(<<1:1, X:7,
					  Rest/binary>>,
					N, Acc, F1, F2, TrUserData)
    when N < 32 - 7 ->
    dg_read_field_def_ProtoPartyJoinRequest(Rest, N + 7,
					    X bsl N + Acc, F1, F2, TrUserData);
dg_read_field_def_ProtoPartyJoinRequest(<<0:1, X:7,
					  Rest/binary>>,
					N, Acc, F1, F2, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
      10 ->
	  d_field_ProtoPartyJoinRequest_session(Rest, 0, 0, F1,
						F2, TrUserData);
      18 ->
	  d_field_ProtoPartyJoinRequest_owner_id(Rest, 0, 0, F1,
						 F2, TrUserData);
      _ ->
	  case Key band 7 of
	    0 ->
		skip_varint_ProtoPartyJoinRequest(Rest, 0, 0, F1, F2,
						  TrUserData);
	    1 ->
		skip_64_ProtoPartyJoinRequest(Rest, 0, 0, F1, F2,
					      TrUserData);
	    2 ->
		skip_length_delimited_ProtoPartyJoinRequest(Rest, 0, 0,
							    F1, F2, TrUserData);
	    5 ->
		skip_32_ProtoPartyJoinRequest(Rest, 0, 0, F1, F2,
					      TrUserData)
	  end
    end;
dg_read_field_def_ProtoPartyJoinRequest(<<>>, 0, 0, F1,
					F2, _) ->
    #'ProtoPartyJoinRequest'{session = F1, owner_id = F2}.

d_field_ProtoPartyJoinRequest_session(<<1:1, X:7,
					Rest/binary>>,
				      N, Acc, F1, F2, TrUserData)
    when N < 57 ->
    d_field_ProtoPartyJoinRequest_session(Rest, N + 7,
					  X bsl N + Acc, F1, F2, TrUserData);
d_field_ProtoPartyJoinRequest_session(<<0:1, X:7,
					Rest/binary>>,
				      N, Acc, _, F2, TrUserData) ->
    Len = X bsl N + Acc,
    <<Bytes:Len/binary, Rest2/binary>> = Rest,
    NewFValue = binary:copy(Bytes),
    dfp_read_field_def_ProtoPartyJoinRequest(Rest2, 0, 0,
					     NewFValue, F2, TrUserData).


d_field_ProtoPartyJoinRequest_owner_id(<<1:1, X:7,
					 Rest/binary>>,
				       N, Acc, F1, F2, TrUserData)
    when N < 57 ->
    d_field_ProtoPartyJoinRequest_owner_id(Rest, N + 7,
					   X bsl N + Acc, F1, F2, TrUserData);
d_field_ProtoPartyJoinRequest_owner_id(<<0:1, X:7,
					 Rest/binary>>,
				       N, Acc, F1, _, TrUserData) ->
    Len = X bsl N + Acc,
    <<Bytes:Len/binary, Rest2/binary>> = Rest,
    NewFValue = binary:copy(Bytes),
    dfp_read_field_def_ProtoPartyJoinRequest(Rest2, 0, 0,
					     F1, NewFValue, TrUserData).


skip_varint_ProtoPartyJoinRequest(<<1:1, _:7,
				    Rest/binary>>,
				  Z1, Z2, F1, F2, TrUserData) ->
    skip_varint_ProtoPartyJoinRequest(Rest, Z1, Z2, F1, F2,
				      TrUserData);
skip_varint_ProtoPartyJoinRequest(<<0:1, _:7,
				    Rest/binary>>,
				  Z1, Z2, F1, F2, TrUserData) ->
    dfp_read_field_def_ProtoPartyJoinRequest(Rest, Z1, Z2,
					     F1, F2, TrUserData).


skip_length_delimited_ProtoPartyJoinRequest(<<1:1, X:7,
					      Rest/binary>>,
					    N, Acc, F1, F2, TrUserData)
    when N < 57 ->
    skip_length_delimited_ProtoPartyJoinRequest(Rest, N + 7,
						X bsl N + Acc, F1, F2,
						TrUserData);
skip_length_delimited_ProtoPartyJoinRequest(<<0:1, X:7,
					      Rest/binary>>,
					    N, Acc, F1, F2, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    dfp_read_field_def_ProtoPartyJoinRequest(Rest2, 0, 0,
					     F1, F2, TrUserData).


skip_32_ProtoPartyJoinRequest(<<_:32, Rest/binary>>, Z1,
			      Z2, F1, F2, TrUserData) ->
    dfp_read_field_def_ProtoPartyJoinRequest(Rest, Z1, Z2,
					     F1, F2, TrUserData).


skip_64_ProtoPartyJoinRequest(<<_:64, Rest/binary>>, Z1,
			      Z2, F1, F2, TrUserData) ->
    dfp_read_field_def_ProtoPartyJoinRequest(Rest, Z1, Z2,
					     F1, F2, TrUserData).


d_msg_ProtoTimeRange(Bin, TrUserData) ->
    dfp_read_field_def_ProtoTimeRange(Bin, 0, 0,
				      id(undefined, TrUserData),
				      id(undefined, TrUserData), TrUserData).

dfp_read_field_def_ProtoTimeRange(<<8, Rest/binary>>,
				  Z1, Z2, F1, F2, TrUserData) ->
    d_field_ProtoTimeRange_start_at(Rest, Z1, Z2, F1, F2,
				    TrUserData);
dfp_read_field_def_ProtoTimeRange(<<16, Rest/binary>>,
				  Z1, Z2, F1, F2, TrUserData) ->
    d_field_ProtoTimeRange_close_at(Rest, Z1, Z2, F1, F2,
				    TrUserData);
dfp_read_field_def_ProtoTimeRange(<<>>, 0, 0, F1, F2,
				  _) ->
    #'ProtoTimeRange'{start_at = F1, close_at = F2};
dfp_read_field_def_ProtoTimeRange(Other, Z1, Z2, F1, F2,
				  TrUserData) ->
    dg_read_field_def_ProtoTimeRange(Other, Z1, Z2, F1, F2,
				     TrUserData).

dg_read_field_def_ProtoTimeRange(<<1:1, X:7,
				   Rest/binary>>,
				 N, Acc, F1, F2, TrUserData)
    when N < 32 - 7 ->
    dg_read_field_def_ProtoTimeRange(Rest, N + 7,
				     X bsl N + Acc, F1, F2, TrUserData);
dg_read_field_def_ProtoTimeRange(<<0:1, X:7,
				   Rest/binary>>,
				 N, Acc, F1, F2, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
      8 ->
	  d_field_ProtoTimeRange_start_at(Rest, 0, 0, F1, F2,
					  TrUserData);
      16 ->
	  d_field_ProtoTimeRange_close_at(Rest, 0, 0, F1, F2,
					  TrUserData);
      _ ->
	  case Key band 7 of
	    0 ->
		skip_varint_ProtoTimeRange(Rest, 0, 0, F1, F2,
					   TrUserData);
	    1 ->
		skip_64_ProtoTimeRange(Rest, 0, 0, F1, F2, TrUserData);
	    2 ->
		skip_length_delimited_ProtoTimeRange(Rest, 0, 0, F1, F2,
						     TrUserData);
	    5 ->
		skip_32_ProtoTimeRange(Rest, 0, 0, F1, F2, TrUserData)
	  end
    end;
dg_read_field_def_ProtoTimeRange(<<>>, 0, 0, F1, F2,
				 _) ->
    #'ProtoTimeRange'{start_at = F1, close_at = F2}.

d_field_ProtoTimeRange_start_at(<<1:1, X:7,
				  Rest/binary>>,
				N, Acc, F1, F2, TrUserData)
    when N < 57 ->
    d_field_ProtoTimeRange_start_at(Rest, N + 7,
				    X bsl N + Acc, F1, F2, TrUserData);
d_field_ProtoTimeRange_start_at(<<0:1, X:7,
				  Rest/binary>>,
				N, Acc, _, F2, TrUserData) ->
    <<NewFValue:64/signed-native>> = <<(X bsl N +
					  Acc):64/unsigned-native>>,
    dfp_read_field_def_ProtoTimeRange(Rest, 0, 0, NewFValue,
				      F2, TrUserData).


d_field_ProtoTimeRange_close_at(<<1:1, X:7,
				  Rest/binary>>,
				N, Acc, F1, F2, TrUserData)
    when N < 57 ->
    d_field_ProtoTimeRange_close_at(Rest, N + 7,
				    X bsl N + Acc, F1, F2, TrUserData);
d_field_ProtoTimeRange_close_at(<<0:1, X:7,
				  Rest/binary>>,
				N, Acc, F1, _, TrUserData) ->
    <<NewFValue:64/signed-native>> = <<(X bsl N +
					  Acc):64/unsigned-native>>,
    dfp_read_field_def_ProtoTimeRange(Rest, 0, 0, F1,
				      NewFValue, TrUserData).


skip_varint_ProtoTimeRange(<<1:1, _:7, Rest/binary>>,
			   Z1, Z2, F1, F2, TrUserData) ->
    skip_varint_ProtoTimeRange(Rest, Z1, Z2, F1, F2,
			       TrUserData);
skip_varint_ProtoTimeRange(<<0:1, _:7, Rest/binary>>,
			   Z1, Z2, F1, F2, TrUserData) ->
    dfp_read_field_def_ProtoTimeRange(Rest, Z1, Z2, F1, F2,
				      TrUserData).


skip_length_delimited_ProtoTimeRange(<<1:1, X:7,
				       Rest/binary>>,
				     N, Acc, F1, F2, TrUserData)
    when N < 57 ->
    skip_length_delimited_ProtoTimeRange(Rest, N + 7,
					 X bsl N + Acc, F1, F2, TrUserData);
skip_length_delimited_ProtoTimeRange(<<0:1, X:7,
				       Rest/binary>>,
				     N, Acc, F1, F2, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    dfp_read_field_def_ProtoTimeRange(Rest2, 0, 0, F1, F2,
				      TrUserData).


skip_32_ProtoTimeRange(<<_:32, Rest/binary>>, Z1, Z2,
		       F1, F2, TrUserData) ->
    dfp_read_field_def_ProtoTimeRange(Rest, Z1, Z2, F1, F2,
				      TrUserData).


skip_64_ProtoTimeRange(<<_:64, Rest/binary>>, Z1, Z2,
		       F1, F2, TrUserData) ->
    dfp_read_field_def_ProtoTimeRange(Rest, Z1, Z2, F1, F2,
				      TrUserData).


d_msg_ProtoPartyNotify(Bin, TrUserData) ->
    dfp_read_field_def_ProtoPartyNotify(Bin, 0, 0,
					id(undefined, TrUserData),
					id([], TrUserData),
					id(undefined, TrUserData),
					id(undefined, TrUserData),
					id(undefined, TrUserData),
					id(undefined, TrUserData), TrUserData).

dfp_read_field_def_ProtoPartyNotify(<<10, Rest/binary>>,
				    Z1, Z2, F1, F2, F3, F4, F5, F6,
				    TrUserData) ->
    d_field_ProtoPartyNotify_session(Rest, Z1, Z2, F1, F2,
				     F3, F4, F5, F6, TrUserData);
dfp_read_field_def_ProtoPartyNotify(<<18, Rest/binary>>,
				    Z1, Z2, F1, F2, F3, F4, F5, F6,
				    TrUserData) ->
    d_field_ProtoPartyNotify_time_range(Rest, Z1, Z2, F1,
					F2, F3, F4, F5, F6, TrUserData);
dfp_read_field_def_ProtoPartyNotify(<<24, Rest/binary>>,
				    Z1, Z2, F1, F2, F3, F4, F5, F6,
				    TrUserData) ->
    d_field_ProtoPartyNotify_talent_id(Rest, Z1, Z2, F1, F2,
				       F3, F4, F5, F6, TrUserData);
dfp_read_field_def_ProtoPartyNotify(<<32, Rest/binary>>,
				    Z1, Z2, F1, F2, F3, F4, F5, F6,
				    TrUserData) ->
    d_field_ProtoPartyNotify_talent_end_at(Rest, Z1, Z2, F1,
					   F2, F3, F4, F5, F6, TrUserData);
dfp_read_field_def_ProtoPartyNotify(<<40, Rest/binary>>,
				    Z1, Z2, F1, F2, F3, F4, F5, F6,
				    TrUserData) ->
    d_field_ProtoPartyNotify_remained_create_times(Rest, Z1,
						   Z2, F1, F2, F3, F4, F5, F6,
						   TrUserData);
dfp_read_field_def_ProtoPartyNotify(<<48, Rest/binary>>,
				    Z1, Z2, F1, F2, F3, F4, F5, F6,
				    TrUserData) ->
    d_field_ProtoPartyNotify_remained_join_times(Rest, Z1,
						 Z2, F1, F2, F3, F4, F5, F6,
						 TrUserData);
dfp_read_field_def_ProtoPartyNotify(<<>>, 0, 0, F1, F2,
				    F3, F4, F5, F6, TrUserData) ->
    #'ProtoPartyNotify'{session = F1,
			time_range = lists_reverse(F2, TrUserData),
			talent_id = F3, talent_end_at = F4,
			remained_create_times = F5, remained_join_times = F6};
dfp_read_field_def_ProtoPartyNotify(Other, Z1, Z2, F1,
				    F2, F3, F4, F5, F6, TrUserData) ->
    dg_read_field_def_ProtoPartyNotify(Other, Z1, Z2, F1,
				       F2, F3, F4, F5, F6, TrUserData).

dg_read_field_def_ProtoPartyNotify(<<1:1, X:7,
				     Rest/binary>>,
				   N, Acc, F1, F2, F3, F4, F5, F6, TrUserData)
    when N < 32 - 7 ->
    dg_read_field_def_ProtoPartyNotify(Rest, N + 7,
				       X bsl N + Acc, F1, F2, F3, F4, F5, F6,
				       TrUserData);
dg_read_field_def_ProtoPartyNotify(<<0:1, X:7,
				     Rest/binary>>,
				   N, Acc, F1, F2, F3, F4, F5, F6,
				   TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
      10 ->
	  d_field_ProtoPartyNotify_session(Rest, 0, 0, F1, F2, F3,
					   F4, F5, F6, TrUserData);
      18 ->
	  d_field_ProtoPartyNotify_time_range(Rest, 0, 0, F1, F2,
					      F3, F4, F5, F6, TrUserData);
      24 ->
	  d_field_ProtoPartyNotify_talent_id(Rest, 0, 0, F1, F2,
					     F3, F4, F5, F6, TrUserData);
      32 ->
	  d_field_ProtoPartyNotify_talent_end_at(Rest, 0, 0, F1,
						 F2, F3, F4, F5, F6,
						 TrUserData);
      40 ->
	  d_field_ProtoPartyNotify_remained_create_times(Rest, 0,
							 0, F1, F2, F3, F4, F5,
							 F6, TrUserData);
      48 ->
	  d_field_ProtoPartyNotify_remained_join_times(Rest, 0, 0,
						       F1, F2, F3, F4, F5, F6,
						       TrUserData);
      _ ->
	  case Key band 7 of
	    0 ->
		skip_varint_ProtoPartyNotify(Rest, 0, 0, F1, F2, F3, F4,
					     F5, F6, TrUserData);
	    1 ->
		skip_64_ProtoPartyNotify(Rest, 0, 0, F1, F2, F3, F4, F5,
					 F6, TrUserData);
	    2 ->
		skip_length_delimited_ProtoPartyNotify(Rest, 0, 0, F1,
						       F2, F3, F4, F5, F6,
						       TrUserData);
	    5 ->
		skip_32_ProtoPartyNotify(Rest, 0, 0, F1, F2, F3, F4, F5,
					 F6, TrUserData)
	  end
    end;
dg_read_field_def_ProtoPartyNotify(<<>>, 0, 0, F1, F2,
				   F3, F4, F5, F6, TrUserData) ->
    #'ProtoPartyNotify'{session = F1,
			time_range = lists_reverse(F2, TrUserData),
			talent_id = F3, talent_end_at = F4,
			remained_create_times = F5, remained_join_times = F6}.

d_field_ProtoPartyNotify_session(<<1:1, X:7,
				   Rest/binary>>,
				 N, Acc, F1, F2, F3, F4, F5, F6, TrUserData)
    when N < 57 ->
    d_field_ProtoPartyNotify_session(Rest, N + 7,
				     X bsl N + Acc, F1, F2, F3, F4, F5, F6,
				     TrUserData);
d_field_ProtoPartyNotify_session(<<0:1, X:7,
				   Rest/binary>>,
				 N, Acc, _, F2, F3, F4, F5, F6, TrUserData) ->
    Len = X bsl N + Acc,
    <<Bytes:Len/binary, Rest2/binary>> = Rest,
    NewFValue = binary:copy(Bytes),
    dfp_read_field_def_ProtoPartyNotify(Rest2, 0, 0,
					NewFValue, F2, F3, F4, F5, F6,
					TrUserData).


d_field_ProtoPartyNotify_time_range(<<1:1, X:7,
				      Rest/binary>>,
				    N, Acc, F1, F2, F3, F4, F5, F6, TrUserData)
    when N < 57 ->
    d_field_ProtoPartyNotify_time_range(Rest, N + 7,
					X bsl N + Acc, F1, F2, F3, F4, F5, F6,
					TrUserData);
d_field_ProtoPartyNotify_time_range(<<0:1, X:7,
				      Rest/binary>>,
				    N, Acc, F1, F2, F3, F4, F5, F6,
				    TrUserData) ->
    Len = X bsl N + Acc,
    <<Bs:Len/binary, Rest2/binary>> = Rest,
    NewFValue = id(d_msg_ProtoTimeRange(Bs, TrUserData),
		   TrUserData),
    dfp_read_field_def_ProtoPartyNotify(Rest2, 0, 0, F1,
					cons(NewFValue, F2, TrUserData), F3, F4,
					F5, F6, TrUserData).


d_field_ProtoPartyNotify_talent_id(<<1:1, X:7,
				     Rest/binary>>,
				   N, Acc, F1, F2, F3, F4, F5, F6, TrUserData)
    when N < 57 ->
    d_field_ProtoPartyNotify_talent_id(Rest, N + 7,
				       X bsl N + Acc, F1, F2, F3, F4, F5, F6,
				       TrUserData);
d_field_ProtoPartyNotify_talent_id(<<0:1, X:7,
				     Rest/binary>>,
				   N, Acc, F1, F2, _, F4, F5, F6, TrUserData) ->
    <<NewFValue:32/signed-native>> = <<(X bsl N +
					  Acc):32/unsigned-native>>,
    dfp_read_field_def_ProtoPartyNotify(Rest, 0, 0, F1, F2,
					NewFValue, F4, F5, F6, TrUserData).


d_field_ProtoPartyNotify_talent_end_at(<<1:1, X:7,
					 Rest/binary>>,
				       N, Acc, F1, F2, F3, F4, F5, F6,
				       TrUserData)
    when N < 57 ->
    d_field_ProtoPartyNotify_talent_end_at(Rest, N + 7,
					   X bsl N + Acc, F1, F2, F3, F4, F5,
					   F6, TrUserData);
d_field_ProtoPartyNotify_talent_end_at(<<0:1, X:7,
					 Rest/binary>>,
				       N, Acc, F1, F2, F3, _, F5, F6,
				       TrUserData) ->
    <<NewFValue:64/signed-native>> = <<(X bsl N +
					  Acc):64/unsigned-native>>,
    dfp_read_field_def_ProtoPartyNotify(Rest, 0, 0, F1, F2,
					F3, NewFValue, F5, F6, TrUserData).


d_field_ProtoPartyNotify_remained_create_times(<<1:1,
						 X:7, Rest/binary>>,
					       N, Acc, F1, F2, F3, F4, F5, F6,
					       TrUserData)
    when N < 57 ->
    d_field_ProtoPartyNotify_remained_create_times(Rest,
						   N + 7, X bsl N + Acc, F1, F2,
						   F3, F4, F5, F6, TrUserData);
d_field_ProtoPartyNotify_remained_create_times(<<0:1,
						 X:7, Rest/binary>>,
					       N, Acc, F1, F2, F3, F4, _, F6,
					       TrUserData) ->
    <<NewFValue:32/signed-native>> = <<(X bsl N +
					  Acc):32/unsigned-native>>,
    dfp_read_field_def_ProtoPartyNotify(Rest, 0, 0, F1, F2,
					F3, F4, NewFValue, F6, TrUserData).


d_field_ProtoPartyNotify_remained_join_times(<<1:1, X:7,
					       Rest/binary>>,
					     N, Acc, F1, F2, F3, F4, F5, F6,
					     TrUserData)
    when N < 57 ->
    d_field_ProtoPartyNotify_remained_join_times(Rest,
						 N + 7, X bsl N + Acc, F1, F2,
						 F3, F4, F5, F6, TrUserData);
d_field_ProtoPartyNotify_remained_join_times(<<0:1, X:7,
					       Rest/binary>>,
					     N, Acc, F1, F2, F3, F4, F5, _,
					     TrUserData) ->
    <<NewFValue:32/signed-native>> = <<(X bsl N +
					  Acc):32/unsigned-native>>,
    dfp_read_field_def_ProtoPartyNotify(Rest, 0, 0, F1, F2,
					F3, F4, F5, NewFValue, TrUserData).


skip_varint_ProtoPartyNotify(<<1:1, _:7, Rest/binary>>,
			     Z1, Z2, F1, F2, F3, F4, F5, F6, TrUserData) ->
    skip_varint_ProtoPartyNotify(Rest, Z1, Z2, F1, F2, F3,
				 F4, F5, F6, TrUserData);
skip_varint_ProtoPartyNotify(<<0:1, _:7, Rest/binary>>,
			     Z1, Z2, F1, F2, F3, F4, F5, F6, TrUserData) ->
    dfp_read_field_def_ProtoPartyNotify(Rest, Z1, Z2, F1,
					F2, F3, F4, F5, F6, TrUserData).


skip_length_delimited_ProtoPartyNotify(<<1:1, X:7,
					 Rest/binary>>,
				       N, Acc, F1, F2, F3, F4, F5, F6,
				       TrUserData)
    when N < 57 ->
    skip_length_delimited_ProtoPartyNotify(Rest, N + 7,
					   X bsl N + Acc, F1, F2, F3, F4, F5,
					   F6, TrUserData);
skip_length_delimited_ProtoPartyNotify(<<0:1, X:7,
					 Rest/binary>>,
				       N, Acc, F1, F2, F3, F4, F5, F6,
				       TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    dfp_read_field_def_ProtoPartyNotify(Rest2, 0, 0, F1, F2,
					F3, F4, F5, F6, TrUserData).


skip_32_ProtoPartyNotify(<<_:32, Rest/binary>>, Z1, Z2,
			 F1, F2, F3, F4, F5, F6, TrUserData) ->
    dfp_read_field_def_ProtoPartyNotify(Rest, Z1, Z2, F1,
					F2, F3, F4, F5, F6, TrUserData).


skip_64_ProtoPartyNotify(<<_:64, Rest/binary>>, Z1, Z2,
			 F1, F2, F3, F4, F5, F6, TrUserData) ->
    dfp_read_field_def_ProtoPartyNotify(Rest, Z1, Z2, F1,
					F2, F3, F4, F5, F6, TrUserData).


d_msg_ProtoPartyChatResponse(Bin, TrUserData) ->
    dfp_read_field_def_ProtoPartyChatResponse(Bin, 0, 0,
					      id(undefined, TrUserData),
					      id(undefined, TrUserData),
					      TrUserData).

dfp_read_field_def_ProtoPartyChatResponse(<<8,
					    Rest/binary>>,
					  Z1, Z2, F1, F2, TrUserData) ->
    d_field_ProtoPartyChatResponse_ret(Rest, Z1, Z2, F1, F2,
				       TrUserData);
dfp_read_field_def_ProtoPartyChatResponse(<<18,
					    Rest/binary>>,
					  Z1, Z2, F1, F2, TrUserData) ->
    d_field_ProtoPartyChatResponse_session(Rest, Z1, Z2, F1,
					   F2, TrUserData);
dfp_read_field_def_ProtoPartyChatResponse(<<>>, 0, 0,
					  F1, F2, _) ->
    #'ProtoPartyChatResponse'{ret = F1, session = F2};
dfp_read_field_def_ProtoPartyChatResponse(Other, Z1, Z2,
					  F1, F2, TrUserData) ->
    dg_read_field_def_ProtoPartyChatResponse(Other, Z1, Z2,
					     F1, F2, TrUserData).

dg_read_field_def_ProtoPartyChatResponse(<<1:1, X:7,
					   Rest/binary>>,
					 N, Acc, F1, F2, TrUserData)
    when N < 32 - 7 ->
    dg_read_field_def_ProtoPartyChatResponse(Rest, N + 7,
					     X bsl N + Acc, F1, F2, TrUserData);
dg_read_field_def_ProtoPartyChatResponse(<<0:1, X:7,
					   Rest/binary>>,
					 N, Acc, F1, F2, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
      8 ->
	  d_field_ProtoPartyChatResponse_ret(Rest, 0, 0, F1, F2,
					     TrUserData);
      18 ->
	  d_field_ProtoPartyChatResponse_session(Rest, 0, 0, F1,
						 F2, TrUserData);
      _ ->
	  case Key band 7 of
	    0 ->
		skip_varint_ProtoPartyChatResponse(Rest, 0, 0, F1, F2,
						   TrUserData);
	    1 ->
		skip_64_ProtoPartyChatResponse(Rest, 0, 0, F1, F2,
					       TrUserData);
	    2 ->
		skip_length_delimited_ProtoPartyChatResponse(Rest, 0, 0,
							     F1, F2,
							     TrUserData);
	    5 ->
		skip_32_ProtoPartyChatResponse(Rest, 0, 0, F1, F2,
					       TrUserData)
	  end
    end;
dg_read_field_def_ProtoPartyChatResponse(<<>>, 0, 0, F1,
					 F2, _) ->
    #'ProtoPartyChatResponse'{ret = F1, session = F2}.

d_field_ProtoPartyChatResponse_ret(<<1:1, X:7,
				     Rest/binary>>,
				   N, Acc, F1, F2, TrUserData)
    when N < 57 ->
    d_field_ProtoPartyChatResponse_ret(Rest, N + 7,
				       X bsl N + Acc, F1, F2, TrUserData);
d_field_ProtoPartyChatResponse_ret(<<0:1, X:7,
				     Rest/binary>>,
				   N, Acc, _, F2, TrUserData) ->
    <<NewFValue:32/signed-native>> = <<(X bsl N +
					  Acc):32/unsigned-native>>,
    dfp_read_field_def_ProtoPartyChatResponse(Rest, 0, 0,
					      NewFValue, F2, TrUserData).


d_field_ProtoPartyChatResponse_session(<<1:1, X:7,
					 Rest/binary>>,
				       N, Acc, F1, F2, TrUserData)
    when N < 57 ->
    d_field_ProtoPartyChatResponse_session(Rest, N + 7,
					   X bsl N + Acc, F1, F2, TrUserData);
d_field_ProtoPartyChatResponse_session(<<0:1, X:7,
					 Rest/binary>>,
				       N, Acc, F1, _, TrUserData) ->
    Len = X bsl N + Acc,
    <<Bytes:Len/binary, Rest2/binary>> = Rest,
    NewFValue = binary:copy(Bytes),
    dfp_read_field_def_ProtoPartyChatResponse(Rest2, 0, 0,
					      F1, NewFValue, TrUserData).


skip_varint_ProtoPartyChatResponse(<<1:1, _:7,
				     Rest/binary>>,
				   Z1, Z2, F1, F2, TrUserData) ->
    skip_varint_ProtoPartyChatResponse(Rest, Z1, Z2, F1, F2,
				       TrUserData);
skip_varint_ProtoPartyChatResponse(<<0:1, _:7,
				     Rest/binary>>,
				   Z1, Z2, F1, F2, TrUserData) ->
    dfp_read_field_def_ProtoPartyChatResponse(Rest, Z1, Z2,
					      F1, F2, TrUserData).


skip_length_delimited_ProtoPartyChatResponse(<<1:1, X:7,
					       Rest/binary>>,
					     N, Acc, F1, F2, TrUserData)
    when N < 57 ->
    skip_length_delimited_ProtoPartyChatResponse(Rest,
						 N + 7, X bsl N + Acc, F1, F2,
						 TrUserData);
skip_length_delimited_ProtoPartyChatResponse(<<0:1, X:7,
					       Rest/binary>>,
					     N, Acc, F1, F2, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    dfp_read_field_def_ProtoPartyChatResponse(Rest2, 0, 0,
					      F1, F2, TrUserData).


skip_32_ProtoPartyChatResponse(<<_:32, Rest/binary>>,
			       Z1, Z2, F1, F2, TrUserData) ->
    dfp_read_field_def_ProtoPartyChatResponse(Rest, Z1, Z2,
					      F1, F2, TrUserData).


skip_64_ProtoPartyChatResponse(<<_:64, Rest/binary>>,
			       Z1, Z2, F1, F2, TrUserData) ->
    dfp_read_field_def_ProtoPartyChatResponse(Rest, Z1, Z2,
					      F1, F2, TrUserData).


d_msg_ProtoPartyKickResponse(Bin, TrUserData) ->
    dfp_read_field_def_ProtoPartyKickResponse(Bin, 0, 0,
					      id(undefined, TrUserData),
					      id(undefined, TrUserData),
					      TrUserData).

dfp_read_field_def_ProtoPartyKickResponse(<<8,
					    Rest/binary>>,
					  Z1, Z2, F1, F2, TrUserData) ->
    d_field_ProtoPartyKickResponse_ret(Rest, Z1, Z2, F1, F2,
				       TrUserData);
dfp_read_field_def_ProtoPartyKickResponse(<<18,
					    Rest/binary>>,
					  Z1, Z2, F1, F2, TrUserData) ->
    d_field_ProtoPartyKickResponse_session(Rest, Z1, Z2, F1,
					   F2, TrUserData);
dfp_read_field_def_ProtoPartyKickResponse(<<>>, 0, 0,
					  F1, F2, _) ->
    #'ProtoPartyKickResponse'{ret = F1, session = F2};
dfp_read_field_def_ProtoPartyKickResponse(Other, Z1, Z2,
					  F1, F2, TrUserData) ->
    dg_read_field_def_ProtoPartyKickResponse(Other, Z1, Z2,
					     F1, F2, TrUserData).

dg_read_field_def_ProtoPartyKickResponse(<<1:1, X:7,
					   Rest/binary>>,
					 N, Acc, F1, F2, TrUserData)
    when N < 32 - 7 ->
    dg_read_field_def_ProtoPartyKickResponse(Rest, N + 7,
					     X bsl N + Acc, F1, F2, TrUserData);
dg_read_field_def_ProtoPartyKickResponse(<<0:1, X:7,
					   Rest/binary>>,
					 N, Acc, F1, F2, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
      8 ->
	  d_field_ProtoPartyKickResponse_ret(Rest, 0, 0, F1, F2,
					     TrUserData);
      18 ->
	  d_field_ProtoPartyKickResponse_session(Rest, 0, 0, F1,
						 F2, TrUserData);
      _ ->
	  case Key band 7 of
	    0 ->
		skip_varint_ProtoPartyKickResponse(Rest, 0, 0, F1, F2,
						   TrUserData);
	    1 ->
		skip_64_ProtoPartyKickResponse(Rest, 0, 0, F1, F2,
					       TrUserData);
	    2 ->
		skip_length_delimited_ProtoPartyKickResponse(Rest, 0, 0,
							     F1, F2,
							     TrUserData);
	    5 ->
		skip_32_ProtoPartyKickResponse(Rest, 0, 0, F1, F2,
					       TrUserData)
	  end
    end;
dg_read_field_def_ProtoPartyKickResponse(<<>>, 0, 0, F1,
					 F2, _) ->
    #'ProtoPartyKickResponse'{ret = F1, session = F2}.

d_field_ProtoPartyKickResponse_ret(<<1:1, X:7,
				     Rest/binary>>,
				   N, Acc, F1, F2, TrUserData)
    when N < 57 ->
    d_field_ProtoPartyKickResponse_ret(Rest, N + 7,
				       X bsl N + Acc, F1, F2, TrUserData);
d_field_ProtoPartyKickResponse_ret(<<0:1, X:7,
				     Rest/binary>>,
				   N, Acc, _, F2, TrUserData) ->
    <<NewFValue:32/signed-native>> = <<(X bsl N +
					  Acc):32/unsigned-native>>,
    dfp_read_field_def_ProtoPartyKickResponse(Rest, 0, 0,
					      NewFValue, F2, TrUserData).


d_field_ProtoPartyKickResponse_session(<<1:1, X:7,
					 Rest/binary>>,
				       N, Acc, F1, F2, TrUserData)
    when N < 57 ->
    d_field_ProtoPartyKickResponse_session(Rest, N + 7,
					   X bsl N + Acc, F1, F2, TrUserData);
d_field_ProtoPartyKickResponse_session(<<0:1, X:7,
					 Rest/binary>>,
				       N, Acc, F1, _, TrUserData) ->
    Len = X bsl N + Acc,
    <<Bytes:Len/binary, Rest2/binary>> = Rest,
    NewFValue = binary:copy(Bytes),
    dfp_read_field_def_ProtoPartyKickResponse(Rest2, 0, 0,
					      F1, NewFValue, TrUserData).


skip_varint_ProtoPartyKickResponse(<<1:1, _:7,
				     Rest/binary>>,
				   Z1, Z2, F1, F2, TrUserData) ->
    skip_varint_ProtoPartyKickResponse(Rest, Z1, Z2, F1, F2,
				       TrUserData);
skip_varint_ProtoPartyKickResponse(<<0:1, _:7,
				     Rest/binary>>,
				   Z1, Z2, F1, F2, TrUserData) ->
    dfp_read_field_def_ProtoPartyKickResponse(Rest, Z1, Z2,
					      F1, F2, TrUserData).


skip_length_delimited_ProtoPartyKickResponse(<<1:1, X:7,
					       Rest/binary>>,
					     N, Acc, F1, F2, TrUserData)
    when N < 57 ->
    skip_length_delimited_ProtoPartyKickResponse(Rest,
						 N + 7, X bsl N + Acc, F1, F2,
						 TrUserData);
skip_length_delimited_ProtoPartyKickResponse(<<0:1, X:7,
					       Rest/binary>>,
					     N, Acc, F1, F2, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    dfp_read_field_def_ProtoPartyKickResponse(Rest2, 0, 0,
					      F1, F2, TrUserData).


skip_32_ProtoPartyKickResponse(<<_:32, Rest/binary>>,
			       Z1, Z2, F1, F2, TrUserData) ->
    dfp_read_field_def_ProtoPartyKickResponse(Rest, Z1, Z2,
					      F1, F2, TrUserData).


skip_64_ProtoPartyKickResponse(<<_:64, Rest/binary>>,
			       Z1, Z2, F1, F2, TrUserData) ->
    dfp_read_field_def_ProtoPartyKickResponse(Rest, Z1, Z2,
					      F1, F2, TrUserData).


d_msg_ProtoPartyQuitResponse(Bin, TrUserData) ->
    dfp_read_field_def_ProtoPartyQuitResponse(Bin, 0, 0,
					      id(undefined, TrUserData),
					      id(undefined, TrUserData),
					      TrUserData).

dfp_read_field_def_ProtoPartyQuitResponse(<<8,
					    Rest/binary>>,
					  Z1, Z2, F1, F2, TrUserData) ->
    d_field_ProtoPartyQuitResponse_ret(Rest, Z1, Z2, F1, F2,
				       TrUserData);
dfp_read_field_def_ProtoPartyQuitResponse(<<18,
					    Rest/binary>>,
					  Z1, Z2, F1, F2, TrUserData) ->
    d_field_ProtoPartyQuitResponse_session(Rest, Z1, Z2, F1,
					   F2, TrUserData);
dfp_read_field_def_ProtoPartyQuitResponse(<<>>, 0, 0,
					  F1, F2, _) ->
    #'ProtoPartyQuitResponse'{ret = F1, session = F2};
dfp_read_field_def_ProtoPartyQuitResponse(Other, Z1, Z2,
					  F1, F2, TrUserData) ->
    dg_read_field_def_ProtoPartyQuitResponse(Other, Z1, Z2,
					     F1, F2, TrUserData).

dg_read_field_def_ProtoPartyQuitResponse(<<1:1, X:7,
					   Rest/binary>>,
					 N, Acc, F1, F2, TrUserData)
    when N < 32 - 7 ->
    dg_read_field_def_ProtoPartyQuitResponse(Rest, N + 7,
					     X bsl N + Acc, F1, F2, TrUserData);
dg_read_field_def_ProtoPartyQuitResponse(<<0:1, X:7,
					   Rest/binary>>,
					 N, Acc, F1, F2, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
      8 ->
	  d_field_ProtoPartyQuitResponse_ret(Rest, 0, 0, F1, F2,
					     TrUserData);
      18 ->
	  d_field_ProtoPartyQuitResponse_session(Rest, 0, 0, F1,
						 F2, TrUserData);
      _ ->
	  case Key band 7 of
	    0 ->
		skip_varint_ProtoPartyQuitResponse(Rest, 0, 0, F1, F2,
						   TrUserData);
	    1 ->
		skip_64_ProtoPartyQuitResponse(Rest, 0, 0, F1, F2,
					       TrUserData);
	    2 ->
		skip_length_delimited_ProtoPartyQuitResponse(Rest, 0, 0,
							     F1, F2,
							     TrUserData);
	    5 ->
		skip_32_ProtoPartyQuitResponse(Rest, 0, 0, F1, F2,
					       TrUserData)
	  end
    end;
dg_read_field_def_ProtoPartyQuitResponse(<<>>, 0, 0, F1,
					 F2, _) ->
    #'ProtoPartyQuitResponse'{ret = F1, session = F2}.

d_field_ProtoPartyQuitResponse_ret(<<1:1, X:7,
				     Rest/binary>>,
				   N, Acc, F1, F2, TrUserData)
    when N < 57 ->
    d_field_ProtoPartyQuitResponse_ret(Rest, N + 7,
				       X bsl N + Acc, F1, F2, TrUserData);
d_field_ProtoPartyQuitResponse_ret(<<0:1, X:7,
				     Rest/binary>>,
				   N, Acc, _, F2, TrUserData) ->
    <<NewFValue:32/signed-native>> = <<(X bsl N +
					  Acc):32/unsigned-native>>,
    dfp_read_field_def_ProtoPartyQuitResponse(Rest, 0, 0,
					      NewFValue, F2, TrUserData).


d_field_ProtoPartyQuitResponse_session(<<1:1, X:7,
					 Rest/binary>>,
				       N, Acc, F1, F2, TrUserData)
    when N < 57 ->
    d_field_ProtoPartyQuitResponse_session(Rest, N + 7,
					   X bsl N + Acc, F1, F2, TrUserData);
d_field_ProtoPartyQuitResponse_session(<<0:1, X:7,
					 Rest/binary>>,
				       N, Acc, F1, _, TrUserData) ->
    Len = X bsl N + Acc,
    <<Bytes:Len/binary, Rest2/binary>> = Rest,
    NewFValue = binary:copy(Bytes),
    dfp_read_field_def_ProtoPartyQuitResponse(Rest2, 0, 0,
					      F1, NewFValue, TrUserData).


skip_varint_ProtoPartyQuitResponse(<<1:1, _:7,
				     Rest/binary>>,
				   Z1, Z2, F1, F2, TrUserData) ->
    skip_varint_ProtoPartyQuitResponse(Rest, Z1, Z2, F1, F2,
				       TrUserData);
skip_varint_ProtoPartyQuitResponse(<<0:1, _:7,
				     Rest/binary>>,
				   Z1, Z2, F1, F2, TrUserData) ->
    dfp_read_field_def_ProtoPartyQuitResponse(Rest, Z1, Z2,
					      F1, F2, TrUserData).


skip_length_delimited_ProtoPartyQuitResponse(<<1:1, X:7,
					       Rest/binary>>,
					     N, Acc, F1, F2, TrUserData)
    when N < 57 ->
    skip_length_delimited_ProtoPartyQuitResponse(Rest,
						 N + 7, X bsl N + Acc, F1, F2,
						 TrUserData);
skip_length_delimited_ProtoPartyQuitResponse(<<0:1, X:7,
					       Rest/binary>>,
					     N, Acc, F1, F2, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    dfp_read_field_def_ProtoPartyQuitResponse(Rest2, 0, 0,
					      F1, F2, TrUserData).


skip_32_ProtoPartyQuitResponse(<<_:32, Rest/binary>>,
			       Z1, Z2, F1, F2, TrUserData) ->
    dfp_read_field_def_ProtoPartyQuitResponse(Rest, Z1, Z2,
					      F1, F2, TrUserData).


skip_64_ProtoPartyQuitResponse(<<_:64, Rest/binary>>,
			       Z1, Z2, F1, F2, TrUserData) ->
    dfp_read_field_def_ProtoPartyQuitResponse(Rest, Z1, Z2,
					      F1, F2, TrUserData).


d_msg_ProtoPartyJoinResponse(Bin, TrUserData) ->
    dfp_read_field_def_ProtoPartyJoinResponse(Bin, 0, 0,
					      id(undefined, TrUserData),
					      id(undefined, TrUserData),
					      TrUserData).

dfp_read_field_def_ProtoPartyJoinResponse(<<8,
					    Rest/binary>>,
					  Z1, Z2, F1, F2, TrUserData) ->
    d_field_ProtoPartyJoinResponse_ret(Rest, Z1, Z2, F1, F2,
				       TrUserData);
dfp_read_field_def_ProtoPartyJoinResponse(<<18,
					    Rest/binary>>,
					  Z1, Z2, F1, F2, TrUserData) ->
    d_field_ProtoPartyJoinResponse_session(Rest, Z1, Z2, F1,
					   F2, TrUserData);
dfp_read_field_def_ProtoPartyJoinResponse(<<>>, 0, 0,
					  F1, F2, _) ->
    #'ProtoPartyJoinResponse'{ret = F1, session = F2};
dfp_read_field_def_ProtoPartyJoinResponse(Other, Z1, Z2,
					  F1, F2, TrUserData) ->
    dg_read_field_def_ProtoPartyJoinResponse(Other, Z1, Z2,
					     F1, F2, TrUserData).

dg_read_field_def_ProtoPartyJoinResponse(<<1:1, X:7,
					   Rest/binary>>,
					 N, Acc, F1, F2, TrUserData)
    when N < 32 - 7 ->
    dg_read_field_def_ProtoPartyJoinResponse(Rest, N + 7,
					     X bsl N + Acc, F1, F2, TrUserData);
dg_read_field_def_ProtoPartyJoinResponse(<<0:1, X:7,
					   Rest/binary>>,
					 N, Acc, F1, F2, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
      8 ->
	  d_field_ProtoPartyJoinResponse_ret(Rest, 0, 0, F1, F2,
					     TrUserData);
      18 ->
	  d_field_ProtoPartyJoinResponse_session(Rest, 0, 0, F1,
						 F2, TrUserData);
      _ ->
	  case Key band 7 of
	    0 ->
		skip_varint_ProtoPartyJoinResponse(Rest, 0, 0, F1, F2,
						   TrUserData);
	    1 ->
		skip_64_ProtoPartyJoinResponse(Rest, 0, 0, F1, F2,
					       TrUserData);
	    2 ->
		skip_length_delimited_ProtoPartyJoinResponse(Rest, 0, 0,
							     F1, F2,
							     TrUserData);
	    5 ->
		skip_32_ProtoPartyJoinResponse(Rest, 0, 0, F1, F2,
					       TrUserData)
	  end
    end;
dg_read_field_def_ProtoPartyJoinResponse(<<>>, 0, 0, F1,
					 F2, _) ->
    #'ProtoPartyJoinResponse'{ret = F1, session = F2}.

d_field_ProtoPartyJoinResponse_ret(<<1:1, X:7,
				     Rest/binary>>,
				   N, Acc, F1, F2, TrUserData)
    when N < 57 ->
    d_field_ProtoPartyJoinResponse_ret(Rest, N + 7,
				       X bsl N + Acc, F1, F2, TrUserData);
d_field_ProtoPartyJoinResponse_ret(<<0:1, X:7,
				     Rest/binary>>,
				   N, Acc, _, F2, TrUserData) ->
    <<NewFValue:32/signed-native>> = <<(X bsl N +
					  Acc):32/unsigned-native>>,
    dfp_read_field_def_ProtoPartyJoinResponse(Rest, 0, 0,
					      NewFValue, F2, TrUserData).


d_field_ProtoPartyJoinResponse_session(<<1:1, X:7,
					 Rest/binary>>,
				       N, Acc, F1, F2, TrUserData)
    when N < 57 ->
    d_field_ProtoPartyJoinResponse_session(Rest, N + 7,
					   X bsl N + Acc, F1, F2, TrUserData);
d_field_ProtoPartyJoinResponse_session(<<0:1, X:7,
					 Rest/binary>>,
				       N, Acc, F1, _, TrUserData) ->
    Len = X bsl N + Acc,
    <<Bytes:Len/binary, Rest2/binary>> = Rest,
    NewFValue = binary:copy(Bytes),
    dfp_read_field_def_ProtoPartyJoinResponse(Rest2, 0, 0,
					      F1, NewFValue, TrUserData).


skip_varint_ProtoPartyJoinResponse(<<1:1, _:7,
				     Rest/binary>>,
				   Z1, Z2, F1, F2, TrUserData) ->
    skip_varint_ProtoPartyJoinResponse(Rest, Z1, Z2, F1, F2,
				       TrUserData);
skip_varint_ProtoPartyJoinResponse(<<0:1, _:7,
				     Rest/binary>>,
				   Z1, Z2, F1, F2, TrUserData) ->
    dfp_read_field_def_ProtoPartyJoinResponse(Rest, Z1, Z2,
					      F1, F2, TrUserData).


skip_length_delimited_ProtoPartyJoinResponse(<<1:1, X:7,
					       Rest/binary>>,
					     N, Acc, F1, F2, TrUserData)
    when N < 57 ->
    skip_length_delimited_ProtoPartyJoinResponse(Rest,
						 N + 7, X bsl N + Acc, F1, F2,
						 TrUserData);
skip_length_delimited_ProtoPartyJoinResponse(<<0:1, X:7,
					       Rest/binary>>,
					     N, Acc, F1, F2, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    dfp_read_field_def_ProtoPartyJoinResponse(Rest2, 0, 0,
					      F1, F2, TrUserData).


skip_32_ProtoPartyJoinResponse(<<_:32, Rest/binary>>,
			       Z1, Z2, F1, F2, TrUserData) ->
    dfp_read_field_def_ProtoPartyJoinResponse(Rest, Z1, Z2,
					      F1, F2, TrUserData).


skip_64_ProtoPartyJoinResponse(<<_:64, Rest/binary>>,
			       Z1, Z2, F1, F2, TrUserData) ->
    dfp_read_field_def_ProtoPartyJoinResponse(Rest, Z1, Z2,
					      F1, F2, TrUserData).


d_msg_ProtoPartyRoomResponse(Bin, TrUserData) ->
    dfp_read_field_def_ProtoPartyRoomResponse(Bin, 0, 0,
					      id(undefined, TrUserData),
					      id(undefined, TrUserData),
					      id([], TrUserData), TrUserData).

dfp_read_field_def_ProtoPartyRoomResponse(<<8,
					    Rest/binary>>,
					  Z1, Z2, F1, F2, F3, TrUserData) ->
    d_field_ProtoPartyRoomResponse_ret(Rest, Z1, Z2, F1, F2,
				       F3, TrUserData);
dfp_read_field_def_ProtoPartyRoomResponse(<<18,
					    Rest/binary>>,
					  Z1, Z2, F1, F2, F3, TrUserData) ->
    d_field_ProtoPartyRoomResponse_session(Rest, Z1, Z2, F1,
					   F2, F3, TrUserData);
dfp_read_field_def_ProtoPartyRoomResponse(<<26,
					    Rest/binary>>,
					  Z1, Z2, F1, F2, F3, TrUserData) ->
    d_field_ProtoPartyRoomResponse_rooms(Rest, Z1, Z2, F1,
					 F2, F3, TrUserData);
dfp_read_field_def_ProtoPartyRoomResponse(<<>>, 0, 0,
					  F1, F2, F3, TrUserData) ->
    #'ProtoPartyRoomResponse'{ret = F1, session = F2,
			      rooms = lists_reverse(F3, TrUserData)};
dfp_read_field_def_ProtoPartyRoomResponse(Other, Z1, Z2,
					  F1, F2, F3, TrUserData) ->
    dg_read_field_def_ProtoPartyRoomResponse(Other, Z1, Z2,
					     F1, F2, F3, TrUserData).

dg_read_field_def_ProtoPartyRoomResponse(<<1:1, X:7,
					   Rest/binary>>,
					 N, Acc, F1, F2, F3, TrUserData)
    when N < 32 - 7 ->
    dg_read_field_def_ProtoPartyRoomResponse(Rest, N + 7,
					     X bsl N + Acc, F1, F2, F3,
					     TrUserData);
dg_read_field_def_ProtoPartyRoomResponse(<<0:1, X:7,
					   Rest/binary>>,
					 N, Acc, F1, F2, F3, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
      8 ->
	  d_field_ProtoPartyRoomResponse_ret(Rest, 0, 0, F1, F2,
					     F3, TrUserData);
      18 ->
	  d_field_ProtoPartyRoomResponse_session(Rest, 0, 0, F1,
						 F2, F3, TrUserData);
      26 ->
	  d_field_ProtoPartyRoomResponse_rooms(Rest, 0, 0, F1, F2,
					       F3, TrUserData);
      _ ->
	  case Key band 7 of
	    0 ->
		skip_varint_ProtoPartyRoomResponse(Rest, 0, 0, F1, F2,
						   F3, TrUserData);
	    1 ->
		skip_64_ProtoPartyRoomResponse(Rest, 0, 0, F1, F2, F3,
					       TrUserData);
	    2 ->
		skip_length_delimited_ProtoPartyRoomResponse(Rest, 0, 0,
							     F1, F2, F3,
							     TrUserData);
	    5 ->
		skip_32_ProtoPartyRoomResponse(Rest, 0, 0, F1, F2, F3,
					       TrUserData)
	  end
    end;
dg_read_field_def_ProtoPartyRoomResponse(<<>>, 0, 0, F1,
					 F2, F3, TrUserData) ->
    #'ProtoPartyRoomResponse'{ret = F1, session = F2,
			      rooms = lists_reverse(F3, TrUserData)}.

d_field_ProtoPartyRoomResponse_ret(<<1:1, X:7,
				     Rest/binary>>,
				   N, Acc, F1, F2, F3, TrUserData)
    when N < 57 ->
    d_field_ProtoPartyRoomResponse_ret(Rest, N + 7,
				       X bsl N + Acc, F1, F2, F3, TrUserData);
d_field_ProtoPartyRoomResponse_ret(<<0:1, X:7,
				     Rest/binary>>,
				   N, Acc, _, F2, F3, TrUserData) ->
    <<NewFValue:32/signed-native>> = <<(X bsl N +
					  Acc):32/unsigned-native>>,
    dfp_read_field_def_ProtoPartyRoomResponse(Rest, 0, 0,
					      NewFValue, F2, F3, TrUserData).


d_field_ProtoPartyRoomResponse_session(<<1:1, X:7,
					 Rest/binary>>,
				       N, Acc, F1, F2, F3, TrUserData)
    when N < 57 ->
    d_field_ProtoPartyRoomResponse_session(Rest, N + 7,
					   X bsl N + Acc, F1, F2, F3,
					   TrUserData);
d_field_ProtoPartyRoomResponse_session(<<0:1, X:7,
					 Rest/binary>>,
				       N, Acc, F1, _, F3, TrUserData) ->
    Len = X bsl N + Acc,
    <<Bytes:Len/binary, Rest2/binary>> = Rest,
    NewFValue = binary:copy(Bytes),
    dfp_read_field_def_ProtoPartyRoomResponse(Rest2, 0, 0,
					      F1, NewFValue, F3, TrUserData).


d_field_ProtoPartyRoomResponse_rooms(<<1:1, X:7,
				       Rest/binary>>,
				     N, Acc, F1, F2, F3, TrUserData)
    when N < 57 ->
    d_field_ProtoPartyRoomResponse_rooms(Rest, N + 7,
					 X bsl N + Acc, F1, F2, F3, TrUserData);
d_field_ProtoPartyRoomResponse_rooms(<<0:1, X:7,
				       Rest/binary>>,
				     N, Acc, F1, F2, F3, TrUserData) ->
    Len = X bsl N + Acc,
    <<Bs:Len/binary, Rest2/binary>> = Rest,
    NewFValue =
	id('d_msg_ProtoPartyRoomResponse.PartyRoom'(Bs,
						    TrUserData),
	   TrUserData),
    dfp_read_field_def_ProtoPartyRoomResponse(Rest2, 0, 0,
					      F1, F2,
					      cons(NewFValue, F3, TrUserData),
					      TrUserData).


skip_varint_ProtoPartyRoomResponse(<<1:1, _:7,
				     Rest/binary>>,
				   Z1, Z2, F1, F2, F3, TrUserData) ->
    skip_varint_ProtoPartyRoomResponse(Rest, Z1, Z2, F1, F2,
				       F3, TrUserData);
skip_varint_ProtoPartyRoomResponse(<<0:1, _:7,
				     Rest/binary>>,
				   Z1, Z2, F1, F2, F3, TrUserData) ->
    dfp_read_field_def_ProtoPartyRoomResponse(Rest, Z1, Z2,
					      F1, F2, F3, TrUserData).


skip_length_delimited_ProtoPartyRoomResponse(<<1:1, X:7,
					       Rest/binary>>,
					     N, Acc, F1, F2, F3, TrUserData)
    when N < 57 ->
    skip_length_delimited_ProtoPartyRoomResponse(Rest,
						 N + 7, X bsl N + Acc, F1, F2,
						 F3, TrUserData);
skip_length_delimited_ProtoPartyRoomResponse(<<0:1, X:7,
					       Rest/binary>>,
					     N, Acc, F1, F2, F3, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    dfp_read_field_def_ProtoPartyRoomResponse(Rest2, 0, 0,
					      F1, F2, F3, TrUserData).


skip_32_ProtoPartyRoomResponse(<<_:32, Rest/binary>>,
			       Z1, Z2, F1, F2, F3, TrUserData) ->
    dfp_read_field_def_ProtoPartyRoomResponse(Rest, Z1, Z2,
					      F1, F2, F3, TrUserData).


skip_64_ProtoPartyRoomResponse(<<_:64, Rest/binary>>,
			       Z1, Z2, F1, F2, F3, TrUserData) ->
    dfp_read_field_def_ProtoPartyRoomResponse(Rest, Z1, Z2,
					      F1, F2, F3, TrUserData).


d_msg_ProtoPartyStartResponse(Bin, TrUserData) ->
    dfp_read_field_def_ProtoPartyStartResponse(Bin, 0, 0,
					       id(undefined, TrUserData),
					       id(undefined, TrUserData),
					       TrUserData).

dfp_read_field_def_ProtoPartyStartResponse(<<8,
					     Rest/binary>>,
					   Z1, Z2, F1, F2, TrUserData) ->
    d_field_ProtoPartyStartResponse_ret(Rest, Z1, Z2, F1,
					F2, TrUserData);
dfp_read_field_def_ProtoPartyStartResponse(<<18,
					     Rest/binary>>,
					   Z1, Z2, F1, F2, TrUserData) ->
    d_field_ProtoPartyStartResponse_session(Rest, Z1, Z2,
					    F1, F2, TrUserData);
dfp_read_field_def_ProtoPartyStartResponse(<<>>, 0, 0,
					   F1, F2, _) ->
    #'ProtoPartyStartResponse'{ret = F1, session = F2};
dfp_read_field_def_ProtoPartyStartResponse(Other, Z1,
					   Z2, F1, F2, TrUserData) ->
    dg_read_field_def_ProtoPartyStartResponse(Other, Z1, Z2,
					      F1, F2, TrUserData).

dg_read_field_def_ProtoPartyStartResponse(<<1:1, X:7,
					    Rest/binary>>,
					  N, Acc, F1, F2, TrUserData)
    when N < 32 - 7 ->
    dg_read_field_def_ProtoPartyStartResponse(Rest, N + 7,
					      X bsl N + Acc, F1, F2,
					      TrUserData);
dg_read_field_def_ProtoPartyStartResponse(<<0:1, X:7,
					    Rest/binary>>,
					  N, Acc, F1, F2, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
      8 ->
	  d_field_ProtoPartyStartResponse_ret(Rest, 0, 0, F1, F2,
					      TrUserData);
      18 ->
	  d_field_ProtoPartyStartResponse_session(Rest, 0, 0, F1,
						  F2, TrUserData);
      _ ->
	  case Key band 7 of
	    0 ->
		skip_varint_ProtoPartyStartResponse(Rest, 0, 0, F1, F2,
						    TrUserData);
	    1 ->
		skip_64_ProtoPartyStartResponse(Rest, 0, 0, F1, F2,
						TrUserData);
	    2 ->
		skip_length_delimited_ProtoPartyStartResponse(Rest, 0,
							      0, F1, F2,
							      TrUserData);
	    5 ->
		skip_32_ProtoPartyStartResponse(Rest, 0, 0, F1, F2,
						TrUserData)
	  end
    end;
dg_read_field_def_ProtoPartyStartResponse(<<>>, 0, 0,
					  F1, F2, _) ->
    #'ProtoPartyStartResponse'{ret = F1, session = F2}.

d_field_ProtoPartyStartResponse_ret(<<1:1, X:7,
				      Rest/binary>>,
				    N, Acc, F1, F2, TrUserData)
    when N < 57 ->
    d_field_ProtoPartyStartResponse_ret(Rest, N + 7,
					X bsl N + Acc, F1, F2, TrUserData);
d_field_ProtoPartyStartResponse_ret(<<0:1, X:7,
				      Rest/binary>>,
				    N, Acc, _, F2, TrUserData) ->
    <<NewFValue:32/signed-native>> = <<(X bsl N +
					  Acc):32/unsigned-native>>,
    dfp_read_field_def_ProtoPartyStartResponse(Rest, 0, 0,
					       NewFValue, F2, TrUserData).


d_field_ProtoPartyStartResponse_session(<<1:1, X:7,
					  Rest/binary>>,
					N, Acc, F1, F2, TrUserData)
    when N < 57 ->
    d_field_ProtoPartyStartResponse_session(Rest, N + 7,
					    X bsl N + Acc, F1, F2, TrUserData);
d_field_ProtoPartyStartResponse_session(<<0:1, X:7,
					  Rest/binary>>,
					N, Acc, F1, _, TrUserData) ->
    Len = X bsl N + Acc,
    <<Bytes:Len/binary, Rest2/binary>> = Rest,
    NewFValue = binary:copy(Bytes),
    dfp_read_field_def_ProtoPartyStartResponse(Rest2, 0, 0,
					       F1, NewFValue, TrUserData).


skip_varint_ProtoPartyStartResponse(<<1:1, _:7,
				      Rest/binary>>,
				    Z1, Z2, F1, F2, TrUserData) ->
    skip_varint_ProtoPartyStartResponse(Rest, Z1, Z2, F1,
					F2, TrUserData);
skip_varint_ProtoPartyStartResponse(<<0:1, _:7,
				      Rest/binary>>,
				    Z1, Z2, F1, F2, TrUserData) ->
    dfp_read_field_def_ProtoPartyStartResponse(Rest, Z1, Z2,
					       F1, F2, TrUserData).


skip_length_delimited_ProtoPartyStartResponse(<<1:1,
						X:7, Rest/binary>>,
					      N, Acc, F1, F2, TrUserData)
    when N < 57 ->
    skip_length_delimited_ProtoPartyStartResponse(Rest,
						  N + 7, X bsl N + Acc, F1, F2,
						  TrUserData);
skip_length_delimited_ProtoPartyStartResponse(<<0:1,
						X:7, Rest/binary>>,
					      N, Acc, F1, F2, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    dfp_read_field_def_ProtoPartyStartResponse(Rest2, 0, 0,
					       F1, F2, TrUserData).


skip_32_ProtoPartyStartResponse(<<_:32, Rest/binary>>,
				Z1, Z2, F1, F2, TrUserData) ->
    dfp_read_field_def_ProtoPartyStartResponse(Rest, Z1, Z2,
					       F1, F2, TrUserData).


skip_64_ProtoPartyStartResponse(<<_:64, Rest/binary>>,
				Z1, Z2, F1, F2, TrUserData) ->
    dfp_read_field_def_ProtoPartyStartResponse(Rest, Z1, Z2,
					       F1, F2, TrUserData).


d_msg_ProtoPartyRoomRequest(Bin, TrUserData) ->
    dfp_read_field_def_ProtoPartyRoomRequest(Bin, 0, 0,
					     id(undefined, TrUserData),
					     TrUserData).

dfp_read_field_def_ProtoPartyRoomRequest(<<10,
					   Rest/binary>>,
					 Z1, Z2, F1, TrUserData) ->
    d_field_ProtoPartyRoomRequest_session(Rest, Z1, Z2, F1,
					  TrUserData);
dfp_read_field_def_ProtoPartyRoomRequest(<<>>, 0, 0, F1,
					 _) ->
    #'ProtoPartyRoomRequest'{session = F1};
dfp_read_field_def_ProtoPartyRoomRequest(Other, Z1, Z2,
					 F1, TrUserData) ->
    dg_read_field_def_ProtoPartyRoomRequest(Other, Z1, Z2,
					    F1, TrUserData).

dg_read_field_def_ProtoPartyRoomRequest(<<1:1, X:7,
					  Rest/binary>>,
					N, Acc, F1, TrUserData)
    when N < 32 - 7 ->
    dg_read_field_def_ProtoPartyRoomRequest(Rest, N + 7,
					    X bsl N + Acc, F1, TrUserData);
dg_read_field_def_ProtoPartyRoomRequest(<<0:1, X:7,
					  Rest/binary>>,
					N, Acc, F1, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
      10 ->
	  d_field_ProtoPartyRoomRequest_session(Rest, 0, 0, F1,
						TrUserData);
      _ ->
	  case Key band 7 of
	    0 ->
		skip_varint_ProtoPartyRoomRequest(Rest, 0, 0, F1,
						  TrUserData);
	    1 ->
		skip_64_ProtoPartyRoomRequest(Rest, 0, 0, F1,
					      TrUserData);
	    2 ->
		skip_length_delimited_ProtoPartyRoomRequest(Rest, 0, 0,
							    F1, TrUserData);
	    5 ->
		skip_32_ProtoPartyRoomRequest(Rest, 0, 0, F1,
					      TrUserData)
	  end
    end;
dg_read_field_def_ProtoPartyRoomRequest(<<>>, 0, 0, F1,
					_) ->
    #'ProtoPartyRoomRequest'{session = F1}.

d_field_ProtoPartyRoomRequest_session(<<1:1, X:7,
					Rest/binary>>,
				      N, Acc, F1, TrUserData)
    when N < 57 ->
    d_field_ProtoPartyRoomRequest_session(Rest, N + 7,
					  X bsl N + Acc, F1, TrUserData);
d_field_ProtoPartyRoomRequest_session(<<0:1, X:7,
					Rest/binary>>,
				      N, Acc, _, TrUserData) ->
    Len = X bsl N + Acc,
    <<Bytes:Len/binary, Rest2/binary>> = Rest,
    NewFValue = binary:copy(Bytes),
    dfp_read_field_def_ProtoPartyRoomRequest(Rest2, 0, 0,
					     NewFValue, TrUserData).


skip_varint_ProtoPartyRoomRequest(<<1:1, _:7,
				    Rest/binary>>,
				  Z1, Z2, F1, TrUserData) ->
    skip_varint_ProtoPartyRoomRequest(Rest, Z1, Z2, F1,
				      TrUserData);
skip_varint_ProtoPartyRoomRequest(<<0:1, _:7,
				    Rest/binary>>,
				  Z1, Z2, F1, TrUserData) ->
    dfp_read_field_def_ProtoPartyRoomRequest(Rest, Z1, Z2,
					     F1, TrUserData).


skip_length_delimited_ProtoPartyRoomRequest(<<1:1, X:7,
					      Rest/binary>>,
					    N, Acc, F1, TrUserData)
    when N < 57 ->
    skip_length_delimited_ProtoPartyRoomRequest(Rest, N + 7,
						X bsl N + Acc, F1, TrUserData);
skip_length_delimited_ProtoPartyRoomRequest(<<0:1, X:7,
					      Rest/binary>>,
					    N, Acc, F1, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    dfp_read_field_def_ProtoPartyRoomRequest(Rest2, 0, 0,
					     F1, TrUserData).


skip_32_ProtoPartyRoomRequest(<<_:32, Rest/binary>>, Z1,
			      Z2, F1, TrUserData) ->
    dfp_read_field_def_ProtoPartyRoomRequest(Rest, Z1, Z2,
					     F1, TrUserData).


skip_64_ProtoPartyRoomRequest(<<_:64, Rest/binary>>, Z1,
			      Z2, F1, TrUserData) ->
    dfp_read_field_def_ProtoPartyRoomRequest(Rest, Z1, Z2,
					     F1, TrUserData).


d_msg_ProtoSyncRequest(Bin, TrUserData) ->
    dfp_read_field_def_ProtoSyncRequest(Bin, 0, 0,
					id(undefined, TrUserData),
					id(undefined, TrUserData), TrUserData).

dfp_read_field_def_ProtoSyncRequest(<<10, Rest/binary>>,
				    Z1, Z2, F1, F2, TrUserData) ->
    d_field_ProtoSyncRequest_session(Rest, Z1, Z2, F1, F2,
				     TrUserData);
dfp_read_field_def_ProtoSyncRequest(<<16, Rest/binary>>,
				    Z1, Z2, F1, F2, TrUserData) ->
    d_field_ProtoSyncRequest_param(Rest, Z1, Z2, F1, F2,
				   TrUserData);
dfp_read_field_def_ProtoSyncRequest(<<>>, 0, 0, F1, F2,
				    _) ->
    #'ProtoSyncRequest'{session = F1, param = F2};
dfp_read_field_def_ProtoSyncRequest(Other, Z1, Z2, F1,
				    F2, TrUserData) ->
    dg_read_field_def_ProtoSyncRequest(Other, Z1, Z2, F1,
				       F2, TrUserData).

dg_read_field_def_ProtoSyncRequest(<<1:1, X:7,
				     Rest/binary>>,
				   N, Acc, F1, F2, TrUserData)
    when N < 32 - 7 ->
    dg_read_field_def_ProtoSyncRequest(Rest, N + 7,
				       X bsl N + Acc, F1, F2, TrUserData);
dg_read_field_def_ProtoSyncRequest(<<0:1, X:7,
				     Rest/binary>>,
				   N, Acc, F1, F2, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
      10 ->
	  d_field_ProtoSyncRequest_session(Rest, 0, 0, F1, F2,
					   TrUserData);
      16 ->
	  d_field_ProtoSyncRequest_param(Rest, 0, 0, F1, F2,
					 TrUserData);
      _ ->
	  case Key band 7 of
	    0 ->
		skip_varint_ProtoSyncRequest(Rest, 0, 0, F1, F2,
					     TrUserData);
	    1 ->
		skip_64_ProtoSyncRequest(Rest, 0, 0, F1, F2,
					 TrUserData);
	    2 ->
		skip_length_delimited_ProtoSyncRequest(Rest, 0, 0, F1,
						       F2, TrUserData);
	    5 ->
		skip_32_ProtoSyncRequest(Rest, 0, 0, F1, F2, TrUserData)
	  end
    end;
dg_read_field_def_ProtoSyncRequest(<<>>, 0, 0, F1, F2,
				   _) ->
    #'ProtoSyncRequest'{session = F1, param = F2}.

d_field_ProtoSyncRequest_session(<<1:1, X:7,
				   Rest/binary>>,
				 N, Acc, F1, F2, TrUserData)
    when N < 57 ->
    d_field_ProtoSyncRequest_session(Rest, N + 7,
				     X bsl N + Acc, F1, F2, TrUserData);
d_field_ProtoSyncRequest_session(<<0:1, X:7,
				   Rest/binary>>,
				 N, Acc, _, F2, TrUserData) ->
    Len = X bsl N + Acc,
    <<Bytes:Len/binary, Rest2/binary>> = Rest,
    NewFValue = binary:copy(Bytes),
    dfp_read_field_def_ProtoSyncRequest(Rest2, 0, 0,
					NewFValue, F2, TrUserData).


d_field_ProtoSyncRequest_param(<<1:1, X:7,
				 Rest/binary>>,
			       N, Acc, F1, F2, TrUserData)
    when N < 57 ->
    d_field_ProtoSyncRequest_param(Rest, N + 7,
				   X bsl N + Acc, F1, F2, TrUserData);
d_field_ProtoSyncRequest_param(<<0:1, X:7,
				 Rest/binary>>,
			       N, Acc, F1, _, TrUserData) ->
    <<NewFValue:32/signed-native>> = <<(X bsl N +
					  Acc):32/unsigned-native>>,
    dfp_read_field_def_ProtoSyncRequest(Rest, 0, 0, F1,
					NewFValue, TrUserData).


skip_varint_ProtoSyncRequest(<<1:1, _:7, Rest/binary>>,
			     Z1, Z2, F1, F2, TrUserData) ->
    skip_varint_ProtoSyncRequest(Rest, Z1, Z2, F1, F2,
				 TrUserData);
skip_varint_ProtoSyncRequest(<<0:1, _:7, Rest/binary>>,
			     Z1, Z2, F1, F2, TrUserData) ->
    dfp_read_field_def_ProtoSyncRequest(Rest, Z1, Z2, F1,
					F2, TrUserData).


skip_length_delimited_ProtoSyncRequest(<<1:1, X:7,
					 Rest/binary>>,
				       N, Acc, F1, F2, TrUserData)
    when N < 57 ->
    skip_length_delimited_ProtoSyncRequest(Rest, N + 7,
					   X bsl N + Acc, F1, F2, TrUserData);
skip_length_delimited_ProtoSyncRequest(<<0:1, X:7,
					 Rest/binary>>,
				       N, Acc, F1, F2, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    dfp_read_field_def_ProtoSyncRequest(Rest2, 0, 0, F1, F2,
					TrUserData).


skip_32_ProtoSyncRequest(<<_:32, Rest/binary>>, Z1, Z2,
			 F1, F2, TrUserData) ->
    dfp_read_field_def_ProtoSyncRequest(Rest, Z1, Z2, F1,
					F2, TrUserData).


skip_64_ProtoSyncRequest(<<_:64, Rest/binary>>, Z1, Z2,
			 F1, F2, TrUserData) ->
    dfp_read_field_def_ProtoSyncRequest(Rest, Z1, Z2, F1,
					F2, TrUserData).


d_msg_ProtoPingRequest(Bin, TrUserData) ->
    dfp_read_field_def_ProtoPingRequest(Bin, 0, 0,
					id(undefined, TrUserData), TrUserData).

dfp_read_field_def_ProtoPingRequest(<<10, Rest/binary>>,
				    Z1, Z2, F1, TrUserData) ->
    d_field_ProtoPingRequest_session(Rest, Z1, Z2, F1,
				     TrUserData);
dfp_read_field_def_ProtoPingRequest(<<>>, 0, 0, F1,
				    _) ->
    #'ProtoPingRequest'{session = F1};
dfp_read_field_def_ProtoPingRequest(Other, Z1, Z2, F1,
				    TrUserData) ->
    dg_read_field_def_ProtoPingRequest(Other, Z1, Z2, F1,
				       TrUserData).

dg_read_field_def_ProtoPingRequest(<<1:1, X:7,
				     Rest/binary>>,
				   N, Acc, F1, TrUserData)
    when N < 32 - 7 ->
    dg_read_field_def_ProtoPingRequest(Rest, N + 7,
				       X bsl N + Acc, F1, TrUserData);
dg_read_field_def_ProtoPingRequest(<<0:1, X:7,
				     Rest/binary>>,
				   N, Acc, F1, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
      10 ->
	  d_field_ProtoPingRequest_session(Rest, 0, 0, F1,
					   TrUserData);
      _ ->
	  case Key band 7 of
	    0 ->
		skip_varint_ProtoPingRequest(Rest, 0, 0, F1,
					     TrUserData);
	    1 ->
		skip_64_ProtoPingRequest(Rest, 0, 0, F1, TrUserData);
	    2 ->
		skip_length_delimited_ProtoPingRequest(Rest, 0, 0, F1,
						       TrUserData);
	    5 ->
		skip_32_ProtoPingRequest(Rest, 0, 0, F1, TrUserData)
	  end
    end;
dg_read_field_def_ProtoPingRequest(<<>>, 0, 0, F1, _) ->
    #'ProtoPingRequest'{session = F1}.

d_field_ProtoPingRequest_session(<<1:1, X:7,
				   Rest/binary>>,
				 N, Acc, F1, TrUserData)
    when N < 57 ->
    d_field_ProtoPingRequest_session(Rest, N + 7,
				     X bsl N + Acc, F1, TrUserData);
d_field_ProtoPingRequest_session(<<0:1, X:7,
				   Rest/binary>>,
				 N, Acc, _, TrUserData) ->
    Len = X bsl N + Acc,
    <<Bytes:Len/binary, Rest2/binary>> = Rest,
    NewFValue = binary:copy(Bytes),
    dfp_read_field_def_ProtoPingRequest(Rest2, 0, 0,
					NewFValue, TrUserData).


skip_varint_ProtoPingRequest(<<1:1, _:7, Rest/binary>>,
			     Z1, Z2, F1, TrUserData) ->
    skip_varint_ProtoPingRequest(Rest, Z1, Z2, F1,
				 TrUserData);
skip_varint_ProtoPingRequest(<<0:1, _:7, Rest/binary>>,
			     Z1, Z2, F1, TrUserData) ->
    dfp_read_field_def_ProtoPingRequest(Rest, Z1, Z2, F1,
					TrUserData).


skip_length_delimited_ProtoPingRequest(<<1:1, X:7,
					 Rest/binary>>,
				       N, Acc, F1, TrUserData)
    when N < 57 ->
    skip_length_delimited_ProtoPingRequest(Rest, N + 7,
					   X bsl N + Acc, F1, TrUserData);
skip_length_delimited_ProtoPingRequest(<<0:1, X:7,
					 Rest/binary>>,
				       N, Acc, F1, TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    dfp_read_field_def_ProtoPingRequest(Rest2, 0, 0, F1,
					TrUserData).


skip_32_ProtoPingRequest(<<_:32, Rest/binary>>, Z1, Z2,
			 F1, TrUserData) ->
    dfp_read_field_def_ProtoPingRequest(Rest, Z1, Z2, F1,
					TrUserData).


skip_64_ProtoPingRequest(<<_:64, Rest/binary>>, Z1, Z2,
			 F1, TrUserData) ->
    dfp_read_field_def_ProtoPingRequest(Rest, Z1, Z2, F1,
					TrUserData).




d_enum_Action(1) -> 'ACT_INIT';
d_enum_Action(2) -> 'ACT_UPDATE';
d_enum_Action(V) -> V.

d_enum_PartyMessageType(1) -> 'PARTY_MESSAGE_TYPE_CHAT';
d_enum_PartyMessageType(2) -> 'PARTY_MESSAGE_TYPE_BUY';
d_enum_PartyMessageType(3) -> 'PARTY_MESSAGE_TYPE_JOIN';
d_enum_PartyMessageType(4) ->
    'PARTY_MESSAGE_TYPE_LEAVE';
d_enum_PartyMessageType(V) -> V.



merge_msgs(Prev, New) -> merge_msgs(Prev, New, []).

merge_msgs(Prev, New, Opts)
    when element(1, Prev) =:= element(1, New) ->
    TrUserData = proplists:get_value(user_data, Opts),
    case Prev of
      #'ProtoPartyInfo.PartyMember.BuyInfo'{} ->
	  'merge_msg_ProtoPartyInfo.PartyMember.BuyInfo'(Prev,
							 New, TrUserData);
      #'ProtoPartyInfo.PartyMember'{} ->
	  'merge_msg_ProtoPartyInfo.PartyMember'(Prev, New,
						 TrUserData);
      #'ProtoPartyInfo'{} ->
	  merge_msg_ProtoPartyInfo(Prev, New, TrUserData);
      #'ProtoPartyMessageNotify.PartyMessage'{} ->
	  'merge_msg_ProtoPartyMessageNotify.PartyMessage'(Prev,
							   New, TrUserData);
      #'ProtoPartyMessageNotify'{} ->
	  merge_msg_ProtoPartyMessageNotify(Prev, New,
					    TrUserData);
      #'ProtoPartyCreateResponse'{} ->
	  merge_msg_ProtoPartyCreateResponse(Prev, New,
					     TrUserData);
      #'ProtoPartyBuyRequest'{} ->
	  merge_msg_ProtoPartyBuyRequest(Prev, New, TrUserData);
      #'ProtoPartyChatRequest'{} ->
	  merge_msg_ProtoPartyChatRequest(Prev, New, TrUserData);
      #'ProtoPartyQuitRequest'{} ->
	  merge_msg_ProtoPartyQuitRequest(Prev, New, TrUserData);
      #'ProtoPartyRoomResponse.PartyRoom'{} ->
	  'merge_msg_ProtoPartyRoomResponse.PartyRoom'(Prev, New,
						       TrUserData);
      #'ProtoSocketServerNotify'{} ->
	  merge_msg_ProtoSocketServerNotify(Prev, New,
					    TrUserData);
      #'ProtoUTCNotify'{} ->
	  merge_msg_ProtoUTCNotify(Prev, New, TrUserData);
      #'ProtoPingResponse'{} ->
	  merge_msg_ProtoPingResponse(Prev, New, TrUserData);
      #'ProtoSyncResponse'{} ->
	  merge_msg_ProtoSyncResponse(Prev, New, TrUserData);
      #'ProtoPartyDismissResponse'{} ->
	  merge_msg_ProtoPartyDismissResponse(Prev, New,
					      TrUserData);
      #'ProtoPartyStartRequest'{} ->
	  merge_msg_ProtoPartyStartRequest(Prev, New, TrUserData);
      #'ProtoPartyKickRequest'{} ->
	  merge_msg_ProtoPartyKickRequest(Prev, New, TrUserData);
      #'ProtoPartyCreateRequest'{} ->
	  merge_msg_ProtoPartyCreateRequest(Prev, New,
					    TrUserData);
      #'ProtoSocketConnectRequest'{} ->
	  merge_msg_ProtoSocketConnectRequest(Prev, New,
					      TrUserData);
      #'ProtoPartyInfoNotify'{} ->
	  merge_msg_ProtoPartyInfoNotify(Prev, New, TrUserData);
      #'ProtoSocketConnectResponse'{} ->
	  merge_msg_ProtoSocketConnectResponse(Prev, New,
					       TrUserData);
      #'ProtoPartyBuyResponse'{} ->
	  merge_msg_ProtoPartyBuyResponse(Prev, New, TrUserData);
      #'ProtoPartyDismissRequest'{} ->
	  merge_msg_ProtoPartyDismissRequest(Prev, New,
					     TrUserData);
      #'ProtoPartyJoinRequest'{} ->
	  merge_msg_ProtoPartyJoinRequest(Prev, New, TrUserData);
      #'ProtoTimeRange'{} ->
	  merge_msg_ProtoTimeRange(Prev, New, TrUserData);
      #'ProtoPartyNotify'{} ->
	  merge_msg_ProtoPartyNotify(Prev, New, TrUserData);
      #'ProtoPartyChatResponse'{} ->
	  merge_msg_ProtoPartyChatResponse(Prev, New, TrUserData);
      #'ProtoPartyKickResponse'{} ->
	  merge_msg_ProtoPartyKickResponse(Prev, New, TrUserData);
      #'ProtoPartyQuitResponse'{} ->
	  merge_msg_ProtoPartyQuitResponse(Prev, New, TrUserData);
      #'ProtoPartyJoinResponse'{} ->
	  merge_msg_ProtoPartyJoinResponse(Prev, New, TrUserData);
      #'ProtoPartyRoomResponse'{} ->
	  merge_msg_ProtoPartyRoomResponse(Prev, New, TrUserData);
      #'ProtoPartyStartResponse'{} ->
	  merge_msg_ProtoPartyStartResponse(Prev, New,
					    TrUserData);
      #'ProtoPartyRoomRequest'{} ->
	  merge_msg_ProtoPartyRoomRequest(Prev, New, TrUserData);
      #'ProtoSyncRequest'{} ->
	  merge_msg_ProtoSyncRequest(Prev, New, TrUserData);
      #'ProtoPingRequest'{} ->
	  merge_msg_ProtoPingRequest(Prev, New, TrUserData)
    end.

'merge_msg_ProtoPartyInfo.PartyMember.BuyInfo'(#'ProtoPartyInfo.PartyMember.BuyInfo'{buy_id
											 =
											 PFbuy_id,
										     buy_times
											 =
											 PFbuy_times},
					       #'ProtoPartyInfo.PartyMember.BuyInfo'{buy_id
											 =
											 NFbuy_id,
										     buy_times
											 =
											 NFbuy_times},
					       _) ->
    #'ProtoPartyInfo.PartyMember.BuyInfo'{buy_id =
					      if NFbuy_id =:= undefined ->
						     PFbuy_id;
						 true -> NFbuy_id
					      end,
					  buy_times =
					      if NFbuy_times =:= undefined ->
						     PFbuy_times;
						 true -> NFbuy_times
					      end}.

'merge_msg_ProtoPartyInfo.PartyMember'(#'ProtoPartyInfo.PartyMember'{id
									 = PFid,
								     flag =
									 PFflag,
								     name =
									 PFname,
								     seat_id =
									 PFseat_id,
								     buy_info =
									 PFbuy_info},
				       #'ProtoPartyInfo.PartyMember'{id = NFid,
								     flag =
									 NFflag,
								     name =
									 NFname,
								     seat_id =
									 NFseat_id,
								     buy_info =
									 NFbuy_info},
				       TrUserData) ->
    #'ProtoPartyInfo.PartyMember'{id =
				      if NFid =:= undefined -> PFid;
					 true -> NFid
				      end,
				  flag =
				      if NFflag =:= undefined -> PFflag;
					 true -> NFflag
				      end,
				  name =
				      if NFname =:= undefined -> PFname;
					 true -> NFname
				      end,
				  seat_id =
				      if NFseat_id =:= undefined -> PFseat_id;
					 true -> NFseat_id
				      end,
				  buy_info =
				      'erlang_++'(PFbuy_info, NFbuy_info,
						  TrUserData)}.

merge_msg_ProtoPartyInfo(#'ProtoPartyInfo'{level =
					       PFlevel,
					   end_at = PFend_at,
					   members = PFmembers},
			 #'ProtoPartyInfo'{level = NFlevel, end_at = NFend_at,
					   members = NFmembers},
			 TrUserData) ->
    #'ProtoPartyInfo'{level =
			  if NFlevel =:= undefined -> PFlevel;
			     true -> NFlevel
			  end,
		      end_at =
			  if NFend_at =:= undefined -> PFend_at;
			     true -> NFend_at
			  end,
		      members =
			  'erlang_++'(PFmembers, NFmembers, TrUserData)}.

'merge_msg_ProtoPartyMessageNotify.PartyMessage'(#'ProtoPartyMessageNotify.PartyMessage'{tp
											     =
											     PFtp,
											 args
											     =
											     PFargs},
						 #'ProtoPartyMessageNotify.PartyMessage'{tp
											     =
											     NFtp,
											 args
											     =
											     NFargs},
						 TrUserData) ->
    #'ProtoPartyMessageNotify.PartyMessage'{tp =
						if NFtp =:= undefined -> PFtp;
						   true -> NFtp
						end,
					    args =
						'erlang_++'(PFargs, NFargs,
							    TrUserData)}.

merge_msg_ProtoPartyMessageNotify(#'ProtoPartyMessageNotify'{session
								 = PFsession,
							     act = PFact,
							     messages =
								 PFmessages},
				  #'ProtoPartyMessageNotify'{session =
								 NFsession,
							     act = NFact,
							     messages =
								 NFmessages},
				  TrUserData) ->
    #'ProtoPartyMessageNotify'{session =
				   if NFsession =:= undefined -> PFsession;
				      true -> NFsession
				   end,
			       act =
				   if NFact =:= undefined -> PFact;
				      true -> NFact
				   end,
			       messages =
				   'erlang_++'(PFmessages, NFmessages,
					       TrUserData)}.

merge_msg_ProtoPartyCreateResponse(#'ProtoPartyCreateResponse'{ret
								   = PFret,
							       session =
								   PFsession},
				   #'ProtoPartyCreateResponse'{ret = NFret,
							       session =
								   NFsession},
				   _) ->
    #'ProtoPartyCreateResponse'{ret =
				    if NFret =:= undefined -> PFret;
				       true -> NFret
				    end,
				session =
				    if NFsession =:= undefined -> PFsession;
				       true -> NFsession
				    end}.

merge_msg_ProtoPartyBuyRequest(#'ProtoPartyBuyRequest'{session
							   = PFsession,
						       buy_id = PFbuy_id},
			       #'ProtoPartyBuyRequest'{session = NFsession,
						       buy_id = NFbuy_id},
			       _) ->
    #'ProtoPartyBuyRequest'{session =
				if NFsession =:= undefined -> PFsession;
				   true -> NFsession
				end,
			    buy_id =
				if NFbuy_id =:= undefined -> PFbuy_id;
				   true -> NFbuy_id
				end}.

merge_msg_ProtoPartyChatRequest(#'ProtoPartyChatRequest'{session
							     = PFsession,
							 text = PFtext},
				#'ProtoPartyChatRequest'{session = NFsession,
							 text = NFtext},
				_) ->
    #'ProtoPartyChatRequest'{session =
				 if NFsession =:= undefined -> PFsession;
				    true -> NFsession
				 end,
			     text =
				 if NFtext =:= undefined -> PFtext;
				    true -> NFtext
				 end}.

merge_msg_ProtoPartyQuitRequest(#'ProtoPartyQuitRequest'{session
							     = PFsession},
				#'ProtoPartyQuitRequest'{session = NFsession},
				_) ->
    #'ProtoPartyQuitRequest'{session =
				 if NFsession =:= undefined -> PFsession;
				    true -> NFsession
				 end}.

'merge_msg_ProtoPartyRoomResponse.PartyRoom'(#'ProtoPartyRoomResponse.PartyRoom'{owner_id
										     =
										     PFowner_id,
										 owner_name
										     =
										     PFowner_name,
										 level
										     =
										     PFlevel,
										 current_amount
										     =
										     PFcurrent_amount},
					     #'ProtoPartyRoomResponse.PartyRoom'{owner_id
										     =
										     NFowner_id,
										 owner_name
										     =
										     NFowner_name,
										 level
										     =
										     NFlevel,
										 current_amount
										     =
										     NFcurrent_amount},
					     _) ->
    #'ProtoPartyRoomResponse.PartyRoom'{owner_id =
					    if NFowner_id =:= undefined ->
						   PFowner_id;
					       true -> NFowner_id
					    end,
					owner_name =
					    if NFowner_name =:= undefined ->
						   PFowner_name;
					       true -> NFowner_name
					    end,
					level =
					    if NFlevel =:= undefined -> PFlevel;
					       true -> NFlevel
					    end,
					current_amount =
					    if NFcurrent_amount =:= undefined ->
						   PFcurrent_amount;
					       true -> NFcurrent_amount
					    end}.

merge_msg_ProtoSocketServerNotify(#'ProtoSocketServerNotify'{session
								 = PFsession,
							     ip = PFip,
							     port = PFport},
				  #'ProtoSocketServerNotify'{session =
								 NFsession,
							     ip = NFip,
							     port = NFport},
				  _) ->
    #'ProtoSocketServerNotify'{session =
				   if NFsession =:= undefined -> PFsession;
				      true -> NFsession
				   end,
			       ip =
				   if NFip =:= undefined -> PFip;
				      true -> NFip
				   end,
			       port =
				   if NFport =:= undefined -> PFport;
				      true -> NFport
				   end}.

merge_msg_ProtoUTCNotify(#'ProtoUTCNotify'{session =
					       PFsession,
					   timestamp = PFtimestamp},
			 #'ProtoUTCNotify'{session = NFsession,
					   timestamp = NFtimestamp},
			 _) ->
    #'ProtoUTCNotify'{session =
			  if NFsession =:= undefined -> PFsession;
			     true -> NFsession
			  end,
		      timestamp =
			  if NFtimestamp =:= undefined -> PFtimestamp;
			     true -> NFtimestamp
			  end}.

merge_msg_ProtoPingResponse(#'ProtoPingResponse'{ret =
						     PFret,
						 session = PFsession},
			    #'ProtoPingResponse'{ret = NFret,
						 session = NFsession},
			    _) ->
    #'ProtoPingResponse'{ret =
			     if NFret =:= undefined -> PFret;
				true -> NFret
			     end,
			 session =
			     if NFsession =:= undefined -> PFsession;
				true -> NFsession
			     end}.

merge_msg_ProtoSyncResponse(#'ProtoSyncResponse'{ret =
						     PFret,
						 session = PFsession,
						 param = PFparam},
			    #'ProtoSyncResponse'{ret = NFret,
						 session = NFsession,
						 param = NFparam},
			    _) ->
    #'ProtoSyncResponse'{ret =
			     if NFret =:= undefined -> PFret;
				true -> NFret
			     end,
			 session =
			     if NFsession =:= undefined -> PFsession;
				true -> NFsession
			     end,
			 param =
			     if NFparam =:= undefined -> PFparam;
				true -> NFparam
			     end}.

merge_msg_ProtoPartyDismissResponse(#'ProtoPartyDismissResponse'{ret
								     = PFret,
								 session =
								     PFsession},
				    #'ProtoPartyDismissResponse'{ret = NFret,
								 session =
								     NFsession},
				    _) ->
    #'ProtoPartyDismissResponse'{ret =
				     if NFret =:= undefined -> PFret;
					true -> NFret
				     end,
				 session =
				     if NFsession =:= undefined -> PFsession;
					true -> NFsession
				     end}.

merge_msg_ProtoPartyStartRequest(#'ProtoPartyStartRequest'{session
							       = PFsession},
				 #'ProtoPartyStartRequest'{session = NFsession},
				 _) ->
    #'ProtoPartyStartRequest'{session =
				  if NFsession =:= undefined -> PFsession;
				     true -> NFsession
				  end}.

merge_msg_ProtoPartyKickRequest(#'ProtoPartyKickRequest'{session
							     = PFsession,
							 id = PFid},
				#'ProtoPartyKickRequest'{session = NFsession,
							 id = NFid},
				_) ->
    #'ProtoPartyKickRequest'{session =
				 if NFsession =:= undefined -> PFsession;
				    true -> NFsession
				 end,
			     id =
				 if NFid =:= undefined -> PFid;
				    true -> NFid
				 end}.

merge_msg_ProtoPartyCreateRequest(#'ProtoPartyCreateRequest'{session
								 = PFsession,
							     id = PFid},
				  #'ProtoPartyCreateRequest'{session =
								 NFsession,
							     id = NFid},
				  _) ->
    #'ProtoPartyCreateRequest'{session =
				   if NFsession =:= undefined -> PFsession;
				      true -> NFsession
				   end,
			       id =
				   if NFid =:= undefined -> PFid;
				      true -> NFid
				   end}.

merge_msg_ProtoSocketConnectRequest(#'ProtoSocketConnectRequest'{session
								     =
								     PFsession},
				    #'ProtoSocketConnectRequest'{session =
								     NFsession},
				    _) ->
    #'ProtoSocketConnectRequest'{session =
				     if NFsession =:= undefined -> PFsession;
					true -> NFsession
				     end}.

merge_msg_ProtoPartyInfoNotify(#'ProtoPartyInfoNotify'{session
							   = PFsession,
						       talent_id = PFtalent_id,
						       talent_end_at =
							   PFtalent_end_at,
						       remained_create_times =
							   PFremained_create_times,
						       remained_join_times =
							   PFremained_join_times,
						       info = PFinfo},
			       #'ProtoPartyInfoNotify'{session = NFsession,
						       talent_id = NFtalent_id,
						       talent_end_at =
							   NFtalent_end_at,
						       remained_create_times =
							   NFremained_create_times,
						       remained_join_times =
							   NFremained_join_times,
						       info = NFinfo},
			       TrUserData) ->
    #'ProtoPartyInfoNotify'{session =
				if NFsession =:= undefined -> PFsession;
				   true -> NFsession
				end,
			    talent_id =
				if NFtalent_id =:= undefined -> PFtalent_id;
				   true -> NFtalent_id
				end,
			    talent_end_at =
				if NFtalent_end_at =:= undefined ->
				       PFtalent_end_at;
				   true -> NFtalent_end_at
				end,
			    remained_create_times =
				if NFremained_create_times =:= undefined ->
				       PFremained_create_times;
				   true -> NFremained_create_times
				end,
			    remained_join_times =
				if NFremained_join_times =:= undefined ->
				       PFremained_join_times;
				   true -> NFremained_join_times
				end,
			    info =
				if PFinfo /= undefined, NFinfo /= undefined ->
				       merge_msg_ProtoPartyInfo(PFinfo, NFinfo,
								TrUserData);
				   PFinfo == undefined -> NFinfo;
				   NFinfo == undefined -> PFinfo
				end}.

merge_msg_ProtoSocketConnectResponse(#'ProtoSocketConnectResponse'{ret
								       = PFret,
								   session =
								       PFsession,
								   next_try_at =
								       PFnext_try_at},
				     #'ProtoSocketConnectResponse'{ret = NFret,
								   session =
								       NFsession,
								   next_try_at =
								       NFnext_try_at},
				     _) ->
    #'ProtoSocketConnectResponse'{ret =
				      if NFret =:= undefined -> PFret;
					 true -> NFret
				      end,
				  session =
				      if NFsession =:= undefined -> PFsession;
					 true -> NFsession
				      end,
				  next_try_at =
				      if NFnext_try_at =:= undefined ->
					     PFnext_try_at;
					 true -> NFnext_try_at
				      end}.

merge_msg_ProtoPartyBuyResponse(#'ProtoPartyBuyResponse'{ret
							     = PFret,
							 session = PFsession},
				#'ProtoPartyBuyResponse'{ret = NFret,
							 session = NFsession},
				_) ->
    #'ProtoPartyBuyResponse'{ret =
				 if NFret =:= undefined -> PFret;
				    true -> NFret
				 end,
			     session =
				 if NFsession =:= undefined -> PFsession;
				    true -> NFsession
				 end}.

merge_msg_ProtoPartyDismissRequest(#'ProtoPartyDismissRequest'{session
								   = PFsession},
				   #'ProtoPartyDismissRequest'{session =
								   NFsession},
				   _) ->
    #'ProtoPartyDismissRequest'{session =
				    if NFsession =:= undefined -> PFsession;
				       true -> NFsession
				    end}.

merge_msg_ProtoPartyJoinRequest(#'ProtoPartyJoinRequest'{session
							     = PFsession,
							 owner_id = PFowner_id},
				#'ProtoPartyJoinRequest'{session = NFsession,
							 owner_id = NFowner_id},
				_) ->
    #'ProtoPartyJoinRequest'{session =
				 if NFsession =:= undefined -> PFsession;
				    true -> NFsession
				 end,
			     owner_id =
				 if NFowner_id =:= undefined -> PFowner_id;
				    true -> NFowner_id
				 end}.

merge_msg_ProtoTimeRange(#'ProtoTimeRange'{start_at =
					       PFstart_at,
					   close_at = PFclose_at},
			 #'ProtoTimeRange'{start_at = NFstart_at,
					   close_at = NFclose_at},
			 _) ->
    #'ProtoTimeRange'{start_at =
			  if NFstart_at =:= undefined -> PFstart_at;
			     true -> NFstart_at
			  end,
		      close_at =
			  if NFclose_at =:= undefined -> PFclose_at;
			     true -> NFclose_at
			  end}.

merge_msg_ProtoPartyNotify(#'ProtoPartyNotify'{session =
						   PFsession,
					       time_range = PFtime_range,
					       talent_id = PFtalent_id,
					       talent_end_at = PFtalent_end_at,
					       remained_create_times =
						   PFremained_create_times,
					       remained_join_times =
						   PFremained_join_times},
			   #'ProtoPartyNotify'{session = NFsession,
					       time_range = NFtime_range,
					       talent_id = NFtalent_id,
					       talent_end_at = NFtalent_end_at,
					       remained_create_times =
						   NFremained_create_times,
					       remained_join_times =
						   NFremained_join_times},
			   TrUserData) ->
    #'ProtoPartyNotify'{session =
			    if NFsession =:= undefined -> PFsession;
			       true -> NFsession
			    end,
			time_range =
			    'erlang_++'(PFtime_range, NFtime_range, TrUserData),
			talent_id =
			    if NFtalent_id =:= undefined -> PFtalent_id;
			       true -> NFtalent_id
			    end,
			talent_end_at =
			    if NFtalent_end_at =:= undefined -> PFtalent_end_at;
			       true -> NFtalent_end_at
			    end,
			remained_create_times =
			    if NFremained_create_times =:= undefined ->
				   PFremained_create_times;
			       true -> NFremained_create_times
			    end,
			remained_join_times =
			    if NFremained_join_times =:= undefined ->
				   PFremained_join_times;
			       true -> NFremained_join_times
			    end}.

merge_msg_ProtoPartyChatResponse(#'ProtoPartyChatResponse'{ret
							       = PFret,
							   session = PFsession},
				 #'ProtoPartyChatResponse'{ret = NFret,
							   session = NFsession},
				 _) ->
    #'ProtoPartyChatResponse'{ret =
				  if NFret =:= undefined -> PFret;
				     true -> NFret
				  end,
			      session =
				  if NFsession =:= undefined -> PFsession;
				     true -> NFsession
				  end}.

merge_msg_ProtoPartyKickResponse(#'ProtoPartyKickResponse'{ret
							       = PFret,
							   session = PFsession},
				 #'ProtoPartyKickResponse'{ret = NFret,
							   session = NFsession},
				 _) ->
    #'ProtoPartyKickResponse'{ret =
				  if NFret =:= undefined -> PFret;
				     true -> NFret
				  end,
			      session =
				  if NFsession =:= undefined -> PFsession;
				     true -> NFsession
				  end}.

merge_msg_ProtoPartyQuitResponse(#'ProtoPartyQuitResponse'{ret
							       = PFret,
							   session = PFsession},
				 #'ProtoPartyQuitResponse'{ret = NFret,
							   session = NFsession},
				 _) ->
    #'ProtoPartyQuitResponse'{ret =
				  if NFret =:= undefined -> PFret;
				     true -> NFret
				  end,
			      session =
				  if NFsession =:= undefined -> PFsession;
				     true -> NFsession
				  end}.

merge_msg_ProtoPartyJoinResponse(#'ProtoPartyJoinResponse'{ret
							       = PFret,
							   session = PFsession},
				 #'ProtoPartyJoinResponse'{ret = NFret,
							   session = NFsession},
				 _) ->
    #'ProtoPartyJoinResponse'{ret =
				  if NFret =:= undefined -> PFret;
				     true -> NFret
				  end,
			      session =
				  if NFsession =:= undefined -> PFsession;
				     true -> NFsession
				  end}.

merge_msg_ProtoPartyRoomResponse(#'ProtoPartyRoomResponse'{ret
							       = PFret,
							   session = PFsession,
							   rooms = PFrooms},
				 #'ProtoPartyRoomResponse'{ret = NFret,
							   session = NFsession,
							   rooms = NFrooms},
				 TrUserData) ->
    #'ProtoPartyRoomResponse'{ret =
				  if NFret =:= undefined -> PFret;
				     true -> NFret
				  end,
			      session =
				  if NFsession =:= undefined -> PFsession;
				     true -> NFsession
				  end,
			      rooms =
				  'erlang_++'(PFrooms, NFrooms, TrUserData)}.

merge_msg_ProtoPartyStartResponse(#'ProtoPartyStartResponse'{ret
								 = PFret,
							     session =
								 PFsession},
				  #'ProtoPartyStartResponse'{ret = NFret,
							     session =
								 NFsession},
				  _) ->
    #'ProtoPartyStartResponse'{ret =
				   if NFret =:= undefined -> PFret;
				      true -> NFret
				   end,
			       session =
				   if NFsession =:= undefined -> PFsession;
				      true -> NFsession
				   end}.

merge_msg_ProtoPartyRoomRequest(#'ProtoPartyRoomRequest'{session
							     = PFsession},
				#'ProtoPartyRoomRequest'{session = NFsession},
				_) ->
    #'ProtoPartyRoomRequest'{session =
				 if NFsession =:= undefined -> PFsession;
				    true -> NFsession
				 end}.

merge_msg_ProtoSyncRequest(#'ProtoSyncRequest'{session =
						   PFsession,
					       param = PFparam},
			   #'ProtoSyncRequest'{session = NFsession,
					       param = NFparam},
			   _) ->
    #'ProtoSyncRequest'{session =
			    if NFsession =:= undefined -> PFsession;
			       true -> NFsession
			    end,
			param =
			    if NFparam =:= undefined -> PFparam;
			       true -> NFparam
			    end}.

merge_msg_ProtoPingRequest(#'ProtoPingRequest'{session =
						   PFsession},
			   #'ProtoPingRequest'{session = NFsession}, _) ->
    #'ProtoPingRequest'{session =
			    if NFsession =:= undefined -> PFsession;
			       true -> NFsession
			    end}.



verify_msg(Msg) -> verify_msg(Msg, []).

verify_msg(Msg, Opts) ->
    TrUserData = proplists:get_value(user_data, Opts),
    case Msg of
      #'ProtoPartyInfo.PartyMember.BuyInfo'{} ->
	  'v_msg_ProtoPartyInfo.PartyMember.BuyInfo'(Msg,
						     ['ProtoPartyInfo.PartyMember.BuyInfo'],
						     TrUserData);
      #'ProtoPartyInfo.PartyMember'{} ->
	  'v_msg_ProtoPartyInfo.PartyMember'(Msg,
					     ['ProtoPartyInfo.PartyMember'],
					     TrUserData);
      #'ProtoPartyInfo'{} ->
	  v_msg_ProtoPartyInfo(Msg, ['ProtoPartyInfo'],
			       TrUserData);
      #'ProtoPartyMessageNotify.PartyMessage'{} ->
	  'v_msg_ProtoPartyMessageNotify.PartyMessage'(Msg,
						       ['ProtoPartyMessageNotify.PartyMessage'],
						       TrUserData);
      #'ProtoPartyMessageNotify'{} ->
	  v_msg_ProtoPartyMessageNotify(Msg,
					['ProtoPartyMessageNotify'],
					TrUserData);
      #'ProtoPartyCreateResponse'{} ->
	  v_msg_ProtoPartyCreateResponse(Msg,
					 ['ProtoPartyCreateResponse'],
					 TrUserData);
      #'ProtoPartyBuyRequest'{} ->
	  v_msg_ProtoPartyBuyRequest(Msg,
				     ['ProtoPartyBuyRequest'], TrUserData);
      #'ProtoPartyChatRequest'{} ->
	  v_msg_ProtoPartyChatRequest(Msg,
				      ['ProtoPartyChatRequest'], TrUserData);
      #'ProtoPartyQuitRequest'{} ->
	  v_msg_ProtoPartyQuitRequest(Msg,
				      ['ProtoPartyQuitRequest'], TrUserData);
      #'ProtoPartyRoomResponse.PartyRoom'{} ->
	  'v_msg_ProtoPartyRoomResponse.PartyRoom'(Msg,
						   ['ProtoPartyRoomResponse.PartyRoom'],
						   TrUserData);
      #'ProtoSocketServerNotify'{} ->
	  v_msg_ProtoSocketServerNotify(Msg,
					['ProtoSocketServerNotify'],
					TrUserData);
      #'ProtoUTCNotify'{} ->
	  v_msg_ProtoUTCNotify(Msg, ['ProtoUTCNotify'],
			       TrUserData);
      #'ProtoPingResponse'{} ->
	  v_msg_ProtoPingResponse(Msg, ['ProtoPingResponse'],
				  TrUserData);
      #'ProtoSyncResponse'{} ->
	  v_msg_ProtoSyncResponse(Msg, ['ProtoSyncResponse'],
				  TrUserData);
      #'ProtoPartyDismissResponse'{} ->
	  v_msg_ProtoPartyDismissResponse(Msg,
					  ['ProtoPartyDismissResponse'],
					  TrUserData);
      #'ProtoPartyStartRequest'{} ->
	  v_msg_ProtoPartyStartRequest(Msg,
				       ['ProtoPartyStartRequest'], TrUserData);
      #'ProtoPartyKickRequest'{} ->
	  v_msg_ProtoPartyKickRequest(Msg,
				      ['ProtoPartyKickRequest'], TrUserData);
      #'ProtoPartyCreateRequest'{} ->
	  v_msg_ProtoPartyCreateRequest(Msg,
					['ProtoPartyCreateRequest'],
					TrUserData);
      #'ProtoSocketConnectRequest'{} ->
	  v_msg_ProtoSocketConnectRequest(Msg,
					  ['ProtoSocketConnectRequest'],
					  TrUserData);
      #'ProtoPartyInfoNotify'{} ->
	  v_msg_ProtoPartyInfoNotify(Msg,
				     ['ProtoPartyInfoNotify'], TrUserData);
      #'ProtoSocketConnectResponse'{} ->
	  v_msg_ProtoSocketConnectResponse(Msg,
					   ['ProtoSocketConnectResponse'],
					   TrUserData);
      #'ProtoPartyBuyResponse'{} ->
	  v_msg_ProtoPartyBuyResponse(Msg,
				      ['ProtoPartyBuyResponse'], TrUserData);
      #'ProtoPartyDismissRequest'{} ->
	  v_msg_ProtoPartyDismissRequest(Msg,
					 ['ProtoPartyDismissRequest'],
					 TrUserData);
      #'ProtoPartyJoinRequest'{} ->
	  v_msg_ProtoPartyJoinRequest(Msg,
				      ['ProtoPartyJoinRequest'], TrUserData);
      #'ProtoTimeRange'{} ->
	  v_msg_ProtoTimeRange(Msg, ['ProtoTimeRange'],
			       TrUserData);
      #'ProtoPartyNotify'{} ->
	  v_msg_ProtoPartyNotify(Msg, ['ProtoPartyNotify'],
				 TrUserData);
      #'ProtoPartyChatResponse'{} ->
	  v_msg_ProtoPartyChatResponse(Msg,
				       ['ProtoPartyChatResponse'], TrUserData);
      #'ProtoPartyKickResponse'{} ->
	  v_msg_ProtoPartyKickResponse(Msg,
				       ['ProtoPartyKickResponse'], TrUserData);
      #'ProtoPartyQuitResponse'{} ->
	  v_msg_ProtoPartyQuitResponse(Msg,
				       ['ProtoPartyQuitResponse'], TrUserData);
      #'ProtoPartyJoinResponse'{} ->
	  v_msg_ProtoPartyJoinResponse(Msg,
				       ['ProtoPartyJoinResponse'], TrUserData);
      #'ProtoPartyRoomResponse'{} ->
	  v_msg_ProtoPartyRoomResponse(Msg,
				       ['ProtoPartyRoomResponse'], TrUserData);
      #'ProtoPartyStartResponse'{} ->
	  v_msg_ProtoPartyStartResponse(Msg,
					['ProtoPartyStartResponse'],
					TrUserData);
      #'ProtoPartyRoomRequest'{} ->
	  v_msg_ProtoPartyRoomRequest(Msg,
				      ['ProtoPartyRoomRequest'], TrUserData);
      #'ProtoSyncRequest'{} ->
	  v_msg_ProtoSyncRequest(Msg, ['ProtoSyncRequest'],
				 TrUserData);
      #'ProtoPingRequest'{} ->
	  v_msg_ProtoPingRequest(Msg, ['ProtoPingRequest'],
				 TrUserData);
      _ -> mk_type_error(not_a_known_message, Msg, [])
    end.


-dialyzer({nowarn_function,'v_msg_ProtoPartyInfo.PartyMember.BuyInfo'/3}).
'v_msg_ProtoPartyInfo.PartyMember.BuyInfo'(#'ProtoPartyInfo.PartyMember.BuyInfo'{buy_id
										     =
										     F1,
										 buy_times
										     =
										     F2},
					   Path, _) ->
    v_type_int32(F1, [buy_id | Path]),
    v_type_int32(F2, [buy_times | Path]),
    ok;
'v_msg_ProtoPartyInfo.PartyMember.BuyInfo'(X, Path,
					   _TrUserData) ->
    mk_type_error({expected_msg,
		   'ProtoPartyInfo.PartyMember.BuyInfo'},
		  X, Path).

-dialyzer({nowarn_function,'v_msg_ProtoPartyInfo.PartyMember'/3}).
'v_msg_ProtoPartyInfo.PartyMember'(#'ProtoPartyInfo.PartyMember'{id
								     = F1,
								 flag = F2,
								 name = F3,
								 seat_id = F4,
								 buy_info = F5},
				   Path, TrUserData) ->
    v_type_string(F1, [id | Path]),
    v_type_int32(F2, [flag | Path]),
    v_type_string(F3, [name | Path]),
    v_type_int32(F4, [seat_id | Path]),
    if is_list(F5) ->
	   _ = ['v_msg_ProtoPartyInfo.PartyMember.BuyInfo'(Elem,
							   [buy_info | Path],
							   TrUserData)
		|| Elem <- F5],
	   ok;
       true ->
	   mk_type_error({invalid_list_of,
			  {msg, 'ProtoPartyInfo.PartyMember.BuyInfo'}},
			 F5, Path)
    end,
    ok;
'v_msg_ProtoPartyInfo.PartyMember'(X, Path,
				   _TrUserData) ->
    mk_type_error({expected_msg,
		   'ProtoPartyInfo.PartyMember'},
		  X, Path).

-dialyzer({nowarn_function,v_msg_ProtoPartyInfo/3}).
v_msg_ProtoPartyInfo(#'ProtoPartyInfo'{level = F1,
				       end_at = F2, members = F3},
		     Path, TrUserData) ->
    v_type_int32(F1, [level | Path]),
    v_type_int64(F2, [end_at | Path]),
    if is_list(F3) ->
	   _ = ['v_msg_ProtoPartyInfo.PartyMember'(Elem,
						   [members | Path], TrUserData)
		|| Elem <- F3],
	   ok;
       true ->
	   mk_type_error({invalid_list_of,
			  {msg, 'ProtoPartyInfo.PartyMember'}},
			 F3, Path)
    end,
    ok;
v_msg_ProtoPartyInfo(X, Path, _TrUserData) ->
    mk_type_error({expected_msg, 'ProtoPartyInfo'}, X,
		  Path).

-dialyzer({nowarn_function,'v_msg_ProtoPartyMessageNotify.PartyMessage'/3}).
'v_msg_ProtoPartyMessageNotify.PartyMessage'(#'ProtoPartyMessageNotify.PartyMessage'{tp
											 =
											 F1,
										     args
											 =
											 F2},
					     Path, _) ->
    v_enum_PartyMessageType(F1, [tp | Path]),
    if is_list(F2) ->
	   _ = [v_type_string(Elem, [args | Path]) || Elem <- F2],
	   ok;
       true ->
	   mk_type_error({invalid_list_of, string}, F2, Path)
    end,
    ok;
'v_msg_ProtoPartyMessageNotify.PartyMessage'(X, Path,
					     _TrUserData) ->
    mk_type_error({expected_msg,
		   'ProtoPartyMessageNotify.PartyMessage'},
		  X, Path).

-dialyzer({nowarn_function,v_msg_ProtoPartyMessageNotify/3}).
v_msg_ProtoPartyMessageNotify(#'ProtoPartyMessageNotify'{session
							     = F1,
							 act = F2,
							 messages = F3},
			      Path, TrUserData) ->
    v_type_bytes(F1, [session | Path]),
    v_enum_Action(F2, [act | Path]),
    if is_list(F3) ->
	   _ = ['v_msg_ProtoPartyMessageNotify.PartyMessage'(Elem,
							     [messages | Path],
							     TrUserData)
		|| Elem <- F3],
	   ok;
       true ->
	   mk_type_error({invalid_list_of,
			  {msg, 'ProtoPartyMessageNotify.PartyMessage'}},
			 F3, Path)
    end,
    ok.

-dialyzer({nowarn_function,v_msg_ProtoPartyCreateResponse/3}).
v_msg_ProtoPartyCreateResponse(#'ProtoPartyCreateResponse'{ret
							       = F1,
							   session = F2},
			       Path, _) ->
    v_type_int32(F1, [ret | Path]),
    v_type_bytes(F2, [session | Path]),
    ok.

-dialyzer({nowarn_function,v_msg_ProtoPartyBuyRequest/3}).
v_msg_ProtoPartyBuyRequest(#'ProtoPartyBuyRequest'{session
						       = F1,
						   buy_id = F2},
			   Path, _) ->
    v_type_bytes(F1, [session | Path]),
    v_type_int32(F2, [buy_id | Path]),
    ok.

-dialyzer({nowarn_function,v_msg_ProtoPartyChatRequest/3}).
v_msg_ProtoPartyChatRequest(#'ProtoPartyChatRequest'{session
							 = F1,
						     text = F2},
			    Path, _) ->
    v_type_bytes(F1, [session | Path]),
    v_type_string(F2, [text | Path]),
    ok.

-dialyzer({nowarn_function,v_msg_ProtoPartyQuitRequest/3}).
v_msg_ProtoPartyQuitRequest(#'ProtoPartyQuitRequest'{session
							 = F1},
			    Path, _) ->
    v_type_bytes(F1, [session | Path]), ok.

-dialyzer({nowarn_function,'v_msg_ProtoPartyRoomResponse.PartyRoom'/3}).
'v_msg_ProtoPartyRoomResponse.PartyRoom'(#'ProtoPartyRoomResponse.PartyRoom'{owner_id
										 =
										 F1,
									     owner_name
										 =
										 F2,
									     level
										 =
										 F3,
									     current_amount
										 =
										 F4},
					 Path, _) ->
    v_type_string(F1, [owner_id | Path]),
    v_type_string(F2, [owner_name | Path]),
    v_type_int32(F3, [level | Path]),
    v_type_int32(F4, [current_amount | Path]),
    ok;
'v_msg_ProtoPartyRoomResponse.PartyRoom'(X, Path,
					 _TrUserData) ->
    mk_type_error({expected_msg,
		   'ProtoPartyRoomResponse.PartyRoom'},
		  X, Path).

-dialyzer({nowarn_function,v_msg_ProtoSocketServerNotify/3}).
v_msg_ProtoSocketServerNotify(#'ProtoSocketServerNotify'{session
							     = F1,
							 ip = F2, port = F3},
			      Path, _) ->
    v_type_bytes(F1, [session | Path]),
    v_type_string(F2, [ip | Path]),
    v_type_int32(F3, [port | Path]),
    ok.

-dialyzer({nowarn_function,v_msg_ProtoUTCNotify/3}).
v_msg_ProtoUTCNotify(#'ProtoUTCNotify'{session = F1,
				       timestamp = F2},
		     Path, _) ->
    v_type_bytes(F1, [session | Path]),
    v_type_int64(F2, [timestamp | Path]),
    ok.

-dialyzer({nowarn_function,v_msg_ProtoPingResponse/3}).
v_msg_ProtoPingResponse(#'ProtoPingResponse'{ret = F1,
					     session = F2},
			Path, _) ->
    v_type_int32(F1, [ret | Path]),
    v_type_bytes(F2, [session | Path]),
    ok.

-dialyzer({nowarn_function,v_msg_ProtoSyncResponse/3}).
v_msg_ProtoSyncResponse(#'ProtoSyncResponse'{ret = F1,
					     session = F2, param = F3},
			Path, _) ->
    v_type_int32(F1, [ret | Path]),
    v_type_bytes(F2, [session | Path]),
    if F3 == undefined -> ok;
       true -> v_type_int32(F3, [param | Path])
    end,
    ok.

-dialyzer({nowarn_function,v_msg_ProtoPartyDismissResponse/3}).
v_msg_ProtoPartyDismissResponse(#'ProtoPartyDismissResponse'{ret
								 = F1,
							     session = F2},
				Path, _) ->
    v_type_int32(F1, [ret | Path]),
    v_type_bytes(F2, [session | Path]),
    ok.

-dialyzer({nowarn_function,v_msg_ProtoPartyStartRequest/3}).
v_msg_ProtoPartyStartRequest(#'ProtoPartyStartRequest'{session
							   = F1},
			     Path, _) ->
    v_type_bytes(F1, [session | Path]), ok.

-dialyzer({nowarn_function,v_msg_ProtoPartyKickRequest/3}).
v_msg_ProtoPartyKickRequest(#'ProtoPartyKickRequest'{session
							 = F1,
						     id = F2},
			    Path, _) ->
    v_type_bytes(F1, [session | Path]),
    v_type_string(F2, [id | Path]),
    ok.

-dialyzer({nowarn_function,v_msg_ProtoPartyCreateRequest/3}).
v_msg_ProtoPartyCreateRequest(#'ProtoPartyCreateRequest'{session
							     = F1,
							 id = F2},
			      Path, _) ->
    v_type_bytes(F1, [session | Path]),
    v_type_int32(F2, [id | Path]),
    ok.

-dialyzer({nowarn_function,v_msg_ProtoSocketConnectRequest/3}).
v_msg_ProtoSocketConnectRequest(#'ProtoSocketConnectRequest'{session
								 = F1},
				Path, _) ->
    v_type_bytes(F1, [session | Path]), ok.

-dialyzer({nowarn_function,v_msg_ProtoPartyInfoNotify/3}).
v_msg_ProtoPartyInfoNotify(#'ProtoPartyInfoNotify'{session
						       = F1,
						   talent_id = F2,
						   talent_end_at = F3,
						   remained_create_times = F4,
						   remained_join_times = F5,
						   info = F6},
			   Path, TrUserData) ->
    v_type_bytes(F1, [session | Path]),
    v_type_int32(F2, [talent_id | Path]),
    v_type_int64(F3, [talent_end_at | Path]),
    v_type_int32(F4, [remained_create_times | Path]),
    v_type_int32(F5, [remained_join_times | Path]),
    if F6 == undefined -> ok;
       true ->
	   v_msg_ProtoPartyInfo(F6, [info | Path], TrUserData)
    end,
    ok.

-dialyzer({nowarn_function,v_msg_ProtoSocketConnectResponse/3}).
v_msg_ProtoSocketConnectResponse(#'ProtoSocketConnectResponse'{ret
								   = F1,
							       session = F2,
							       next_try_at =
								   F3},
				 Path, _) ->
    v_type_int32(F1, [ret | Path]),
    v_type_bytes(F2, [session | Path]),
    v_type_int64(F3, [next_try_at | Path]),
    ok.

-dialyzer({nowarn_function,v_msg_ProtoPartyBuyResponse/3}).
v_msg_ProtoPartyBuyResponse(#'ProtoPartyBuyResponse'{ret
							 = F1,
						     session = F2},
			    Path, _) ->
    v_type_int32(F1, [ret | Path]),
    v_type_bytes(F2, [session | Path]),
    ok.

-dialyzer({nowarn_function,v_msg_ProtoPartyDismissRequest/3}).
v_msg_ProtoPartyDismissRequest(#'ProtoPartyDismissRequest'{session
							       = F1},
			       Path, _) ->
    v_type_bytes(F1, [session | Path]), ok.

-dialyzer({nowarn_function,v_msg_ProtoPartyJoinRequest/3}).
v_msg_ProtoPartyJoinRequest(#'ProtoPartyJoinRequest'{session
							 = F1,
						     owner_id = F2},
			    Path, _) ->
    v_type_bytes(F1, [session | Path]),
    v_type_string(F2, [owner_id | Path]),
    ok.

-dialyzer({nowarn_function,v_msg_ProtoTimeRange/3}).
v_msg_ProtoTimeRange(#'ProtoTimeRange'{start_at = F1,
				       close_at = F2},
		     Path, _) ->
    v_type_int64(F1, [start_at | Path]),
    v_type_int64(F2, [close_at | Path]),
    ok;
v_msg_ProtoTimeRange(X, Path, _TrUserData) ->
    mk_type_error({expected_msg, 'ProtoTimeRange'}, X,
		  Path).

-dialyzer({nowarn_function,v_msg_ProtoPartyNotify/3}).
v_msg_ProtoPartyNotify(#'ProtoPartyNotify'{session = F1,
					   time_range = F2, talent_id = F3,
					   talent_end_at = F4,
					   remained_create_times = F5,
					   remained_join_times = F6},
		       Path, TrUserData) ->
    v_type_bytes(F1, [session | Path]),
    if is_list(F2) ->
	   _ = [v_msg_ProtoTimeRange(Elem, [time_range | Path],
				     TrUserData)
		|| Elem <- F2],
	   ok;
       true ->
	   mk_type_error({invalid_list_of,
			  {msg, 'ProtoTimeRange'}},
			 F2, Path)
    end,
    v_type_int32(F3, [talent_id | Path]),
    v_type_int64(F4, [talent_end_at | Path]),
    v_type_int32(F5, [remained_create_times | Path]),
    v_type_int32(F6, [remained_join_times | Path]),
    ok.

-dialyzer({nowarn_function,v_msg_ProtoPartyChatResponse/3}).
v_msg_ProtoPartyChatResponse(#'ProtoPartyChatResponse'{ret
							   = F1,
						       session = F2},
			     Path, _) ->
    v_type_int32(F1, [ret | Path]),
    v_type_bytes(F2, [session | Path]),
    ok.

-dialyzer({nowarn_function,v_msg_ProtoPartyKickResponse/3}).
v_msg_ProtoPartyKickResponse(#'ProtoPartyKickResponse'{ret
							   = F1,
						       session = F2},
			     Path, _) ->
    v_type_int32(F1, [ret | Path]),
    v_type_bytes(F2, [session | Path]),
    ok.

-dialyzer({nowarn_function,v_msg_ProtoPartyQuitResponse/3}).
v_msg_ProtoPartyQuitResponse(#'ProtoPartyQuitResponse'{ret
							   = F1,
						       session = F2},
			     Path, _) ->
    v_type_int32(F1, [ret | Path]),
    v_type_bytes(F2, [session | Path]),
    ok.

-dialyzer({nowarn_function,v_msg_ProtoPartyJoinResponse/3}).
v_msg_ProtoPartyJoinResponse(#'ProtoPartyJoinResponse'{ret
							   = F1,
						       session = F2},
			     Path, _) ->
    v_type_int32(F1, [ret | Path]),
    v_type_bytes(F2, [session | Path]),
    ok.

-dialyzer({nowarn_function,v_msg_ProtoPartyRoomResponse/3}).
v_msg_ProtoPartyRoomResponse(#'ProtoPartyRoomResponse'{ret
							   = F1,
						       session = F2,
						       rooms = F3},
			     Path, TrUserData) ->
    v_type_int32(F1, [ret | Path]),
    v_type_bytes(F2, [session | Path]),
    if is_list(F3) ->
	   _ = ['v_msg_ProtoPartyRoomResponse.PartyRoom'(Elem,
							 [rooms | Path],
							 TrUserData)
		|| Elem <- F3],
	   ok;
       true ->
	   mk_type_error({invalid_list_of,
			  {msg, 'ProtoPartyRoomResponse.PartyRoom'}},
			 F3, Path)
    end,
    ok.

-dialyzer({nowarn_function,v_msg_ProtoPartyStartResponse/3}).
v_msg_ProtoPartyStartResponse(#'ProtoPartyStartResponse'{ret
							     = F1,
							 session = F2},
			      Path, _) ->
    v_type_int32(F1, [ret | Path]),
    v_type_bytes(F2, [session | Path]),
    ok.

-dialyzer({nowarn_function,v_msg_ProtoPartyRoomRequest/3}).
v_msg_ProtoPartyRoomRequest(#'ProtoPartyRoomRequest'{session
							 = F1},
			    Path, _) ->
    v_type_bytes(F1, [session | Path]), ok.

-dialyzer({nowarn_function,v_msg_ProtoSyncRequest/3}).
v_msg_ProtoSyncRequest(#'ProtoSyncRequest'{session = F1,
					   param = F2},
		       Path, _) ->
    v_type_bytes(F1, [session | Path]),
    v_type_int32(F2, [param | Path]),
    ok.

-dialyzer({nowarn_function,v_msg_ProtoPingRequest/3}).
v_msg_ProtoPingRequest(#'ProtoPingRequest'{session =
					       F1},
		       Path, _) ->
    v_type_bytes(F1, [session | Path]), ok.

-dialyzer({nowarn_function,v_enum_Action/2}).
v_enum_Action('ACT_INIT', _Path) -> ok;
v_enum_Action('ACT_UPDATE', _Path) -> ok;
v_enum_Action(V, Path) when is_integer(V) ->
    v_type_sint32(V, Path);
v_enum_Action(X, Path) ->
    mk_type_error({invalid_enum, 'Action'}, X, Path).

-dialyzer({nowarn_function,v_enum_PartyMessageType/2}).
v_enum_PartyMessageType('PARTY_MESSAGE_TYPE_CHAT',
			_Path) ->
    ok;
v_enum_PartyMessageType('PARTY_MESSAGE_TYPE_BUY',
			_Path) ->
    ok;
v_enum_PartyMessageType('PARTY_MESSAGE_TYPE_JOIN',
			_Path) ->
    ok;
v_enum_PartyMessageType('PARTY_MESSAGE_TYPE_LEAVE',
			_Path) ->
    ok;
v_enum_PartyMessageType(V, Path) when is_integer(V) ->
    v_type_sint32(V, Path);
v_enum_PartyMessageType(X, Path) ->
    mk_type_error({invalid_enum, 'PartyMessageType'}, X,
		  Path).

-dialyzer({nowarn_function,v_type_sint32/2}).
v_type_sint32(N, _Path)
    when -2147483648 =< N, N =< 2147483647 ->
    ok;
v_type_sint32(N, Path) when is_integer(N) ->
    mk_type_error({value_out_of_range, sint32, signed, 32},
		  N, Path);
v_type_sint32(X, Path) ->
    mk_type_error({bad_integer, sint32, signed, 32}, X,
		  Path).

-dialyzer({nowarn_function,v_type_int32/2}).
v_type_int32(N, _Path)
    when -2147483648 =< N, N =< 2147483647 ->
    ok;
v_type_int32(N, Path) when is_integer(N) ->
    mk_type_error({value_out_of_range, int32, signed, 32},
		  N, Path);
v_type_int32(X, Path) ->
    mk_type_error({bad_integer, int32, signed, 32}, X,
		  Path).

-dialyzer({nowarn_function,v_type_int64/2}).
v_type_int64(N, _Path)
    when -9223372036854775808 =< N,
	 N =< 9223372036854775807 ->
    ok;
v_type_int64(N, Path) when is_integer(N) ->
    mk_type_error({value_out_of_range, int64, signed, 64},
		  N, Path);
v_type_int64(X, Path) ->
    mk_type_error({bad_integer, int64, signed, 64}, X,
		  Path).

-dialyzer({nowarn_function,v_type_string/2}).
v_type_string(S, Path) when is_list(S); is_binary(S) ->
    try unicode:characters_to_binary(S) of
      B when is_binary(B) -> ok;
      {error, _, _} ->
	  mk_type_error(bad_unicode_string, S, Path)
    catch
      error:badarg ->
	  mk_type_error(bad_unicode_string, S, Path)
    end;
v_type_string(X, Path) ->
    mk_type_error(bad_unicode_string, X, Path).

-dialyzer({nowarn_function,v_type_bytes/2}).
v_type_bytes(B, _Path) when is_binary(B) -> ok;
v_type_bytes(B, _Path) when is_list(B) -> ok;
v_type_bytes(X, Path) ->
    mk_type_error(bad_binary_value, X, Path).

-spec mk_type_error(_, _, list()) -> no_return().
mk_type_error(Error, ValueSeen, Path) ->
    Path2 = prettify_path(Path),
    erlang:error({gpb_type_error,
		  {Error, [{value, ValueSeen}, {path, Path2}]}}).


prettify_path([]) -> top_level;
prettify_path(PathR) ->
    list_to_atom(string:join(lists:map(fun atom_to_list/1,
				       lists:reverse(PathR)),
			     ".")).



-compile({nowarn_unused_function,id/2}).
-compile({inline,id/2}).
id(X, _TrUserData) -> X.

-compile({nowarn_unused_function,cons/3}).
-compile({inline,cons/3}).
cons(Elem, Acc, _TrUserData) -> [Elem | Acc].

-compile({nowarn_unused_function,lists_reverse/2}).
-compile({inline,lists_reverse/2}).
'lists_reverse'(L, _TrUserData) -> lists:reverse(L).

-compile({nowarn_unused_function,'erlang_++'/3}).
-compile({inline,'erlang_++'/3}).
'erlang_++'(A, B, _TrUserData) -> A ++ B.



get_msg_defs() ->
    [{{enum, 'NextOperate'},
      [{'OPT_OK', 1}, {'OPT_CREATE_CLUB', 2}]},
     {{enum, 'Action'},
      [{'ACT_INIT', 1}, {'ACT_UPDATE', 2}]},
     {{enum, 'PropertyType'},
      [{'PROPERTY_STAFF_ATTACK', 1},
       {'PROPERTY_STAFF_DEFENSE', 2},
       {'PROPERTY_STAFF_MANAGE', 3},
       {'PROPERTY_STAFF_OPERATION', 4},
       {'PROPERTY_STAFF_ATTACK_PERCENT', 5},
       {'PROPERTY_STAFF_DEFENSE_PERCENT', 6},
       {'PROPERTY_STAFF_MANAGE_PERCENT', 7},
       {'PROPERTY_STAFF_OPERATION_PERCENT', 8},
       {'PROPERTY_UNIT_HP_PERCENT', 9},
       {'PROPERTY_UNIT_ATTACK_PERCENT', 10},
       {'PROPERTY_UNIT_DEFENSE_PERCENT', 11},
       {'PROPERTY_UNIT_HIT_PERCENT', 12},
       {'PROPERTY_UNIT_DODGE_PERCENT', 13},
       {'PROPERTY_UNIT_CRIT_PERCENT', 14},
       {'PROPERTY_UNIT_TOUGHNESS_PERCENT', 15},
       {'PROPERTY_UNIT_CRIT_MULTIPLE', 16},
       {'PROPERTY_UNIT_HURT_ADDIITON_TO_TERRAN', 17},
       {'PROPERTY_UNIT_HURT_ADDIITON_TO_PROTOSS', 18},
       {'PROPERTY_UNIT_HURT_ADDIITON_TO_ZERG', 19},
       {'PROPERTY_UNIT_HURT_ADDIITON_BY_TERRAN', 20},
       {'PROPERTY_UNIT_HURT_ADDIITON_BY_PROTOSS', 21},
       {'PROPERTY_UNIT_HURT_ADDIITON_BY_ZERG', 22},
       {'PROPERTY_UNIT_FINAL_HURT_ADDITION', 23},
       {'PROPERTY_UNIT_FINAL_HURT_REDUCE', 24}]},
     {{enum, 'SpecialEquipmentGenerateType'},
      [{'SPECIAL_EQUIPMENT_GENERATE_NORMAL', 1},
       {'SPECIAL_EQUIPMENT_GENERATE_ADVANCE', 2}]},
     {{enum, 'PartyMessageType'},
      [{'PARTY_MESSAGE_TYPE_CHAT', 1},
       {'PARTY_MESSAGE_TYPE_BUY', 2},
       {'PARTY_MESSAGE_TYPE_JOIN', 3},
       {'PARTY_MESSAGE_TYPE_LEAVE', 4}]},
     {{msg, 'ProtoPartyInfo.PartyMember.BuyInfo'},
      [#field{name = buy_id, fnum = 1, rnum = 2, type = int32,
	      occurrence = required, opts = []},
       #field{name = buy_times, fnum = 2, rnum = 3,
	      type = int32, occurrence = required, opts = []}]},
     {{msg, 'ProtoPartyInfo.PartyMember'},
      [#field{name = id, fnum = 1, rnum = 2, type = string,
	      occurrence = required, opts = []},
       #field{name = flag, fnum = 2, rnum = 3, type = int32,
	      occurrence = required, opts = []},
       #field{name = name, fnum = 3, rnum = 4, type = string,
	      occurrence = required, opts = []},
       #field{name = seat_id, fnum = 4, rnum = 5, type = int32,
	      occurrence = required, opts = []},
       #field{name = buy_info, fnum = 5, rnum = 6,
	      type = {msg, 'ProtoPartyInfo.PartyMember.BuyInfo'},
	      occurrence = repeated, opts = []}]},
     {{msg, 'ProtoPartyInfo'},
      [#field{name = level, fnum = 1, rnum = 2, type = int32,
	      occurrence = required, opts = []},
       #field{name = end_at, fnum = 2, rnum = 3, type = int64,
	      occurrence = required, opts = []},
       #field{name = members, fnum = 3, rnum = 4,
	      type = {msg, 'ProtoPartyInfo.PartyMember'},
	      occurrence = repeated, opts = []}]},
     {{msg, 'ProtoPartyMessageNotify.PartyMessage'},
      [#field{name = tp, fnum = 1, rnum = 2,
	      type = {enum, 'PartyMessageType'},
	      occurrence = required, opts = []},
       #field{name = args, fnum = 2, rnum = 3, type = string,
	      occurrence = repeated, opts = []}]},
     {{msg, 'ProtoPartyMessageNotify'},
      [#field{name = session, fnum = 1, rnum = 2,
	      type = bytes, occurrence = required, opts = []},
       #field{name = act, fnum = 2, rnum = 3,
	      type = {enum, 'Action'}, occurrence = required,
	      opts = []},
       #field{name = messages, fnum = 3, rnum = 4,
	      type = {msg, 'ProtoPartyMessageNotify.PartyMessage'},
	      occurrence = repeated, opts = []}]},
     {{msg, 'ProtoPartyCreateResponse'},
      [#field{name = ret, fnum = 1, rnum = 2, type = int32,
	      occurrence = required, opts = []},
       #field{name = session, fnum = 2, rnum = 3, type = bytes,
	      occurrence = required, opts = []}]},
     {{msg, 'ProtoPartyBuyRequest'},
      [#field{name = session, fnum = 1, rnum = 2,
	      type = bytes, occurrence = required, opts = []},
       #field{name = buy_id, fnum = 2, rnum = 3, type = int32,
	      occurrence = required, opts = []}]},
     {{msg, 'ProtoPartyChatRequest'},
      [#field{name = session, fnum = 1, rnum = 2,
	      type = bytes, occurrence = required, opts = []},
       #field{name = text, fnum = 2, rnum = 3, type = string,
	      occurrence = required, opts = []}]},
     {{msg, 'ProtoPartyQuitRequest'},
      [#field{name = session, fnum = 1, rnum = 2,
	      type = bytes, occurrence = required, opts = []}]},
     {{msg, 'ProtoPartyRoomResponse.PartyRoom'},
      [#field{name = owner_id, fnum = 1, rnum = 2,
	      type = string, occurrence = required, opts = []},
       #field{name = owner_name, fnum = 2, rnum = 3,
	      type = string, occurrence = required, opts = []},
       #field{name = level, fnum = 3, rnum = 4, type = int32,
	      occurrence = required, opts = []},
       #field{name = current_amount, fnum = 4, rnum = 5,
	      type = int32, occurrence = required, opts = []}]},
     {{msg, 'ProtoSocketServerNotify'},
      [#field{name = session, fnum = 1, rnum = 2,
	      type = bytes, occurrence = required, opts = []},
       #field{name = ip, fnum = 2, rnum = 3, type = string,
	      occurrence = required, opts = []},
       #field{name = port, fnum = 3, rnum = 4, type = int32,
	      occurrence = required, opts = []}]},
     {{msg, 'ProtoUTCNotify'},
      [#field{name = session, fnum = 1, rnum = 2,
	      type = bytes, occurrence = required, opts = []},
       #field{name = timestamp, fnum = 2, rnum = 3,
	      type = int64, occurrence = required, opts = []}]},
     {{msg, 'ProtoPingResponse'},
      [#field{name = ret, fnum = 1, rnum = 2, type = int32,
	      occurrence = required, opts = []},
       #field{name = session, fnum = 2, rnum = 3, type = bytes,
	      occurrence = required, opts = []}]},
     {{msg, 'ProtoSyncResponse'},
      [#field{name = ret, fnum = 1, rnum = 2, type = int32,
	      occurrence = required, opts = []},
       #field{name = session, fnum = 2, rnum = 3, type = bytes,
	      occurrence = required, opts = []},
       #field{name = param, fnum = 3, rnum = 4, type = int32,
	      occurrence = optional, opts = []}]},
     {{msg, 'ProtoPartyDismissResponse'},
      [#field{name = ret, fnum = 1, rnum = 2, type = int32,
	      occurrence = required, opts = []},
       #field{name = session, fnum = 2, rnum = 3, type = bytes,
	      occurrence = required, opts = []}]},
     {{msg, 'ProtoPartyStartRequest'},
      [#field{name = session, fnum = 1, rnum = 2,
	      type = bytes, occurrence = required, opts = []}]},
     {{msg, 'ProtoPartyKickRequest'},
      [#field{name = session, fnum = 1, rnum = 2,
	      type = bytes, occurrence = required, opts = []},
       #field{name = id, fnum = 2, rnum = 3, type = string,
	      occurrence = required, opts = []}]},
     {{msg, 'ProtoPartyCreateRequest'},
      [#field{name = session, fnum = 1, rnum = 2,
	      type = bytes, occurrence = required, opts = []},
       #field{name = id, fnum = 2, rnum = 3, type = int32,
	      occurrence = required, opts = []}]},
     {{msg, 'ProtoSocketConnectRequest'},
      [#field{name = session, fnum = 1, rnum = 2,
	      type = bytes, occurrence = required, opts = []}]},
     {{msg, 'ProtoPartyInfoNotify'},
      [#field{name = session, fnum = 1, rnum = 2,
	      type = bytes, occurrence = required, opts = []},
       #field{name = talent_id, fnum = 2, rnum = 3,
	      type = int32, occurrence = required, opts = []},
       #field{name = talent_end_at, fnum = 3, rnum = 4,
	      type = int64, occurrence = required, opts = []},
       #field{name = remained_create_times, fnum = 4, rnum = 5,
	      type = int32, occurrence = required, opts = []},
       #field{name = remained_join_times, fnum = 5, rnum = 6,
	      type = int32, occurrence = required, opts = []},
       #field{name = info, fnum = 6, rnum = 7,
	      type = {msg, 'ProtoPartyInfo'}, occurrence = optional,
	      opts = []}]},
     {{msg, 'ProtoSocketConnectResponse'},
      [#field{name = ret, fnum = 1, rnum = 2, type = int32,
	      occurrence = required, opts = []},
       #field{name = session, fnum = 2, rnum = 3, type = bytes,
	      occurrence = required, opts = []},
       #field{name = next_try_at, fnum = 3, rnum = 4,
	      type = int64, occurrence = required, opts = []}]},
     {{msg, 'ProtoPartyBuyResponse'},
      [#field{name = ret, fnum = 1, rnum = 2, type = int32,
	      occurrence = required, opts = []},
       #field{name = session, fnum = 2, rnum = 3, type = bytes,
	      occurrence = required, opts = []}]},
     {{msg, 'ProtoPartyDismissRequest'},
      [#field{name = session, fnum = 1, rnum = 2,
	      type = bytes, occurrence = required, opts = []}]},
     {{msg, 'ProtoPartyJoinRequest'},
      [#field{name = session, fnum = 1, rnum = 2,
	      type = bytes, occurrence = required, opts = []},
       #field{name = owner_id, fnum = 2, rnum = 3,
	      type = string, occurrence = required, opts = []}]},
     {{msg, 'ProtoTimeRange'},
      [#field{name = start_at, fnum = 1, rnum = 2,
	      type = int64, occurrence = required, opts = []},
       #field{name = close_at, fnum = 2, rnum = 3,
	      type = int64, occurrence = required, opts = []}]},
     {{msg, 'ProtoPartyNotify'},
      [#field{name = session, fnum = 1, rnum = 2,
	      type = bytes, occurrence = required, opts = []},
       #field{name = time_range, fnum = 2, rnum = 3,
	      type = {msg, 'ProtoTimeRange'}, occurrence = repeated,
	      opts = []},
       #field{name = talent_id, fnum = 3, rnum = 4,
	      type = int32, occurrence = required, opts = []},
       #field{name = talent_end_at, fnum = 4, rnum = 5,
	      type = int64, occurrence = required, opts = []},
       #field{name = remained_create_times, fnum = 5, rnum = 6,
	      type = int32, occurrence = required, opts = []},
       #field{name = remained_join_times, fnum = 6, rnum = 7,
	      type = int32, occurrence = required, opts = []}]},
     {{msg, 'ProtoPartyChatResponse'},
      [#field{name = ret, fnum = 1, rnum = 2, type = int32,
	      occurrence = required, opts = []},
       #field{name = session, fnum = 2, rnum = 3, type = bytes,
	      occurrence = required, opts = []}]},
     {{msg, 'ProtoPartyKickResponse'},
      [#field{name = ret, fnum = 1, rnum = 2, type = int32,
	      occurrence = required, opts = []},
       #field{name = session, fnum = 2, rnum = 3, type = bytes,
	      occurrence = required, opts = []}]},
     {{msg, 'ProtoPartyQuitResponse'},
      [#field{name = ret, fnum = 1, rnum = 2, type = int32,
	      occurrence = required, opts = []},
       #field{name = session, fnum = 2, rnum = 3, type = bytes,
	      occurrence = required, opts = []}]},
     {{msg, 'ProtoPartyJoinResponse'},
      [#field{name = ret, fnum = 1, rnum = 2, type = int32,
	      occurrence = required, opts = []},
       #field{name = session, fnum = 2, rnum = 3, type = bytes,
	      occurrence = required, opts = []}]},
     {{msg, 'ProtoPartyRoomResponse'},
      [#field{name = ret, fnum = 1, rnum = 2, type = int32,
	      occurrence = required, opts = []},
       #field{name = session, fnum = 2, rnum = 3, type = bytes,
	      occurrence = required, opts = []},
       #field{name = rooms, fnum = 3, rnum = 4,
	      type = {msg, 'ProtoPartyRoomResponse.PartyRoom'},
	      occurrence = repeated, opts = []}]},
     {{msg, 'ProtoPartyStartResponse'},
      [#field{name = ret, fnum = 1, rnum = 2, type = int32,
	      occurrence = required, opts = []},
       #field{name = session, fnum = 2, rnum = 3, type = bytes,
	      occurrence = required, opts = []}]},
     {{msg, 'ProtoPartyRoomRequest'},
      [#field{name = session, fnum = 1, rnum = 2,
	      type = bytes, occurrence = required, opts = []}]},
     {{msg, 'ProtoSyncRequest'},
      [#field{name = session, fnum = 1, rnum = 2,
	      type = bytes, occurrence = required, opts = []},
       #field{name = param, fnum = 2, rnum = 3, type = int32,
	      occurrence = required, opts = []}]},
     {{msg, 'ProtoPingRequest'},
      [#field{name = session, fnum = 1, rnum = 2,
	      type = bytes, occurrence = required, opts = []}]}].


get_msg_names() ->
    ['ProtoPartyInfo.PartyMember.BuyInfo',
     'ProtoPartyInfo.PartyMember', 'ProtoPartyInfo',
     'ProtoPartyMessageNotify.PartyMessage',
     'ProtoPartyMessageNotify', 'ProtoPartyCreateResponse',
     'ProtoPartyBuyRequest', 'ProtoPartyChatRequest',
     'ProtoPartyQuitRequest',
     'ProtoPartyRoomResponse.PartyRoom',
     'ProtoSocketServerNotify', 'ProtoUTCNotify',
     'ProtoPingResponse', 'ProtoSyncResponse',
     'ProtoPartyDismissResponse', 'ProtoPartyStartRequest',
     'ProtoPartyKickRequest', 'ProtoPartyCreateRequest',
     'ProtoSocketConnectRequest', 'ProtoPartyInfoNotify',
     'ProtoSocketConnectResponse', 'ProtoPartyBuyResponse',
     'ProtoPartyDismissRequest', 'ProtoPartyJoinRequest',
     'ProtoTimeRange', 'ProtoPartyNotify',
     'ProtoPartyChatResponse', 'ProtoPartyKickResponse',
     'ProtoPartyQuitResponse', 'ProtoPartyJoinResponse',
     'ProtoPartyRoomResponse', 'ProtoPartyStartResponse',
     'ProtoPartyRoomRequest', 'ProtoSyncRequest',
     'ProtoPingRequest'].


get_enum_names() ->
    ['NextOperate', 'Action', 'PropertyType',
     'SpecialEquipmentGenerateType', 'PartyMessageType'].


fetch_msg_def(MsgName) ->
    case find_msg_def(MsgName) of
      Fs when is_list(Fs) -> Fs;
      error -> erlang:error({no_such_msg, MsgName})
    end.


fetch_enum_def(EnumName) ->
    case find_enum_def(EnumName) of
      Es when is_list(Es) -> Es;
      error -> erlang:error({no_such_enum, EnumName})
    end.


find_msg_def('ProtoPartyInfo.PartyMember.BuyInfo') ->
    [#field{name = buy_id, fnum = 1, rnum = 2, type = int32,
	    occurrence = required, opts = []},
     #field{name = buy_times, fnum = 2, rnum = 3,
	    type = int32, occurrence = required, opts = []}];
find_msg_def('ProtoPartyInfo.PartyMember') ->
    [#field{name = id, fnum = 1, rnum = 2, type = string,
	    occurrence = required, opts = []},
     #field{name = flag, fnum = 2, rnum = 3, type = int32,
	    occurrence = required, opts = []},
     #field{name = name, fnum = 3, rnum = 4, type = string,
	    occurrence = required, opts = []},
     #field{name = seat_id, fnum = 4, rnum = 5, type = int32,
	    occurrence = required, opts = []},
     #field{name = buy_info, fnum = 5, rnum = 6,
	    type = {msg, 'ProtoPartyInfo.PartyMember.BuyInfo'},
	    occurrence = repeated, opts = []}];
find_msg_def('ProtoPartyInfo') ->
    [#field{name = level, fnum = 1, rnum = 2, type = int32,
	    occurrence = required, opts = []},
     #field{name = end_at, fnum = 2, rnum = 3, type = int64,
	    occurrence = required, opts = []},
     #field{name = members, fnum = 3, rnum = 4,
	    type = {msg, 'ProtoPartyInfo.PartyMember'},
	    occurrence = repeated, opts = []}];
find_msg_def('ProtoPartyMessageNotify.PartyMessage') ->
    [#field{name = tp, fnum = 1, rnum = 2,
	    type = {enum, 'PartyMessageType'},
	    occurrence = required, opts = []},
     #field{name = args, fnum = 2, rnum = 3, type = string,
	    occurrence = repeated, opts = []}];
find_msg_def('ProtoPartyMessageNotify') ->
    [#field{name = session, fnum = 1, rnum = 2,
	    type = bytes, occurrence = required, opts = []},
     #field{name = act, fnum = 2, rnum = 3,
	    type = {enum, 'Action'}, occurrence = required,
	    opts = []},
     #field{name = messages, fnum = 3, rnum = 4,
	    type = {msg, 'ProtoPartyMessageNotify.PartyMessage'},
	    occurrence = repeated, opts = []}];
find_msg_def('ProtoPartyCreateResponse') ->
    [#field{name = ret, fnum = 1, rnum = 2, type = int32,
	    occurrence = required, opts = []},
     #field{name = session, fnum = 2, rnum = 3, type = bytes,
	    occurrence = required, opts = []}];
find_msg_def('ProtoPartyBuyRequest') ->
    [#field{name = session, fnum = 1, rnum = 2,
	    type = bytes, occurrence = required, opts = []},
     #field{name = buy_id, fnum = 2, rnum = 3, type = int32,
	    occurrence = required, opts = []}];
find_msg_def('ProtoPartyChatRequest') ->
    [#field{name = session, fnum = 1, rnum = 2,
	    type = bytes, occurrence = required, opts = []},
     #field{name = text, fnum = 2, rnum = 3, type = string,
	    occurrence = required, opts = []}];
find_msg_def('ProtoPartyQuitRequest') ->
    [#field{name = session, fnum = 1, rnum = 2,
	    type = bytes, occurrence = required, opts = []}];
find_msg_def('ProtoPartyRoomResponse.PartyRoom') ->
    [#field{name = owner_id, fnum = 1, rnum = 2,
	    type = string, occurrence = required, opts = []},
     #field{name = owner_name, fnum = 2, rnum = 3,
	    type = string, occurrence = required, opts = []},
     #field{name = level, fnum = 3, rnum = 4, type = int32,
	    occurrence = required, opts = []},
     #field{name = current_amount, fnum = 4, rnum = 5,
	    type = int32, occurrence = required, opts = []}];
find_msg_def('ProtoSocketServerNotify') ->
    [#field{name = session, fnum = 1, rnum = 2,
	    type = bytes, occurrence = required, opts = []},
     #field{name = ip, fnum = 2, rnum = 3, type = string,
	    occurrence = required, opts = []},
     #field{name = port, fnum = 3, rnum = 4, type = int32,
	    occurrence = required, opts = []}];
find_msg_def('ProtoUTCNotify') ->
    [#field{name = session, fnum = 1, rnum = 2,
	    type = bytes, occurrence = required, opts = []},
     #field{name = timestamp, fnum = 2, rnum = 3,
	    type = int64, occurrence = required, opts = []}];
find_msg_def('ProtoPingResponse') ->
    [#field{name = ret, fnum = 1, rnum = 2, type = int32,
	    occurrence = required, opts = []},
     #field{name = session, fnum = 2, rnum = 3, type = bytes,
	    occurrence = required, opts = []}];
find_msg_def('ProtoSyncResponse') ->
    [#field{name = ret, fnum = 1, rnum = 2, type = int32,
	    occurrence = required, opts = []},
     #field{name = session, fnum = 2, rnum = 3, type = bytes,
	    occurrence = required, opts = []},
     #field{name = param, fnum = 3, rnum = 4, type = int32,
	    occurrence = optional, opts = []}];
find_msg_def('ProtoPartyDismissResponse') ->
    [#field{name = ret, fnum = 1, rnum = 2, type = int32,
	    occurrence = required, opts = []},
     #field{name = session, fnum = 2, rnum = 3, type = bytes,
	    occurrence = required, opts = []}];
find_msg_def('ProtoPartyStartRequest') ->
    [#field{name = session, fnum = 1, rnum = 2,
	    type = bytes, occurrence = required, opts = []}];
find_msg_def('ProtoPartyKickRequest') ->
    [#field{name = session, fnum = 1, rnum = 2,
	    type = bytes, occurrence = required, opts = []},
     #field{name = id, fnum = 2, rnum = 3, type = string,
	    occurrence = required, opts = []}];
find_msg_def('ProtoPartyCreateRequest') ->
    [#field{name = session, fnum = 1, rnum = 2,
	    type = bytes, occurrence = required, opts = []},
     #field{name = id, fnum = 2, rnum = 3, type = int32,
	    occurrence = required, opts = []}];
find_msg_def('ProtoSocketConnectRequest') ->
    [#field{name = session, fnum = 1, rnum = 2,
	    type = bytes, occurrence = required, opts = []}];
find_msg_def('ProtoPartyInfoNotify') ->
    [#field{name = session, fnum = 1, rnum = 2,
	    type = bytes, occurrence = required, opts = []},
     #field{name = talent_id, fnum = 2, rnum = 3,
	    type = int32, occurrence = required, opts = []},
     #field{name = talent_end_at, fnum = 3, rnum = 4,
	    type = int64, occurrence = required, opts = []},
     #field{name = remained_create_times, fnum = 4, rnum = 5,
	    type = int32, occurrence = required, opts = []},
     #field{name = remained_join_times, fnum = 5, rnum = 6,
	    type = int32, occurrence = required, opts = []},
     #field{name = info, fnum = 6, rnum = 7,
	    type = {msg, 'ProtoPartyInfo'}, occurrence = optional,
	    opts = []}];
find_msg_def('ProtoSocketConnectResponse') ->
    [#field{name = ret, fnum = 1, rnum = 2, type = int32,
	    occurrence = required, opts = []},
     #field{name = session, fnum = 2, rnum = 3, type = bytes,
	    occurrence = required, opts = []},
     #field{name = next_try_at, fnum = 3, rnum = 4,
	    type = int64, occurrence = required, opts = []}];
find_msg_def('ProtoPartyBuyResponse') ->
    [#field{name = ret, fnum = 1, rnum = 2, type = int32,
	    occurrence = required, opts = []},
     #field{name = session, fnum = 2, rnum = 3, type = bytes,
	    occurrence = required, opts = []}];
find_msg_def('ProtoPartyDismissRequest') ->
    [#field{name = session, fnum = 1, rnum = 2,
	    type = bytes, occurrence = required, opts = []}];
find_msg_def('ProtoPartyJoinRequest') ->
    [#field{name = session, fnum = 1, rnum = 2,
	    type = bytes, occurrence = required, opts = []},
     #field{name = owner_id, fnum = 2, rnum = 3,
	    type = string, occurrence = required, opts = []}];
find_msg_def('ProtoTimeRange') ->
    [#field{name = start_at, fnum = 1, rnum = 2,
	    type = int64, occurrence = required, opts = []},
     #field{name = close_at, fnum = 2, rnum = 3,
	    type = int64, occurrence = required, opts = []}];
find_msg_def('ProtoPartyNotify') ->
    [#field{name = session, fnum = 1, rnum = 2,
	    type = bytes, occurrence = required, opts = []},
     #field{name = time_range, fnum = 2, rnum = 3,
	    type = {msg, 'ProtoTimeRange'}, occurrence = repeated,
	    opts = []},
     #field{name = talent_id, fnum = 3, rnum = 4,
	    type = int32, occurrence = required, opts = []},
     #field{name = talent_end_at, fnum = 4, rnum = 5,
	    type = int64, occurrence = required, opts = []},
     #field{name = remained_create_times, fnum = 5, rnum = 6,
	    type = int32, occurrence = required, opts = []},
     #field{name = remained_join_times, fnum = 6, rnum = 7,
	    type = int32, occurrence = required, opts = []}];
find_msg_def('ProtoPartyChatResponse') ->
    [#field{name = ret, fnum = 1, rnum = 2, type = int32,
	    occurrence = required, opts = []},
     #field{name = session, fnum = 2, rnum = 3, type = bytes,
	    occurrence = required, opts = []}];
find_msg_def('ProtoPartyKickResponse') ->
    [#field{name = ret, fnum = 1, rnum = 2, type = int32,
	    occurrence = required, opts = []},
     #field{name = session, fnum = 2, rnum = 3, type = bytes,
	    occurrence = required, opts = []}];
find_msg_def('ProtoPartyQuitResponse') ->
    [#field{name = ret, fnum = 1, rnum = 2, type = int32,
	    occurrence = required, opts = []},
     #field{name = session, fnum = 2, rnum = 3, type = bytes,
	    occurrence = required, opts = []}];
find_msg_def('ProtoPartyJoinResponse') ->
    [#field{name = ret, fnum = 1, rnum = 2, type = int32,
	    occurrence = required, opts = []},
     #field{name = session, fnum = 2, rnum = 3, type = bytes,
	    occurrence = required, opts = []}];
find_msg_def('ProtoPartyRoomResponse') ->
    [#field{name = ret, fnum = 1, rnum = 2, type = int32,
	    occurrence = required, opts = []},
     #field{name = session, fnum = 2, rnum = 3, type = bytes,
	    occurrence = required, opts = []},
     #field{name = rooms, fnum = 3, rnum = 4,
	    type = {msg, 'ProtoPartyRoomResponse.PartyRoom'},
	    occurrence = repeated, opts = []}];
find_msg_def('ProtoPartyStartResponse') ->
    [#field{name = ret, fnum = 1, rnum = 2, type = int32,
	    occurrence = required, opts = []},
     #field{name = session, fnum = 2, rnum = 3, type = bytes,
	    occurrence = required, opts = []}];
find_msg_def('ProtoPartyRoomRequest') ->
    [#field{name = session, fnum = 1, rnum = 2,
	    type = bytes, occurrence = required, opts = []}];
find_msg_def('ProtoSyncRequest') ->
    [#field{name = session, fnum = 1, rnum = 2,
	    type = bytes, occurrence = required, opts = []},
     #field{name = param, fnum = 2, rnum = 3, type = int32,
	    occurrence = required, opts = []}];
find_msg_def('ProtoPingRequest') ->
    [#field{name = session, fnum = 1, rnum = 2,
	    type = bytes, occurrence = required, opts = []}];
find_msg_def(_) -> error.


find_enum_def('NextOperate') ->
    [{'OPT_OK', 1}, {'OPT_CREATE_CLUB', 2}];
find_enum_def('Action') ->
    [{'ACT_INIT', 1}, {'ACT_UPDATE', 2}];
find_enum_def('PropertyType') ->
    [{'PROPERTY_STAFF_ATTACK', 1},
     {'PROPERTY_STAFF_DEFENSE', 2},
     {'PROPERTY_STAFF_MANAGE', 3},
     {'PROPERTY_STAFF_OPERATION', 4},
     {'PROPERTY_STAFF_ATTACK_PERCENT', 5},
     {'PROPERTY_STAFF_DEFENSE_PERCENT', 6},
     {'PROPERTY_STAFF_MANAGE_PERCENT', 7},
     {'PROPERTY_STAFF_OPERATION_PERCENT', 8},
     {'PROPERTY_UNIT_HP_PERCENT', 9},
     {'PROPERTY_UNIT_ATTACK_PERCENT', 10},
     {'PROPERTY_UNIT_DEFENSE_PERCENT', 11},
     {'PROPERTY_UNIT_HIT_PERCENT', 12},
     {'PROPERTY_UNIT_DODGE_PERCENT', 13},
     {'PROPERTY_UNIT_CRIT_PERCENT', 14},
     {'PROPERTY_UNIT_TOUGHNESS_PERCENT', 15},
     {'PROPERTY_UNIT_CRIT_MULTIPLE', 16},
     {'PROPERTY_UNIT_HURT_ADDIITON_TO_TERRAN', 17},
     {'PROPERTY_UNIT_HURT_ADDIITON_TO_PROTOSS', 18},
     {'PROPERTY_UNIT_HURT_ADDIITON_TO_ZERG', 19},
     {'PROPERTY_UNIT_HURT_ADDIITON_BY_TERRAN', 20},
     {'PROPERTY_UNIT_HURT_ADDIITON_BY_PROTOSS', 21},
     {'PROPERTY_UNIT_HURT_ADDIITON_BY_ZERG', 22},
     {'PROPERTY_UNIT_FINAL_HURT_ADDITION', 23},
     {'PROPERTY_UNIT_FINAL_HURT_REDUCE', 24}];
find_enum_def('SpecialEquipmentGenerateType') ->
    [{'SPECIAL_EQUIPMENT_GENERATE_NORMAL', 1},
     {'SPECIAL_EQUIPMENT_GENERATE_ADVANCE', 2}];
find_enum_def('PartyMessageType') ->
    [{'PARTY_MESSAGE_TYPE_CHAT', 1},
     {'PARTY_MESSAGE_TYPE_BUY', 2},
     {'PARTY_MESSAGE_TYPE_JOIN', 3},
     {'PARTY_MESSAGE_TYPE_LEAVE', 4}];
find_enum_def(_) -> error.


enum_symbol_by_value('NextOperate', Value) ->
    enum_symbol_by_value_NextOperate(Value);
enum_symbol_by_value('Action', Value) ->
    enum_symbol_by_value_Action(Value);
enum_symbol_by_value('PropertyType', Value) ->
    enum_symbol_by_value_PropertyType(Value);
enum_symbol_by_value('SpecialEquipmentGenerateType',
		     Value) ->
    enum_symbol_by_value_SpecialEquipmentGenerateType(Value);
enum_symbol_by_value('PartyMessageType', Value) ->
    enum_symbol_by_value_PartyMessageType(Value).


enum_value_by_symbol('NextOperate', Sym) ->
    enum_value_by_symbol_NextOperate(Sym);
enum_value_by_symbol('Action', Sym) ->
    enum_value_by_symbol_Action(Sym);
enum_value_by_symbol('PropertyType', Sym) ->
    enum_value_by_symbol_PropertyType(Sym);
enum_value_by_symbol('SpecialEquipmentGenerateType',
		     Sym) ->
    enum_value_by_symbol_SpecialEquipmentGenerateType(Sym);
enum_value_by_symbol('PartyMessageType', Sym) ->
    enum_value_by_symbol_PartyMessageType(Sym).


enum_symbol_by_value_NextOperate(1) -> 'OPT_OK';
enum_symbol_by_value_NextOperate(2) ->
    'OPT_CREATE_CLUB'.


enum_value_by_symbol_NextOperate('OPT_OK') -> 1;
enum_value_by_symbol_NextOperate('OPT_CREATE_CLUB') ->
    2.

enum_symbol_by_value_Action(1) -> 'ACT_INIT';
enum_symbol_by_value_Action(2) -> 'ACT_UPDATE'.


enum_value_by_symbol_Action('ACT_INIT') -> 1;
enum_value_by_symbol_Action('ACT_UPDATE') -> 2.

enum_symbol_by_value_PropertyType(1) ->
    'PROPERTY_STAFF_ATTACK';
enum_symbol_by_value_PropertyType(2) ->
    'PROPERTY_STAFF_DEFENSE';
enum_symbol_by_value_PropertyType(3) ->
    'PROPERTY_STAFF_MANAGE';
enum_symbol_by_value_PropertyType(4) ->
    'PROPERTY_STAFF_OPERATION';
enum_symbol_by_value_PropertyType(5) ->
    'PROPERTY_STAFF_ATTACK_PERCENT';
enum_symbol_by_value_PropertyType(6) ->
    'PROPERTY_STAFF_DEFENSE_PERCENT';
enum_symbol_by_value_PropertyType(7) ->
    'PROPERTY_STAFF_MANAGE_PERCENT';
enum_symbol_by_value_PropertyType(8) ->
    'PROPERTY_STAFF_OPERATION_PERCENT';
enum_symbol_by_value_PropertyType(9) ->
    'PROPERTY_UNIT_HP_PERCENT';
enum_symbol_by_value_PropertyType(10) ->
    'PROPERTY_UNIT_ATTACK_PERCENT';
enum_symbol_by_value_PropertyType(11) ->
    'PROPERTY_UNIT_DEFENSE_PERCENT';
enum_symbol_by_value_PropertyType(12) ->
    'PROPERTY_UNIT_HIT_PERCENT';
enum_symbol_by_value_PropertyType(13) ->
    'PROPERTY_UNIT_DODGE_PERCENT';
enum_symbol_by_value_PropertyType(14) ->
    'PROPERTY_UNIT_CRIT_PERCENT';
enum_symbol_by_value_PropertyType(15) ->
    'PROPERTY_UNIT_TOUGHNESS_PERCENT';
enum_symbol_by_value_PropertyType(16) ->
    'PROPERTY_UNIT_CRIT_MULTIPLE';
enum_symbol_by_value_PropertyType(17) ->
    'PROPERTY_UNIT_HURT_ADDIITON_TO_TERRAN';
enum_symbol_by_value_PropertyType(18) ->
    'PROPERTY_UNIT_HURT_ADDIITON_TO_PROTOSS';
enum_symbol_by_value_PropertyType(19) ->
    'PROPERTY_UNIT_HURT_ADDIITON_TO_ZERG';
enum_symbol_by_value_PropertyType(20) ->
    'PROPERTY_UNIT_HURT_ADDIITON_BY_TERRAN';
enum_symbol_by_value_PropertyType(21) ->
    'PROPERTY_UNIT_HURT_ADDIITON_BY_PROTOSS';
enum_symbol_by_value_PropertyType(22) ->
    'PROPERTY_UNIT_HURT_ADDIITON_BY_ZERG';
enum_symbol_by_value_PropertyType(23) ->
    'PROPERTY_UNIT_FINAL_HURT_ADDITION';
enum_symbol_by_value_PropertyType(24) ->
    'PROPERTY_UNIT_FINAL_HURT_REDUCE'.


enum_value_by_symbol_PropertyType('PROPERTY_STAFF_ATTACK') ->
    1;
enum_value_by_symbol_PropertyType('PROPERTY_STAFF_DEFENSE') ->
    2;
enum_value_by_symbol_PropertyType('PROPERTY_STAFF_MANAGE') ->
    3;
enum_value_by_symbol_PropertyType('PROPERTY_STAFF_OPERATION') ->
    4;
enum_value_by_symbol_PropertyType('PROPERTY_STAFF_ATTACK_PERCENT') ->
    5;
enum_value_by_symbol_PropertyType('PROPERTY_STAFF_DEFENSE_PERCENT') ->
    6;
enum_value_by_symbol_PropertyType('PROPERTY_STAFF_MANAGE_PERCENT') ->
    7;
enum_value_by_symbol_PropertyType('PROPERTY_STAFF_OPERATION_PERCENT') ->
    8;
enum_value_by_symbol_PropertyType('PROPERTY_UNIT_HP_PERCENT') ->
    9;
enum_value_by_symbol_PropertyType('PROPERTY_UNIT_ATTACK_PERCENT') ->
    10;
enum_value_by_symbol_PropertyType('PROPERTY_UNIT_DEFENSE_PERCENT') ->
    11;
enum_value_by_symbol_PropertyType('PROPERTY_UNIT_HIT_PERCENT') ->
    12;
enum_value_by_symbol_PropertyType('PROPERTY_UNIT_DODGE_PERCENT') ->
    13;
enum_value_by_symbol_PropertyType('PROPERTY_UNIT_CRIT_PERCENT') ->
    14;
enum_value_by_symbol_PropertyType('PROPERTY_UNIT_TOUGHNESS_PERCENT') ->
    15;
enum_value_by_symbol_PropertyType('PROPERTY_UNIT_CRIT_MULTIPLE') ->
    16;
enum_value_by_symbol_PropertyType('PROPERTY_UNIT_HURT_ADDIITON_TO_TERRAN') ->
    17;
enum_value_by_symbol_PropertyType('PROPERTY_UNIT_HURT_ADDIITON_TO_PROTOSS') ->
    18;
enum_value_by_symbol_PropertyType('PROPERTY_UNIT_HURT_ADDIITON_TO_ZERG') ->
    19;
enum_value_by_symbol_PropertyType('PROPERTY_UNIT_HURT_ADDIITON_BY_TERRAN') ->
    20;
enum_value_by_symbol_PropertyType('PROPERTY_UNIT_HURT_ADDIITON_BY_PROTOSS') ->
    21;
enum_value_by_symbol_PropertyType('PROPERTY_UNIT_HURT_ADDIITON_BY_ZERG') ->
    22;
enum_value_by_symbol_PropertyType('PROPERTY_UNIT_FINAL_HURT_ADDITION') ->
    23;
enum_value_by_symbol_PropertyType('PROPERTY_UNIT_FINAL_HURT_REDUCE') ->
    24.

enum_symbol_by_value_SpecialEquipmentGenerateType(1) ->
    'SPECIAL_EQUIPMENT_GENERATE_NORMAL';
enum_symbol_by_value_SpecialEquipmentGenerateType(2) ->
    'SPECIAL_EQUIPMENT_GENERATE_ADVANCE'.


enum_value_by_symbol_SpecialEquipmentGenerateType('SPECIAL_EQUIPMENT_GENERATE_NORMAL') ->
    1;
enum_value_by_symbol_SpecialEquipmentGenerateType('SPECIAL_EQUIPMENT_GENERATE_ADVANCE') ->
    2.

enum_symbol_by_value_PartyMessageType(1) ->
    'PARTY_MESSAGE_TYPE_CHAT';
enum_symbol_by_value_PartyMessageType(2) ->
    'PARTY_MESSAGE_TYPE_BUY';
enum_symbol_by_value_PartyMessageType(3) ->
    'PARTY_MESSAGE_TYPE_JOIN';
enum_symbol_by_value_PartyMessageType(4) ->
    'PARTY_MESSAGE_TYPE_LEAVE'.


enum_value_by_symbol_PartyMessageType('PARTY_MESSAGE_TYPE_CHAT') ->
    1;
enum_value_by_symbol_PartyMessageType('PARTY_MESSAGE_TYPE_BUY') ->
    2;
enum_value_by_symbol_PartyMessageType('PARTY_MESSAGE_TYPE_JOIN') ->
    3;
enum_value_by_symbol_PartyMessageType('PARTY_MESSAGE_TYPE_LEAVE') ->
    4.


get_service_names() -> [].


get_service_def(_) -> error.


get_rpc_names(_) -> error.


find_rpc_def(_, _) -> error.



-spec fetch_rpc_def(_, _) -> no_return().
fetch_rpc_def(ServiceName, RpcName) ->
    erlang:error({no_such_rpc, ServiceName, RpcName}).


get_package_name() -> undefined.



gpb_version_as_string() ->
    "3.25.2".

gpb_version_as_list() ->
    [3,25,2].
